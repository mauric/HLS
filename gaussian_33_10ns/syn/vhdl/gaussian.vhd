-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.2
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gaussian is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_r_address1 : OUT STD_LOGIC_VECTOR (20 downto 0);
    in_r_ce1 : OUT STD_LOGIC;
    in_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of gaussian is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "gaussian,hls_ip_2013_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=117855585,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=1888,HLS_SYN_LUT=3128}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_ST_st50_fsm_49 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_ST_st51_fsm_50 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_ST_st52_fsm_51 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_ST_st53_fsm_52 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_ST_st54_fsm_53 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_ST_st55_fsm_54 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_ST_st56_fsm_55 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_ST_st57_fsm_56 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_ST_st58_fsm_57 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_ST_st59_fsm_58 : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3D7929ED : STD_LOGIC_VECTOR (31 downto 0) := "00111101011110010010100111101101";
    constant ap_const_lv32_3E193AF7 : STD_LOGIC_VECTOR (31 downto 0) := "00111110000110010011101011110111";
    constant ap_const_lv32_3EBC7736 : STD_LOGIC_VECTOR (31 downto 0) := "00111110101111000111011100110110";
    constant ap_const_lv32_3E19389B : STD_LOGIC_VECTOR (31 downto 0) := "00111110000110010011100010011011";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_436 : STD_LOGIC_VECTOR (10 downto 0) := "10000110110";
    constant ap_const_lv11_77E : STD_LOGIC_VECTOR (10 downto 0) := "11101111110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal reg_185 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_189 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_179_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_193 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_163_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_159_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_12_fu_210_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_12_reg_525 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_fu_216_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_531 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp6_i_fu_228_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp6_i_reg_541 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_fu_234_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_reg_546 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_i_trn_cast_fu_246_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4_i_trn_cast_reg_554 : STD_LOGIC_VECTOR (23 downto 0);
    signal exitcond1_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_addr_cast_fu_280_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr_fu_274_p2_temp: signed (23-1 downto 0);
    signal p_addr_cast_reg_560 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_i_trn_cast_fu_299_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_i_trn_cast_reg_570 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_i3_fu_318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_i_trn_cast_fu_328_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_12_i_trn_cast_reg_591 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_reg_602 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i5_fu_345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_addr8_cast_fu_378_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr8_fu_372_p2_temp: signed (23-1 downto 0);
    signal p_addr8_cast_reg_612 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_168_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_reg_623 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_i6_fu_396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_reg_633 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_addr7_fu_459_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr7_reg_648 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr4_fu_464_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr4_reg_653 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr1_fu_469_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr1_reg_658 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_22_i7_fu_490_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in_load_7_reg_678 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_load_8_reg_688 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_i8_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_i9_fu_508_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_i1_fu_513_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_i1_fu_517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_521_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_713 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar1_i_reg_135 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_i_reg_147 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_294_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_313_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_391_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_477_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_159_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_159_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_163_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_163_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_168_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_176_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_179_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_182_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_250_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_1_fu_262_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl_cast_fu_258_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl1_cast_fu_270_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr_fu_274_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr2_fu_284_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr2_fu_284_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_2_fu_294_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr2_fu_284_p2_temp: signed (24-1 downto 0);
    signal p_addr3_fu_303_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr3_fu_303_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_3_fu_313_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr3_fu_303_p2_temp: signed (24-1 downto 0);
    signal p_addr5_fu_331_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4_fu_340_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr5_fu_331_p2_temp: signed (24-1 downto 0);
    signal tmp_5_fu_350_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_6_fu_361_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl2_cast_fu_357_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl3_cast_fu_368_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr8_fu_372_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr9_fu_382_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr9_fu_382_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_7_fu_391_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr9_fu_382_p2_temp: signed (24-1 downto 0);
    signal p_addr11_fu_401_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_fu_409_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr11_fu_401_p2_temp: signed (24-1 downto 0);
    signal p_addr10_fu_414_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_9_fu_422_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr10_fu_414_p2_temp: signed (24-1 downto 0);
    signal tmp_s_fu_427_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_10_fu_438_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl4_cast_fu_434_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl5_cast_fu_445_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr6_fu_449_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr7_fu_459_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr6_cast_fu_455_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr6_fu_449_p2_temp: signed (23-1 downto 0);
    signal p_addr4_fu_464_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr1_fu_469_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_11_fu_477_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr7_reg_648_temp: signed (24-1 downto 0);
    signal tmp_12_fu_485_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr4_reg_653_temp: signed (24-1 downto 0);
    signal tmp_13_fu_498_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr1_reg_658_temp: signed (24-1 downto 0);
    signal grp_fu_176_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_159_ce : STD_LOGIC;
    signal grp_fu_163_ce : STD_LOGIC;
    signal grp_fu_168_ce : STD_LOGIC;
    signal grp_fu_176_ce : STD_LOGIC;
    signal grp_fu_179_ce : STD_LOGIC;
    signal grp_fu_182_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component gaussian_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gaussian_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gaussian_fptoui_32ns_64_4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component gaussian_sitofp_64ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    gaussian_fadd_32ns_32ns_32_5_full_dsp_U1 : component gaussian_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_159_p0,
        din1 => grp_fu_159_p1,
        ce => grp_fu_159_ce,
        dout => grp_fu_159_p2);

    gaussian_fmul_32ns_32ns_32_4_max_dsp_U2 : component gaussian_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 2,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_163_p0,
        din1 => grp_fu_163_p1,
        ce => grp_fu_163_ce,
        dout => grp_fu_163_p2);

    gaussian_fmul_32ns_32ns_32_4_max_dsp_U3 : component gaussian_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 3,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_168_p0,
        din1 => grp_fu_168_p1,
        ce => grp_fu_168_ce,
        dout => grp_fu_168_p2);

    gaussian_fptoui_32ns_64_4_U4 : component gaussian_fptoui_32ns_64_4
    generic map (
        ID => 4,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_176_p0,
        ce => grp_fu_176_ce,
        dout => grp_fu_176_p1);

    gaussian_sitofp_64ns_32_6_U5 : component gaussian_sitofp_64ns_32_6
    generic map (
        ID => 5,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_179_p0,
        ce => grp_fu_179_ce,
        dout => grp_fu_179_p1);

    gaussian_sitofp_64ns_32_6_U6 : component gaussian_sitofp_64ns_32_6
    generic map (
        ID => 6,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_182_p0,
        ce => grp_fu_182_ce,
        dout => grp_fu_182_p1);




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- indvar1_i_reg_135 assign process. --
    indvar1_i_reg_135_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) and not((exitcond1_fu_240_p2 = ap_const_lv1_0)))) then 
                indvar1_i_reg_135 <= i_reg_531;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                indvar1_i_reg_135 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- indvar_i_reg_147 assign process. --
    indvar_i_reg_147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_fu_222_p2))) then 
                indvar_i_reg_147 <= ap_const_lv11_0;
            elsif ((ap_ST_st59_fsm_58 = ap_CS_fsm)) then 
                indvar_i_reg_147 <= j_reg_546;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                i_reg_531 <= i_fu_216_p2;
                tmp_i_12_reg_525 <= tmp_i_12_fu_210_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then
                in_load_7_reg_678 <= in_r_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then
                in_load_8_reg_688 <= in_r_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then
                j_reg_546 <= j_fu_234_p2;
                tmp6_i_reg_541 <= tmp6_i_fu_228_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st18_fsm_17 = ap_CS_fsm)) then
                p_addr1_reg_658 <= p_addr1_fu_469_p2;
                p_addr4_reg_653 <= p_addr4_fu_464_p2;
                p_addr7_reg_648 <= p_addr7_fu_459_p2;
                tmp_8_reg_633(0) <= tmp_8_fu_409_p1(0);
    tmp_8_reg_633(1) <= tmp_8_fu_409_p1(1);
    tmp_8_reg_633(2) <= tmp_8_fu_409_p1(2);
    tmp_8_reg_633(3) <= tmp_8_fu_409_p1(3);
    tmp_8_reg_633(4) <= tmp_8_fu_409_p1(4);
    tmp_8_reg_633(5) <= tmp_8_fu_409_p1(5);
    tmp_8_reg_633(6) <= tmp_8_fu_409_p1(6);
    tmp_8_reg_633(7) <= tmp_8_fu_409_p1(7);
    tmp_8_reg_633(8) <= tmp_8_fu_409_p1(8);
    tmp_8_reg_633(9) <= tmp_8_fu_409_p1(9);
    tmp_8_reg_633(10) <= tmp_8_fu_409_p1(10);
    tmp_8_reg_633(11) <= tmp_8_fu_409_p1(11);
    tmp_8_reg_633(12) <= tmp_8_fu_409_p1(12);
    tmp_8_reg_633(13) <= tmp_8_fu_409_p1(13);
    tmp_8_reg_633(14) <= tmp_8_fu_409_p1(14);
    tmp_8_reg_633(15) <= tmp_8_fu_409_p1(15);
    tmp_8_reg_633(16) <= tmp_8_fu_409_p1(16);
    tmp_8_reg_633(17) <= tmp_8_fu_409_p1(17);
    tmp_8_reg_633(18) <= tmp_8_fu_409_p1(18);
    tmp_8_reg_633(19) <= tmp_8_fu_409_p1(19);
    tmp_8_reg_633(20) <= tmp_8_fu_409_p1(20);
    tmp_8_reg_633(21) <= tmp_8_fu_409_p1(21);
    tmp_8_reg_633(22) <= tmp_8_fu_409_p1(22);
    tmp_8_reg_633(23) <= tmp_8_fu_409_p1(23);
    tmp_8_reg_633(24) <= tmp_8_fu_409_p1(24);
    tmp_8_reg_633(25) <= tmp_8_fu_409_p1(25);
    tmp_8_reg_633(26) <= tmp_8_fu_409_p1(26);
    tmp_8_reg_633(27) <= tmp_8_fu_409_p1(27);
    tmp_8_reg_633(28) <= tmp_8_fu_409_p1(28);
    tmp_8_reg_633(29) <= tmp_8_fu_409_p1(29);
    tmp_8_reg_633(30) <= tmp_8_fu_409_p1(30);
    tmp_8_reg_633(31) <= tmp_8_fu_409_p1(31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then
                p_addr8_cast_reg_612(7) <= p_addr8_cast_fu_378_p1(7);
    p_addr8_cast_reg_612(8) <= p_addr8_cast_fu_378_p1(8);
    p_addr8_cast_reg_612(9) <= p_addr8_cast_fu_378_p1(9);
    p_addr8_cast_reg_612(10) <= p_addr8_cast_fu_378_p1(10);
    p_addr8_cast_reg_612(11) <= p_addr8_cast_fu_378_p1(11);
    p_addr8_cast_reg_612(12) <= p_addr8_cast_fu_378_p1(12);
    p_addr8_cast_reg_612(13) <= p_addr8_cast_fu_378_p1(13);
    p_addr8_cast_reg_612(14) <= p_addr8_cast_fu_378_p1(14);
    p_addr8_cast_reg_612(15) <= p_addr8_cast_fu_378_p1(15);
    p_addr8_cast_reg_612(16) <= p_addr8_cast_fu_378_p1(16);
    p_addr8_cast_reg_612(17) <= p_addr8_cast_fu_378_p1(17);
    p_addr8_cast_reg_612(18) <= p_addr8_cast_fu_378_p1(18);
    p_addr8_cast_reg_612(19) <= p_addr8_cast_fu_378_p1(19);
    p_addr8_cast_reg_612(20) <= p_addr8_cast_fu_378_p1(20);
    p_addr8_cast_reg_612(21) <= p_addr8_cast_fu_378_p1(21);
    p_addr8_cast_reg_612(22) <= p_addr8_cast_fu_378_p1(22);
    p_addr8_cast_reg_612(23) <= p_addr8_cast_fu_378_p1(23);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) and (exitcond1_fu_240_p2 = ap_const_lv1_0))) then
                p_addr_cast_reg_560(7) <= p_addr_cast_fu_280_p1(7);
    p_addr_cast_reg_560(8) <= p_addr_cast_fu_280_p1(8);
    p_addr_cast_reg_560(9) <= p_addr_cast_fu_280_p1(9);
    p_addr_cast_reg_560(10) <= p_addr_cast_fu_280_p1(10);
    p_addr_cast_reg_560(11) <= p_addr_cast_fu_280_p1(11);
    p_addr_cast_reg_560(12) <= p_addr_cast_fu_280_p1(12);
    p_addr_cast_reg_560(13) <= p_addr_cast_fu_280_p1(13);
    p_addr_cast_reg_560(14) <= p_addr_cast_fu_280_p1(14);
    p_addr_cast_reg_560(15) <= p_addr_cast_fu_280_p1(15);
    p_addr_cast_reg_560(16) <= p_addr_cast_fu_280_p1(16);
    p_addr_cast_reg_560(17) <= p_addr_cast_fu_280_p1(17);
    p_addr_cast_reg_560(18) <= p_addr_cast_fu_280_p1(18);
    p_addr_cast_reg_560(19) <= p_addr_cast_fu_280_p1(19);
    p_addr_cast_reg_560(20) <= p_addr_cast_fu_280_p1(20);
    p_addr_cast_reg_560(21) <= p_addr_cast_fu_280_p1(21);
    p_addr_cast_reg_560(22) <= p_addr_cast_fu_280_p1(22);
    p_addr_cast_reg_560(23) <= p_addr_cast_fu_280_p1(23);
                tmp_4_i_trn_cast_reg_554(0) <= tmp_4_i_trn_cast_fu_246_p1(0);
    tmp_4_i_trn_cast_reg_554(1) <= tmp_4_i_trn_cast_fu_246_p1(1);
    tmp_4_i_trn_cast_reg_554(2) <= tmp_4_i_trn_cast_fu_246_p1(2);
    tmp_4_i_trn_cast_reg_554(3) <= tmp_4_i_trn_cast_fu_246_p1(3);
    tmp_4_i_trn_cast_reg_554(4) <= tmp_4_i_trn_cast_fu_246_p1(4);
    tmp_4_i_trn_cast_reg_554(5) <= tmp_4_i_trn_cast_fu_246_p1(5);
    tmp_4_i_trn_cast_reg_554(6) <= tmp_4_i_trn_cast_fu_246_p1(6);
    tmp_4_i_trn_cast_reg_554(7) <= tmp_4_i_trn_cast_fu_246_p1(7);
    tmp_4_i_trn_cast_reg_554(8) <= tmp_4_i_trn_cast_fu_246_p1(8);
    tmp_4_i_trn_cast_reg_554(9) <= tmp_4_i_trn_cast_fu_246_p1(9);
    tmp_4_i_trn_cast_reg_554(10) <= tmp_4_i_trn_cast_fu_246_p1(10);
                tmp_8_i_trn_cast_reg_570(0) <= tmp_8_i_trn_cast_fu_299_p1(0);
    tmp_8_i_trn_cast_reg_570(1) <= tmp_8_i_trn_cast_fu_299_p1(1);
    tmp_8_i_trn_cast_reg_570(2) <= tmp_8_i_trn_cast_fu_299_p1(2);
    tmp_8_i_trn_cast_reg_570(3) <= tmp_8_i_trn_cast_fu_299_p1(3);
    tmp_8_i_trn_cast_reg_570(4) <= tmp_8_i_trn_cast_fu_299_p1(4);
    tmp_8_i_trn_cast_reg_570(5) <= tmp_8_i_trn_cast_fu_299_p1(5);
    tmp_8_i_trn_cast_reg_570(6) <= tmp_8_i_trn_cast_fu_299_p1(6);
    tmp_8_i_trn_cast_reg_570(7) <= tmp_8_i_trn_cast_fu_299_p1(7);
    tmp_8_i_trn_cast_reg_570(8) <= tmp_8_i_trn_cast_fu_299_p1(8);
    tmp_8_i_trn_cast_reg_570(9) <= tmp_8_i_trn_cast_fu_299_p1(9);
    tmp_8_i_trn_cast_reg_570(10) <= tmp_8_i_trn_cast_fu_299_p1(10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st4_fsm_3 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm))) then
                reg_185 <= in_r_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st4_fsm_3 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm))) then
                reg_189 <= in_r_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st20_fsm_19 = ap_CS_fsm) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st25_fsm_24 = ap_CS_fsm) or (ap_ST_st30_fsm_29 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st45_fsm_44 = ap_CS_fsm))) then
                reg_193 <= grp_fu_179_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st24_fsm_23 = ap_CS_fsm) or (ap_ST_st29_fsm_28 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st44_fsm_43 = ap_CS_fsm) or (ap_ST_st49_fsm_48 = ap_CS_fsm))) then
                reg_198 <= grp_fu_163_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st24_fsm_23 = ap_CS_fsm) or (ap_ST_st29_fsm_28 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st44_fsm_43 = ap_CS_fsm) or (ap_ST_st49_fsm_48 = ap_CS_fsm) or (ap_ST_st54_fsm_53 = ap_CS_fsm))) then
                reg_204 <= grp_fu_159_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then
                tmp_10_i_reg_623 <= grp_fu_168_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then
                tmp_12_i_trn_cast_reg_591(0) <= tmp_12_i_trn_cast_fu_328_p1(0);
    tmp_12_i_trn_cast_reg_591(1) <= tmp_12_i_trn_cast_fu_328_p1(1);
    tmp_12_i_trn_cast_reg_591(2) <= tmp_12_i_trn_cast_fu_328_p1(2);
    tmp_12_i_trn_cast_reg_591(3) <= tmp_12_i_trn_cast_fu_328_p1(3);
    tmp_12_i_trn_cast_reg_591(4) <= tmp_12_i_trn_cast_fu_328_p1(4);
    tmp_12_i_trn_cast_reg_591(5) <= tmp_12_i_trn_cast_fu_328_p1(5);
    tmp_12_i_trn_cast_reg_591(6) <= tmp_12_i_trn_cast_fu_328_p1(6);
    tmp_12_i_trn_cast_reg_591(7) <= tmp_12_i_trn_cast_fu_328_p1(7);
    tmp_12_i_trn_cast_reg_591(8) <= tmp_12_i_trn_cast_fu_328_p1(8);
    tmp_12_i_trn_cast_reg_591(9) <= tmp_12_i_trn_cast_fu_328_p1(9);
    tmp_12_i_trn_cast_reg_591(10) <= tmp_12_i_trn_cast_fu_328_p1(10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st58_fsm_57 = ap_CS_fsm)) then
                tmp_14_reg_713 <= tmp_14_fu_521_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then
                tmp_i_reg_602 <= grp_fu_182_p1;
            end if;
        end if;
    end process;
    tmp_4_i_trn_cast_reg_554(23 downto 11) <= "0000000000000";
    p_addr_cast_reg_560(6 downto 0) <= "0000000";
    tmp_8_i_trn_cast_reg_570(23 downto 11) <= "0000000000000";
    tmp_12_i_trn_cast_reg_591(23 downto 11) <= "0000000000000";
    p_addr8_cast_reg_612(6 downto 0) <= "0000000";
    tmp_8_reg_633(63 downto 32) <= "00000000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , exitcond1_fu_240_p2 , exitcond_fu_222_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond_fu_222_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((exitcond1_fu_240_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st45_fsm_44;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st47_fsm_46 => 
                ap_NS_fsm <= ap_ST_st48_fsm_47;
            when ap_ST_st48_fsm_47 => 
                ap_NS_fsm <= ap_ST_st49_fsm_48;
            when ap_ST_st49_fsm_48 => 
                ap_NS_fsm <= ap_ST_st50_fsm_49;
            when ap_ST_st50_fsm_49 => 
                ap_NS_fsm <= ap_ST_st51_fsm_50;
            when ap_ST_st51_fsm_50 => 
                ap_NS_fsm <= ap_ST_st52_fsm_51;
            when ap_ST_st52_fsm_51 => 
                ap_NS_fsm <= ap_ST_st53_fsm_52;
            when ap_ST_st53_fsm_52 => 
                ap_NS_fsm <= ap_ST_st54_fsm_53;
            when ap_ST_st54_fsm_53 => 
                ap_NS_fsm <= ap_ST_st55_fsm_54;
            when ap_ST_st55_fsm_54 => 
                ap_NS_fsm <= ap_ST_st56_fsm_55;
            when ap_ST_st56_fsm_55 => 
                ap_NS_fsm <= ap_ST_st57_fsm_56;
            when ap_ST_st57_fsm_56 => 
                ap_NS_fsm <= ap_ST_st58_fsm_57;
            when ap_ST_st58_fsm_57 => 
                ap_NS_fsm <= ap_ST_st59_fsm_58;
            when ap_ST_st59_fsm_58 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm, exitcond_fu_222_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_222_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond_fu_222_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_222_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_240_p2 <= "1" when (indvar_i_reg_147 = ap_const_lv11_77E) else "0";
    exitcond_fu_222_p2 <= "1" when (indvar1_i_reg_135 = ap_const_lv11_436) else "0";
    grp_fu_159_ce <= ap_const_logic_1;

    -- grp_fu_159_p0 assign process. --
    grp_fu_159_p0_assign_proc : process(ap_CS_fsm, reg_198, reg_204)
    begin
        if (((ap_ST_st20_fsm_19 = ap_CS_fsm) or (ap_ST_st25_fsm_24 = ap_CS_fsm) or (ap_ST_st30_fsm_29 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st45_fsm_44 = ap_CS_fsm) or (ap_ST_st50_fsm_49 = ap_CS_fsm))) then 
            grp_fu_159_p0 <= reg_204;
        elsif ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then 
            grp_fu_159_p0 <= reg_198;
        else 
            grp_fu_159_p0 <= reg_204;
        end if; 
    end process;


    -- grp_fu_159_p1 assign process. --
    grp_fu_159_p1_assign_proc : process(ap_CS_fsm, reg_198, tmp_10_i_reg_623)
    begin
        if (((ap_ST_st20_fsm_19 = ap_CS_fsm) or (ap_ST_st25_fsm_24 = ap_CS_fsm) or (ap_ST_st30_fsm_29 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st45_fsm_44 = ap_CS_fsm) or (ap_ST_st50_fsm_49 = ap_CS_fsm))) then 
            grp_fu_159_p1 <= reg_198;
        elsif ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then 
            grp_fu_159_p1 <= tmp_10_i_reg_623;
        else 
            grp_fu_159_p1 <= tmp_10_i_reg_623;
        end if; 
    end process;

    grp_fu_163_ce <= ap_const_logic_1;
    grp_fu_163_p0 <= reg_193;

    -- grp_fu_163_p1 assign process. --
    grp_fu_163_p1_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st31_fsm_30 = ap_CS_fsm)) then 
            grp_fu_163_p1 <= ap_const_lv32_3E19389B;
        elsif ((ap_ST_st26_fsm_25 = ap_CS_fsm)) then 
            grp_fu_163_p1 <= ap_const_lv32_3EBC7736;
        elsif (((ap_ST_st21_fsm_20 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm))) then 
            grp_fu_163_p1 <= ap_const_lv32_3E193AF7;
        elsif (((ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st46_fsm_45 = ap_CS_fsm))) then 
            grp_fu_163_p1 <= ap_const_lv32_3D7929ED;
        else 
            grp_fu_163_p1 <= ap_const_lv32_3E19389B;
        end if; 
    end process;

    grp_fu_168_ce <= ap_const_logic_1;
    grp_fu_168_p0 <= tmp_i_reg_602;
    grp_fu_168_p1 <= ap_const_lv32_3E193AF7;
    grp_fu_176_ce <= ap_const_logic_1;
    grp_fu_176_p0 <= reg_204;
    grp_fu_179_ce <= ap_const_logic_1;

    -- grp_fu_179_p0 assign process. --
    grp_fu_179_p0_assign_proc : process(ap_CS_fsm, tmp_6_i3_fu_318_p1, tmp_14_i5_fu_345_p1, tmp_18_i6_fu_396_p1, tmp_22_i7_fu_490_p1, tmp_26_i8_fu_503_p1, tmp_30_i9_fu_508_p1, tmp_34_i1_fu_513_p1, tmp_38_i1_fu_517_p1)
    begin
        if ((ap_ST_st40_fsm_39 = ap_CS_fsm)) then 
            grp_fu_179_p0 <= tmp_38_i1_fu_517_p1;
        elsif ((ap_ST_st35_fsm_34 = ap_CS_fsm)) then 
            grp_fu_179_p0 <= tmp_34_i1_fu_513_p1;
        elsif ((ap_ST_st30_fsm_29 = ap_CS_fsm)) then 
            grp_fu_179_p0 <= tmp_30_i9_fu_508_p1;
        elsif ((ap_ST_st25_fsm_24 = ap_CS_fsm)) then 
            grp_fu_179_p0 <= tmp_26_i8_fu_503_p1;
        elsif ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then 
            grp_fu_179_p0 <= tmp_22_i7_fu_490_p1;
        elsif ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then 
            grp_fu_179_p0 <= tmp_18_i6_fu_396_p1;
        elsif ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            grp_fu_179_p0 <= tmp_14_i5_fu_345_p1;
        elsif ((ap_ST_st5_fsm_4 = ap_CS_fsm)) then 
            grp_fu_179_p0 <= tmp_6_i3_fu_318_p1;
        else 
            grp_fu_179_p0 <= tmp_38_i1_fu_517_p1;
        end if; 
    end process;

    grp_fu_182_ce <= ap_const_logic_1;
    grp_fu_182_p0 <= std_logic_vector(resize(unsigned(reg_189),64));
    i_fu_216_p2 <= std_logic_vector(unsigned(indvar1_i_reg_135) + unsigned(ap_const_lv11_1));

    -- in_r_address0 assign process. --
    in_r_address0_assign_proc : process(ap_CS_fsm, tmp_8_fu_409_p1, tmp_2_fu_294_p1, tmp_4_fu_340_p1, tmp_7_fu_391_p1, tmp_11_fu_477_p1, tmp_13_fu_498_p1)
    begin
        if ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_13_fu_498_p1(21 - 1 downto 0);
        elsif ((ap_ST_st19_fsm_18 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_11_fu_477_p1(21 - 1 downto 0);
        elsif ((ap_ST_st18_fsm_17 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_8_fu_409_p1(21 - 1 downto 0);
        elsif ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_7_fu_391_p1(21 - 1 downto 0);
        elsif ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_4_fu_340_p1(21 - 1 downto 0);
        elsif ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_2_fu_294_p1(21 - 1 downto 0);
        else 
            in_r_address0 <= tmp_13_fu_498_p1(21 - 1 downto 0);
        end if; 
    end process;


    -- in_r_address1 assign process. --
    in_r_address1_assign_proc : process(ap_CS_fsm, tmp_3_fu_313_p1, tmp_9_fu_422_p1, tmp_12_fu_485_p1)
    begin
        if ((ap_ST_st19_fsm_18 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_12_fu_485_p1(21 - 1 downto 0);
        elsif ((ap_ST_st18_fsm_17 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_9_fu_422_p1(21 - 1 downto 0);
        elsif ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_3_fu_313_p1(21 - 1 downto 0);
        else 
            in_r_address1 <= tmp_12_fu_485_p1(21 - 1 downto 0);
        end if; 
    end process;


    -- in_r_ce0 assign process. --
    in_r_ce0_assign_proc : process(ap_CS_fsm, exitcond1_fu_240_p2)
    begin
        if (((ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st20_fsm_19 = ap_CS_fsm) or ((ap_ST_st3_fsm_2 = ap_CS_fsm) and (exitcond1_fu_240_p2 = ap_const_lv1_0)) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm))) then 
            in_r_ce0 <= ap_const_logic_1;
        else 
            in_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- in_r_ce1 assign process. --
    in_r_ce1_assign_proc : process(ap_CS_fsm, exitcond1_fu_240_p2)
    begin
        if (((ap_ST_st19_fsm_18 = ap_CS_fsm) or ((ap_ST_st3_fsm_2 = ap_CS_fsm) and (exitcond1_fu_240_p2 = ap_const_lv1_0)) or (ap_ST_st18_fsm_17 = ap_CS_fsm))) then 
            in_r_ce1 <= ap_const_logic_1;
        else 
            in_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_234_p2 <= std_logic_vector(unsigned(indvar_i_reg_147) + unsigned(ap_const_lv11_1));
    out_r_address0 <= tmp_8_reg_633(21 - 1 downto 0);

    -- out_r_ce0 assign process. --
    out_r_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st59_fsm_58 = ap_CS_fsm)) then 
            out_r_ce0 <= ap_const_logic_1;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_r_d0 <= tmp_14_reg_713;

    -- out_r_we0 assign process. --
    out_r_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st59_fsm_58 = ap_CS_fsm))) then 
            out_r_we0 <= ap_const_logic_1;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_addr10_fu_414_p2 <= std_logic_vector(unsigned(p_addr8_cast_reg_612) + unsigned(tmp_12_i_trn_cast_reg_591));
    p_addr11_fu_401_p2 <= std_logic_vector(unsigned(p_addr8_cast_reg_612) + unsigned(tmp_8_i_trn_cast_reg_570));
    p_addr1_fu_469_p0 <= p_addr6_cast_fu_455_p1;
    p_addr1_fu_469_p2 <= std_logic_vector(unsigned(p_addr1_fu_469_p0) + unsigned(tmp_12_i_trn_cast_reg_591));
    p_addr2_fu_284_p0 <= p_addr_cast_fu_280_p1;
    p_addr2_fu_284_p2 <= std_logic_vector(unsigned(p_addr2_fu_284_p0) + unsigned(tmp_4_i_trn_cast_fu_246_p1));
    p_addr3_fu_303_p0 <= p_addr_cast_fu_280_p1;
    p_addr3_fu_303_p2 <= std_logic_vector(unsigned(p_addr3_fu_303_p0) + unsigned(tmp_8_i_trn_cast_fu_299_p1));
    p_addr4_fu_464_p0 <= p_addr6_cast_fu_455_p1;
    p_addr4_fu_464_p2 <= std_logic_vector(unsigned(p_addr4_fu_464_p0) + unsigned(tmp_8_i_trn_cast_reg_570));
    p_addr5_fu_331_p2 <= std_logic_vector(unsigned(p_addr_cast_reg_560) + unsigned(tmp_12_i_trn_cast_fu_328_p1));
    
    p_addr6_fu_449_p2_temp <= signed(p_addr6_fu_449_p2);
    p_addr6_cast_fu_455_p1 <= std_logic_vector(resize(p_addr6_fu_449_p2_temp,24));

    p_addr6_fu_449_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_434_p1) - unsigned(p_shl5_cast_fu_445_p1));
    p_addr7_fu_459_p0 <= p_addr6_cast_fu_455_p1;
    p_addr7_fu_459_p2 <= std_logic_vector(unsigned(p_addr7_fu_459_p0) + unsigned(tmp_4_i_trn_cast_reg_554));
    
    p_addr8_fu_372_p2_temp <= signed(p_addr8_fu_372_p2);
    p_addr8_cast_fu_378_p1 <= std_logic_vector(resize(p_addr8_fu_372_p2_temp,24));

    p_addr8_fu_372_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_357_p1) - unsigned(p_shl3_cast_fu_368_p1));
    
    p_addr8_fu_372_p2_temp <= signed(p_addr8_fu_372_p2);
    p_addr9_fu_382_p0 <= std_logic_vector(resize(p_addr8_fu_372_p2_temp,24));

    p_addr9_fu_382_p2 <= std_logic_vector(unsigned(p_addr9_fu_382_p0) + unsigned(tmp_4_i_trn_cast_reg_554));
    
    p_addr_fu_274_p2_temp <= signed(p_addr_fu_274_p2);
    p_addr_cast_fu_280_p1 <= std_logic_vector(resize(p_addr_fu_274_p2_temp,24));

    p_addr_fu_274_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_258_p1) - unsigned(p_shl1_cast_fu_270_p1));
    p_shl1_cast_fu_270_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_262_p3),23));
    p_shl2_cast_fu_357_p1 <= std_logic_vector(resize(unsigned(tmp_5_fu_350_p3),23));
    p_shl3_cast_fu_368_p1 <= std_logic_vector(resize(unsigned(tmp_6_fu_361_p3),23));
    p_shl4_cast_fu_434_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_427_p3),23));
    p_shl5_cast_fu_445_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_438_p3),23));
    p_shl_cast_fu_258_p1 <= std_logic_vector(resize(unsigned(tmp_fu_250_p3),23));
    tmp6_i_fu_228_p2 <= std_logic_vector(unsigned(indvar_i_reg_147) + unsigned(ap_const_lv11_2));
    tmp_10_fu_438_p3 <= (tmp_i_12_reg_525 & ap_const_lv7_0);
    
    p_addr7_reg_648_temp <= signed(p_addr7_reg_648);
    tmp_11_fu_477_p0 <= std_logic_vector(resize(p_addr7_reg_648_temp,32));

    tmp_11_fu_477_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_477_p0),64));
    
    p_addr4_reg_653_temp <= signed(p_addr4_reg_653);
    tmp_12_fu_485_p0 <= std_logic_vector(resize(p_addr4_reg_653_temp,32));

    tmp_12_fu_485_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_485_p0),64));
    tmp_12_i_trn_cast_fu_328_p1 <= std_logic_vector(resize(unsigned(tmp6_i_reg_541),24));
    
    p_addr1_reg_658_temp <= signed(p_addr1_reg_658);
    tmp_13_fu_498_p0 <= std_logic_vector(resize(p_addr1_reg_658_temp,32));

    tmp_13_fu_498_p1 <= std_logic_vector(resize(unsigned(tmp_13_fu_498_p0),64));
    tmp_14_fu_521_p1 <= grp_fu_176_p1(16 - 1 downto 0);
    tmp_14_i5_fu_345_p1 <= std_logic_vector(resize(unsigned(reg_185),64));
    tmp_18_i6_fu_396_p1 <= std_logic_vector(resize(unsigned(reg_185),64));
    tmp_1_fu_262_p3 <= (indvar1_i_reg_135 & ap_const_lv7_0);
    tmp_22_i7_fu_490_p1 <= std_logic_vector(resize(unsigned(reg_185),64));
    tmp_26_i8_fu_503_p1 <= std_logic_vector(resize(unsigned(reg_189),64));
    
    p_addr2_fu_284_p2_temp <= signed(p_addr2_fu_284_p2);
    tmp_2_fu_294_p0 <= std_logic_vector(resize(p_addr2_fu_284_p2_temp,32));

    tmp_2_fu_294_p1 <= std_logic_vector(resize(unsigned(tmp_2_fu_294_p0),64));
    tmp_30_i9_fu_508_p1 <= std_logic_vector(resize(unsigned(reg_185),64));
    tmp_34_i1_fu_513_p1 <= std_logic_vector(resize(unsigned(in_load_7_reg_678),64));
    tmp_38_i1_fu_517_p1 <= std_logic_vector(resize(unsigned(in_load_8_reg_688),64));
    
    p_addr3_fu_303_p2_temp <= signed(p_addr3_fu_303_p2);
    tmp_3_fu_313_p0 <= std_logic_vector(resize(p_addr3_fu_303_p2_temp,32));

    tmp_3_fu_313_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_313_p0),64));
    
    p_addr5_fu_331_p2_temp <= signed(p_addr5_fu_331_p2);
    tmp_4_fu_340_p0 <= std_logic_vector(resize(p_addr5_fu_331_p2_temp,32));

    tmp_4_fu_340_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_340_p0),64));
    tmp_4_i_trn_cast_fu_246_p1 <= std_logic_vector(resize(unsigned(indvar_i_reg_147),24));
    tmp_5_fu_350_p3 <= (i_reg_531 & ap_const_lv11_0);
    tmp_6_fu_361_p3 <= (i_reg_531 & ap_const_lv7_0);
    tmp_6_i3_fu_318_p1 <= std_logic_vector(resize(unsigned(reg_185),64));
    
    p_addr9_fu_382_p2_temp <= signed(p_addr9_fu_382_p2);
    tmp_7_fu_391_p0 <= std_logic_vector(resize(p_addr9_fu_382_p2_temp,32));

    tmp_7_fu_391_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_391_p0),64));
    
    p_addr11_fu_401_p2_temp <= signed(p_addr11_fu_401_p2);
    tmp_8_fu_409_p0 <= std_logic_vector(resize(p_addr11_fu_401_p2_temp,32));

    tmp_8_fu_409_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_409_p0),64));
    tmp_8_i_trn_cast_fu_299_p1 <= std_logic_vector(resize(unsigned(j_fu_234_p2),24));
    
    p_addr10_fu_414_p2_temp <= signed(p_addr10_fu_414_p2);
    tmp_9_fu_422_p0 <= std_logic_vector(resize(p_addr10_fu_414_p2_temp,32));

    tmp_9_fu_422_p1 <= std_logic_vector(resize(unsigned(tmp_9_fu_422_p0),64));
    tmp_fu_250_p3 <= (indvar1_i_reg_135 & ap_const_lv11_0);
    tmp_i_12_fu_210_p2 <= std_logic_vector(unsigned(indvar1_i_reg_135) + unsigned(ap_const_lv11_2));
    tmp_s_fu_427_p3 <= (tmp_i_12_reg_525 & ap_const_lv11_0);
end behav;
