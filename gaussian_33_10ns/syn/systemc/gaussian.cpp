// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "gaussian.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gaussian::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gaussian::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> gaussian::ap_ST_st1_fsm_0 = "000000";
const sc_lv<6> gaussian::ap_ST_st2_fsm_1 = "1";
const sc_lv<6> gaussian::ap_ST_st3_fsm_2 = "10";
const sc_lv<6> gaussian::ap_ST_st4_fsm_3 = "11";
const sc_lv<6> gaussian::ap_ST_st5_fsm_4 = "100";
const sc_lv<6> gaussian::ap_ST_st6_fsm_5 = "101";
const sc_lv<6> gaussian::ap_ST_st7_fsm_6 = "110";
const sc_lv<6> gaussian::ap_ST_st8_fsm_7 = "111";
const sc_lv<6> gaussian::ap_ST_st9_fsm_8 = "1000";
const sc_lv<6> gaussian::ap_ST_st10_fsm_9 = "1001";
const sc_lv<6> gaussian::ap_ST_st11_fsm_10 = "1010";
const sc_lv<6> gaussian::ap_ST_st12_fsm_11 = "1011";
const sc_lv<6> gaussian::ap_ST_st13_fsm_12 = "1100";
const sc_lv<6> gaussian::ap_ST_st14_fsm_13 = "1101";
const sc_lv<6> gaussian::ap_ST_st15_fsm_14 = "1110";
const sc_lv<6> gaussian::ap_ST_st16_fsm_15 = "1111";
const sc_lv<6> gaussian::ap_ST_st17_fsm_16 = "10000";
const sc_lv<6> gaussian::ap_ST_st18_fsm_17 = "10001";
const sc_lv<6> gaussian::ap_ST_st19_fsm_18 = "10010";
const sc_lv<6> gaussian::ap_ST_st20_fsm_19 = "10011";
const sc_lv<6> gaussian::ap_ST_st21_fsm_20 = "10100";
const sc_lv<6> gaussian::ap_ST_st22_fsm_21 = "10101";
const sc_lv<6> gaussian::ap_ST_st23_fsm_22 = "10110";
const sc_lv<6> gaussian::ap_ST_st24_fsm_23 = "10111";
const sc_lv<6> gaussian::ap_ST_st25_fsm_24 = "11000";
const sc_lv<6> gaussian::ap_ST_st26_fsm_25 = "11001";
const sc_lv<6> gaussian::ap_ST_st27_fsm_26 = "11010";
const sc_lv<6> gaussian::ap_ST_st28_fsm_27 = "11011";
const sc_lv<6> gaussian::ap_ST_st29_fsm_28 = "11100";
const sc_lv<6> gaussian::ap_ST_st30_fsm_29 = "11101";
const sc_lv<6> gaussian::ap_ST_st31_fsm_30 = "11110";
const sc_lv<6> gaussian::ap_ST_st32_fsm_31 = "11111";
const sc_lv<6> gaussian::ap_ST_st33_fsm_32 = "100000";
const sc_lv<6> gaussian::ap_ST_st34_fsm_33 = "100001";
const sc_lv<6> gaussian::ap_ST_st35_fsm_34 = "100010";
const sc_lv<6> gaussian::ap_ST_st36_fsm_35 = "100011";
const sc_lv<6> gaussian::ap_ST_st37_fsm_36 = "100100";
const sc_lv<6> gaussian::ap_ST_st38_fsm_37 = "100101";
const sc_lv<6> gaussian::ap_ST_st39_fsm_38 = "100110";
const sc_lv<6> gaussian::ap_ST_st40_fsm_39 = "100111";
const sc_lv<6> gaussian::ap_ST_st41_fsm_40 = "101000";
const sc_lv<6> gaussian::ap_ST_st42_fsm_41 = "101001";
const sc_lv<6> gaussian::ap_ST_st43_fsm_42 = "101010";
const sc_lv<6> gaussian::ap_ST_st44_fsm_43 = "101011";
const sc_lv<6> gaussian::ap_ST_st45_fsm_44 = "101100";
const sc_lv<6> gaussian::ap_ST_st46_fsm_45 = "101101";
const sc_lv<6> gaussian::ap_ST_st47_fsm_46 = "101110";
const sc_lv<6> gaussian::ap_ST_st48_fsm_47 = "101111";
const sc_lv<6> gaussian::ap_ST_st49_fsm_48 = "110000";
const sc_lv<6> gaussian::ap_ST_st50_fsm_49 = "110001";
const sc_lv<6> gaussian::ap_ST_st51_fsm_50 = "110010";
const sc_lv<6> gaussian::ap_ST_st52_fsm_51 = "110011";
const sc_lv<6> gaussian::ap_ST_st53_fsm_52 = "110100";
const sc_lv<6> gaussian::ap_ST_st54_fsm_53 = "110101";
const sc_lv<6> gaussian::ap_ST_st55_fsm_54 = "110110";
const sc_lv<6> gaussian::ap_ST_st56_fsm_55 = "110111";
const sc_lv<6> gaussian::ap_ST_st57_fsm_56 = "111000";
const sc_lv<6> gaussian::ap_ST_st58_fsm_57 = "111001";
const sc_lv<6> gaussian::ap_ST_st59_fsm_58 = "111010";
const sc_lv<1> gaussian::ap_const_lv1_0 = "0";
const sc_lv<11> gaussian::ap_const_lv11_0 = "00000000000";
const sc_lv<32> gaussian::ap_const_lv32_3D7929ED = "111101011110010010100111101101";
const sc_lv<32> gaussian::ap_const_lv32_3E193AF7 = "111110000110010011101011110111";
const sc_lv<32> gaussian::ap_const_lv32_3EBC7736 = "111110101111000111011100110110";
const sc_lv<32> gaussian::ap_const_lv32_3E19389B = "111110000110010011100010011011";
const sc_lv<11> gaussian::ap_const_lv11_2 = "10";
const sc_lv<11> gaussian::ap_const_lv11_1 = "1";
const sc_lv<11> gaussian::ap_const_lv11_436 = "10000110110";
const sc_lv<11> gaussian::ap_const_lv11_77E = "11101111110";
const sc_lv<7> gaussian::ap_const_lv7_0 = "0000000";

gaussian::gaussian(sc_module_name name) : sc_module(name), mVcdFile(0) {
    gaussian_fadd_32ns_32ns_32_5_full_dsp_U1 = new gaussian_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>("gaussian_fadd_32ns_32ns_32_5_full_dsp_U1");
    gaussian_fadd_32ns_32ns_32_5_full_dsp_U1->clk(ap_clk);
    gaussian_fadd_32ns_32ns_32_5_full_dsp_U1->reset(ap_rst);
    gaussian_fadd_32ns_32ns_32_5_full_dsp_U1->din0(grp_fu_159_p0);
    gaussian_fadd_32ns_32ns_32_5_full_dsp_U1->din1(grp_fu_159_p1);
    gaussian_fadd_32ns_32ns_32_5_full_dsp_U1->ce(grp_fu_159_ce);
    gaussian_fadd_32ns_32ns_32_5_full_dsp_U1->dout(grp_fu_159_p2);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U2 = new gaussian_fmul_32ns_32ns_32_4_max_dsp<2,4,32,32,32>("gaussian_fmul_32ns_32ns_32_4_max_dsp_U2");
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U2->clk(ap_clk);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U2->reset(ap_rst);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U2->din0(grp_fu_163_p0);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U2->din1(grp_fu_163_p1);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U2->ce(grp_fu_163_ce);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U2->dout(grp_fu_163_p2);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U3 = new gaussian_fmul_32ns_32ns_32_4_max_dsp<3,4,32,32,32>("gaussian_fmul_32ns_32ns_32_4_max_dsp_U3");
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U3->clk(ap_clk);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U3->reset(ap_rst);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U3->din0(grp_fu_168_p0);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U3->din1(grp_fu_168_p1);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U3->ce(grp_fu_168_ce);
    gaussian_fmul_32ns_32ns_32_4_max_dsp_U3->dout(grp_fu_168_p2);
    gaussian_fptoui_32ns_64_4_U4 = new gaussian_fptoui_32ns_64_4<4,4,32,64>("gaussian_fptoui_32ns_64_4_U4");
    gaussian_fptoui_32ns_64_4_U4->clk(ap_clk);
    gaussian_fptoui_32ns_64_4_U4->reset(ap_rst);
    gaussian_fptoui_32ns_64_4_U4->din0(grp_fu_176_p0);
    gaussian_fptoui_32ns_64_4_U4->ce(grp_fu_176_ce);
    gaussian_fptoui_32ns_64_4_U4->dout(grp_fu_176_p1);
    gaussian_sitofp_64ns_32_6_U5 = new gaussian_sitofp_64ns_32_6<5,6,64,32>("gaussian_sitofp_64ns_32_6_U5");
    gaussian_sitofp_64ns_32_6_U5->clk(ap_clk);
    gaussian_sitofp_64ns_32_6_U5->reset(ap_rst);
    gaussian_sitofp_64ns_32_6_U5->din0(grp_fu_179_p0);
    gaussian_sitofp_64ns_32_6_U5->ce(grp_fu_179_ce);
    gaussian_sitofp_64ns_32_6_U5->dout(grp_fu_179_p1);
    gaussian_sitofp_64ns_32_6_U6 = new gaussian_sitofp_64ns_32_6<6,6,64,32>("gaussian_sitofp_64ns_32_6_U6");
    gaussian_sitofp_64ns_32_6_U6->clk(ap_clk);
    gaussian_sitofp_64ns_32_6_U6->reset(ap_rst);
    gaussian_sitofp_64ns_32_6_U6->din0(grp_fu_182_p0);
    gaussian_sitofp_64ns_32_6_U6->ce(grp_fu_182_ce);
    gaussian_sitofp_64ns_32_6_U6->dout(grp_fu_182_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_222_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_222_p2 );

    SC_METHOD(thread_exitcond1_fu_240_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indvar_i_reg_147 );

    SC_METHOD(thread_exitcond_fu_222_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indvar1_i_reg_135 );

    SC_METHOD(thread_grp_fu_159_ce);

    SC_METHOD(thread_grp_fu_159_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_198 );
    sensitive << ( reg_204 );

    SC_METHOD(thread_grp_fu_159_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_198 );
    sensitive << ( tmp_10_i_reg_623 );

    SC_METHOD(thread_grp_fu_163_ce);

    SC_METHOD(thread_grp_fu_163_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_193 );

    SC_METHOD(thread_grp_fu_163_p1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_fu_168_ce);

    SC_METHOD(thread_grp_fu_168_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i_reg_602 );

    SC_METHOD(thread_grp_fu_168_p1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_fu_176_ce);

    SC_METHOD(thread_grp_fu_176_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_204 );

    SC_METHOD(thread_grp_fu_179_ce);

    SC_METHOD(thread_grp_fu_179_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_6_i3_fu_318_p1 );
    sensitive << ( tmp_14_i5_fu_345_p1 );
    sensitive << ( tmp_18_i6_fu_396_p1 );
    sensitive << ( tmp_22_i7_fu_490_p1 );
    sensitive << ( tmp_26_i8_fu_503_p1 );
    sensitive << ( tmp_30_i9_fu_508_p1 );
    sensitive << ( tmp_34_i1_fu_513_p1 );
    sensitive << ( tmp_38_i1_fu_517_p1 );

    SC_METHOD(thread_grp_fu_182_ce);

    SC_METHOD(thread_grp_fu_182_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_189 );

    SC_METHOD(thread_i_fu_216_p2);
    sensitive << ( indvar1_i_reg_135 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_8_fu_409_p1 );
    sensitive << ( tmp_2_fu_294_p1 );
    sensitive << ( tmp_4_fu_340_p1 );
    sensitive << ( tmp_7_fu_391_p1 );
    sensitive << ( tmp_11_fu_477_p1 );
    sensitive << ( tmp_13_fu_498_p1 );

    SC_METHOD(thread_in_r_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_313_p1 );
    sensitive << ( tmp_9_fu_422_p1 );
    sensitive << ( tmp_12_fu_485_p1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_240_p2 );

    SC_METHOD(thread_in_r_ce1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_240_p2 );

    SC_METHOD(thread_j_fu_234_p2);
    sensitive << ( indvar_i_reg_147 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_8_reg_633 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_14_reg_713 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_p_addr10_fu_414_p2);
    sensitive << ( tmp_12_i_trn_cast_reg_591 );
    sensitive << ( p_addr8_cast_reg_612 );

    SC_METHOD(thread_p_addr11_fu_401_p2);
    sensitive << ( tmp_8_i_trn_cast_reg_570 );
    sensitive << ( p_addr8_cast_reg_612 );

    SC_METHOD(thread_p_addr1_fu_469_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr6_cast_fu_455_p1 );

    SC_METHOD(thread_p_addr1_fu_469_p2);
    sensitive << ( tmp_12_i_trn_cast_reg_591 );
    sensitive << ( p_addr1_fu_469_p0 );

    SC_METHOD(thread_p_addr2_fu_284_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_240_p2 );
    sensitive << ( p_addr_cast_fu_280_p1 );

    SC_METHOD(thread_p_addr2_fu_284_p2);
    sensitive << ( tmp_4_i_trn_cast_fu_246_p1 );
    sensitive << ( p_addr2_fu_284_p0 );

    SC_METHOD(thread_p_addr3_fu_303_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_240_p2 );
    sensitive << ( p_addr_cast_fu_280_p1 );

    SC_METHOD(thread_p_addr3_fu_303_p2);
    sensitive << ( tmp_8_i_trn_cast_fu_299_p1 );
    sensitive << ( p_addr3_fu_303_p0 );

    SC_METHOD(thread_p_addr4_fu_464_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr6_cast_fu_455_p1 );

    SC_METHOD(thread_p_addr4_fu_464_p2);
    sensitive << ( tmp_8_i_trn_cast_reg_570 );
    sensitive << ( p_addr4_fu_464_p0 );

    SC_METHOD(thread_p_addr5_fu_331_p2);
    sensitive << ( p_addr_cast_reg_560 );
    sensitive << ( tmp_12_i_trn_cast_fu_328_p1 );

    SC_METHOD(thread_p_addr6_cast_fu_455_p1);
    sensitive << ( p_addr6_fu_449_p2 );

    SC_METHOD(thread_p_addr6_fu_449_p2);
    sensitive << ( p_shl4_cast_fu_434_p1 );
    sensitive << ( p_shl5_cast_fu_445_p1 );

    SC_METHOD(thread_p_addr7_fu_459_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr6_cast_fu_455_p1 );

    SC_METHOD(thread_p_addr7_fu_459_p2);
    sensitive << ( tmp_4_i_trn_cast_reg_554 );
    sensitive << ( p_addr7_fu_459_p0 );

    SC_METHOD(thread_p_addr8_cast_fu_378_p1);
    sensitive << ( p_addr8_fu_372_p2 );

    SC_METHOD(thread_p_addr8_fu_372_p2);
    sensitive << ( p_shl2_cast_fu_357_p1 );
    sensitive << ( p_shl3_cast_fu_368_p1 );

    SC_METHOD(thread_p_addr9_fu_382_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr8_fu_372_p2 );

    SC_METHOD(thread_p_addr9_fu_382_p2);
    sensitive << ( tmp_4_i_trn_cast_reg_554 );
    sensitive << ( p_addr9_fu_382_p0 );

    SC_METHOD(thread_p_addr_cast_fu_280_p1);
    sensitive << ( p_addr_fu_274_p2 );

    SC_METHOD(thread_p_addr_fu_274_p2);
    sensitive << ( p_shl_cast_fu_258_p1 );
    sensitive << ( p_shl1_cast_fu_270_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_270_p1);
    sensitive << ( tmp_1_fu_262_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_357_p1);
    sensitive << ( tmp_5_fu_350_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_368_p1);
    sensitive << ( tmp_6_fu_361_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_434_p1);
    sensitive << ( tmp_s_fu_427_p3 );

    SC_METHOD(thread_p_shl5_cast_fu_445_p1);
    sensitive << ( tmp_10_fu_438_p3 );

    SC_METHOD(thread_p_shl_cast_fu_258_p1);
    sensitive << ( tmp_fu_250_p3 );

    SC_METHOD(thread_tmp6_i_fu_228_p2);
    sensitive << ( indvar_i_reg_147 );

    SC_METHOD(thread_tmp_10_fu_438_p3);
    sensitive << ( tmp_i_12_reg_525 );

    SC_METHOD(thread_tmp_11_fu_477_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr7_reg_648 );

    SC_METHOD(thread_tmp_11_fu_477_p1);
    sensitive << ( tmp_11_fu_477_p0 );

    SC_METHOD(thread_tmp_12_fu_485_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr4_reg_653 );

    SC_METHOD(thread_tmp_12_fu_485_p1);
    sensitive << ( tmp_12_fu_485_p0 );

    SC_METHOD(thread_tmp_12_i_trn_cast_fu_328_p1);
    sensitive << ( tmp6_i_reg_541 );

    SC_METHOD(thread_tmp_13_fu_498_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr1_reg_658 );

    SC_METHOD(thread_tmp_13_fu_498_p1);
    sensitive << ( tmp_13_fu_498_p0 );

    SC_METHOD(thread_tmp_14_fu_521_p1);
    sensitive << ( grp_fu_176_p1 );

    SC_METHOD(thread_tmp_14_i5_fu_345_p1);
    sensitive << ( reg_185 );

    SC_METHOD(thread_tmp_18_i6_fu_396_p1);
    sensitive << ( reg_185 );

    SC_METHOD(thread_tmp_1_fu_262_p3);
    sensitive << ( indvar1_i_reg_135 );

    SC_METHOD(thread_tmp_22_i7_fu_490_p1);
    sensitive << ( reg_185 );

    SC_METHOD(thread_tmp_26_i8_fu_503_p1);
    sensitive << ( reg_189 );

    SC_METHOD(thread_tmp_2_fu_294_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_240_p2 );
    sensitive << ( p_addr2_fu_284_p2 );

    SC_METHOD(thread_tmp_2_fu_294_p1);
    sensitive << ( tmp_2_fu_294_p0 );

    SC_METHOD(thread_tmp_30_i9_fu_508_p1);
    sensitive << ( reg_185 );

    SC_METHOD(thread_tmp_34_i1_fu_513_p1);
    sensitive << ( in_load_7_reg_678 );

    SC_METHOD(thread_tmp_38_i1_fu_517_p1);
    sensitive << ( in_load_8_reg_688 );

    SC_METHOD(thread_tmp_3_fu_313_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_240_p2 );
    sensitive << ( p_addr3_fu_303_p2 );

    SC_METHOD(thread_tmp_3_fu_313_p1);
    sensitive << ( tmp_3_fu_313_p0 );

    SC_METHOD(thread_tmp_4_fu_340_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr5_fu_331_p2 );

    SC_METHOD(thread_tmp_4_fu_340_p1);
    sensitive << ( tmp_4_fu_340_p0 );

    SC_METHOD(thread_tmp_4_i_trn_cast_fu_246_p1);
    sensitive << ( indvar_i_reg_147 );

    SC_METHOD(thread_tmp_5_fu_350_p3);
    sensitive << ( i_reg_531 );

    SC_METHOD(thread_tmp_6_fu_361_p3);
    sensitive << ( i_reg_531 );

    SC_METHOD(thread_tmp_6_i3_fu_318_p1);
    sensitive << ( reg_185 );

    SC_METHOD(thread_tmp_7_fu_391_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr9_fu_382_p2 );

    SC_METHOD(thread_tmp_7_fu_391_p1);
    sensitive << ( tmp_7_fu_391_p0 );

    SC_METHOD(thread_tmp_8_fu_409_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr11_fu_401_p2 );

    SC_METHOD(thread_tmp_8_fu_409_p1);
    sensitive << ( tmp_8_fu_409_p0 );

    SC_METHOD(thread_tmp_8_i_trn_cast_fu_299_p1);
    sensitive << ( j_fu_234_p2 );

    SC_METHOD(thread_tmp_9_fu_422_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr10_fu_414_p2 );

    SC_METHOD(thread_tmp_9_fu_422_p1);
    sensitive << ( tmp_9_fu_422_p0 );

    SC_METHOD(thread_tmp_fu_250_p3);
    sensitive << ( indvar1_i_reg_135 );

    SC_METHOD(thread_tmp_i_12_fu_210_p2);
    sensitive << ( indvar1_i_reg_135 );

    SC_METHOD(thread_tmp_s_fu_427_p3);
    sensitive << ( tmp_i_12_reg_525 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_240_p2 );
    sensitive << ( exitcond_fu_222_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gaussian_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    const char* dump_vcd = std::getenv("AP_WRITE_VCD");
    if (dump_vcd && string(dump_vcd) == "1" ) {
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, in_r_address1, "(port)in_r_address1");
    sc_trace(mVcdFile, in_r_ce1, "(port)in_r_ce1");
    sc_trace(mVcdFile, in_r_q1, "(port)in_r_q1");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, reg_185, "reg_185");
    sc_trace(mVcdFile, reg_189, "reg_189");
    sc_trace(mVcdFile, grp_fu_179_p1, "grp_fu_179_p1");
    sc_trace(mVcdFile, reg_193, "reg_193");
    sc_trace(mVcdFile, grp_fu_163_p2, "grp_fu_163_p2");
    sc_trace(mVcdFile, reg_198, "reg_198");
    sc_trace(mVcdFile, grp_fu_159_p2, "grp_fu_159_p2");
    sc_trace(mVcdFile, reg_204, "reg_204");
    sc_trace(mVcdFile, tmp_i_12_fu_210_p2, "tmp_i_12_fu_210_p2");
    sc_trace(mVcdFile, tmp_i_12_reg_525, "tmp_i_12_reg_525");
    sc_trace(mVcdFile, i_fu_216_p2, "i_fu_216_p2");
    sc_trace(mVcdFile, i_reg_531, "i_reg_531");
    sc_trace(mVcdFile, tmp6_i_fu_228_p2, "tmp6_i_fu_228_p2");
    sc_trace(mVcdFile, tmp6_i_reg_541, "tmp6_i_reg_541");
    sc_trace(mVcdFile, j_fu_234_p2, "j_fu_234_p2");
    sc_trace(mVcdFile, j_reg_546, "j_reg_546");
    sc_trace(mVcdFile, tmp_4_i_trn_cast_fu_246_p1, "tmp_4_i_trn_cast_fu_246_p1");
    sc_trace(mVcdFile, tmp_4_i_trn_cast_reg_554, "tmp_4_i_trn_cast_reg_554");
    sc_trace(mVcdFile, exitcond1_fu_240_p2, "exitcond1_fu_240_p2");
    sc_trace(mVcdFile, p_addr_cast_fu_280_p1, "p_addr_cast_fu_280_p1");
    sc_trace(mVcdFile, p_addr_cast_reg_560, "p_addr_cast_reg_560");
    sc_trace(mVcdFile, tmp_8_i_trn_cast_fu_299_p1, "tmp_8_i_trn_cast_fu_299_p1");
    sc_trace(mVcdFile, tmp_8_i_trn_cast_reg_570, "tmp_8_i_trn_cast_reg_570");
    sc_trace(mVcdFile, tmp_6_i3_fu_318_p1, "tmp_6_i3_fu_318_p1");
    sc_trace(mVcdFile, tmp_12_i_trn_cast_fu_328_p1, "tmp_12_i_trn_cast_fu_328_p1");
    sc_trace(mVcdFile, tmp_12_i_trn_cast_reg_591, "tmp_12_i_trn_cast_reg_591");
    sc_trace(mVcdFile, grp_fu_182_p1, "grp_fu_182_p1");
    sc_trace(mVcdFile, tmp_i_reg_602, "tmp_i_reg_602");
    sc_trace(mVcdFile, tmp_14_i5_fu_345_p1, "tmp_14_i5_fu_345_p1");
    sc_trace(mVcdFile, p_addr8_cast_fu_378_p1, "p_addr8_cast_fu_378_p1");
    sc_trace(mVcdFile, p_addr8_cast_reg_612, "p_addr8_cast_reg_612");
    sc_trace(mVcdFile, grp_fu_168_p2, "grp_fu_168_p2");
    sc_trace(mVcdFile, tmp_10_i_reg_623, "tmp_10_i_reg_623");
    sc_trace(mVcdFile, tmp_18_i6_fu_396_p1, "tmp_18_i6_fu_396_p1");
    sc_trace(mVcdFile, tmp_8_fu_409_p1, "tmp_8_fu_409_p1");
    sc_trace(mVcdFile, tmp_8_reg_633, "tmp_8_reg_633");
    sc_trace(mVcdFile, p_addr7_fu_459_p2, "p_addr7_fu_459_p2");
    sc_trace(mVcdFile, p_addr7_reg_648, "p_addr7_reg_648");
    sc_trace(mVcdFile, p_addr4_fu_464_p2, "p_addr4_fu_464_p2");
    sc_trace(mVcdFile, p_addr4_reg_653, "p_addr4_reg_653");
    sc_trace(mVcdFile, p_addr1_fu_469_p2, "p_addr1_fu_469_p2");
    sc_trace(mVcdFile, p_addr1_reg_658, "p_addr1_reg_658");
    sc_trace(mVcdFile, tmp_22_i7_fu_490_p1, "tmp_22_i7_fu_490_p1");
    sc_trace(mVcdFile, in_load_7_reg_678, "in_load_7_reg_678");
    sc_trace(mVcdFile, in_load_8_reg_688, "in_load_8_reg_688");
    sc_trace(mVcdFile, tmp_26_i8_fu_503_p1, "tmp_26_i8_fu_503_p1");
    sc_trace(mVcdFile, tmp_30_i9_fu_508_p1, "tmp_30_i9_fu_508_p1");
    sc_trace(mVcdFile, tmp_34_i1_fu_513_p1, "tmp_34_i1_fu_513_p1");
    sc_trace(mVcdFile, tmp_38_i1_fu_517_p1, "tmp_38_i1_fu_517_p1");
    sc_trace(mVcdFile, tmp_14_fu_521_p1, "tmp_14_fu_521_p1");
    sc_trace(mVcdFile, tmp_14_reg_713, "tmp_14_reg_713");
    sc_trace(mVcdFile, indvar1_i_reg_135, "indvar1_i_reg_135");
    sc_trace(mVcdFile, indvar_i_reg_147, "indvar_i_reg_147");
    sc_trace(mVcdFile, exitcond_fu_222_p2, "exitcond_fu_222_p2");
    sc_trace(mVcdFile, tmp_2_fu_294_p1, "tmp_2_fu_294_p1");
    sc_trace(mVcdFile, tmp_3_fu_313_p1, "tmp_3_fu_313_p1");
    sc_trace(mVcdFile, tmp_4_fu_340_p1, "tmp_4_fu_340_p1");
    sc_trace(mVcdFile, tmp_7_fu_391_p1, "tmp_7_fu_391_p1");
    sc_trace(mVcdFile, tmp_9_fu_422_p1, "tmp_9_fu_422_p1");
    sc_trace(mVcdFile, tmp_11_fu_477_p1, "tmp_11_fu_477_p1");
    sc_trace(mVcdFile, tmp_12_fu_485_p1, "tmp_12_fu_485_p1");
    sc_trace(mVcdFile, tmp_13_fu_498_p1, "tmp_13_fu_498_p1");
    sc_trace(mVcdFile, grp_fu_159_p0, "grp_fu_159_p0");
    sc_trace(mVcdFile, grp_fu_159_p1, "grp_fu_159_p1");
    sc_trace(mVcdFile, grp_fu_163_p0, "grp_fu_163_p0");
    sc_trace(mVcdFile, grp_fu_163_p1, "grp_fu_163_p1");
    sc_trace(mVcdFile, grp_fu_168_p0, "grp_fu_168_p0");
    sc_trace(mVcdFile, grp_fu_168_p1, "grp_fu_168_p1");
    sc_trace(mVcdFile, grp_fu_176_p0, "grp_fu_176_p0");
    sc_trace(mVcdFile, grp_fu_179_p0, "grp_fu_179_p0");
    sc_trace(mVcdFile, grp_fu_182_p0, "grp_fu_182_p0");
    sc_trace(mVcdFile, tmp_fu_250_p3, "tmp_fu_250_p3");
    sc_trace(mVcdFile, tmp_1_fu_262_p3, "tmp_1_fu_262_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_258_p1, "p_shl_cast_fu_258_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_270_p1, "p_shl1_cast_fu_270_p1");
    sc_trace(mVcdFile, p_addr_fu_274_p2, "p_addr_fu_274_p2");
    sc_trace(mVcdFile, p_addr2_fu_284_p0, "p_addr2_fu_284_p0");
    sc_trace(mVcdFile, p_addr2_fu_284_p2, "p_addr2_fu_284_p2");
    sc_trace(mVcdFile, tmp_2_fu_294_p0, "tmp_2_fu_294_p0");
    sc_trace(mVcdFile, p_addr3_fu_303_p0, "p_addr3_fu_303_p0");
    sc_trace(mVcdFile, p_addr3_fu_303_p2, "p_addr3_fu_303_p2");
    sc_trace(mVcdFile, tmp_3_fu_313_p0, "tmp_3_fu_313_p0");
    sc_trace(mVcdFile, p_addr5_fu_331_p2, "p_addr5_fu_331_p2");
    sc_trace(mVcdFile, tmp_4_fu_340_p0, "tmp_4_fu_340_p0");
    sc_trace(mVcdFile, tmp_5_fu_350_p3, "tmp_5_fu_350_p3");
    sc_trace(mVcdFile, tmp_6_fu_361_p3, "tmp_6_fu_361_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_357_p1, "p_shl2_cast_fu_357_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_368_p1, "p_shl3_cast_fu_368_p1");
    sc_trace(mVcdFile, p_addr8_fu_372_p2, "p_addr8_fu_372_p2");
    sc_trace(mVcdFile, p_addr9_fu_382_p0, "p_addr9_fu_382_p0");
    sc_trace(mVcdFile, p_addr9_fu_382_p2, "p_addr9_fu_382_p2");
    sc_trace(mVcdFile, tmp_7_fu_391_p0, "tmp_7_fu_391_p0");
    sc_trace(mVcdFile, p_addr11_fu_401_p2, "p_addr11_fu_401_p2");
    sc_trace(mVcdFile, tmp_8_fu_409_p0, "tmp_8_fu_409_p0");
    sc_trace(mVcdFile, p_addr10_fu_414_p2, "p_addr10_fu_414_p2");
    sc_trace(mVcdFile, tmp_9_fu_422_p0, "tmp_9_fu_422_p0");
    sc_trace(mVcdFile, tmp_s_fu_427_p3, "tmp_s_fu_427_p3");
    sc_trace(mVcdFile, tmp_10_fu_438_p3, "tmp_10_fu_438_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_434_p1, "p_shl4_cast_fu_434_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_445_p1, "p_shl5_cast_fu_445_p1");
    sc_trace(mVcdFile, p_addr6_fu_449_p2, "p_addr6_fu_449_p2");
    sc_trace(mVcdFile, p_addr7_fu_459_p0, "p_addr7_fu_459_p0");
    sc_trace(mVcdFile, p_addr6_cast_fu_455_p1, "p_addr6_cast_fu_455_p1");
    sc_trace(mVcdFile, p_addr4_fu_464_p0, "p_addr4_fu_464_p0");
    sc_trace(mVcdFile, p_addr1_fu_469_p0, "p_addr1_fu_469_p0");
    sc_trace(mVcdFile, tmp_11_fu_477_p0, "tmp_11_fu_477_p0");
    sc_trace(mVcdFile, tmp_12_fu_485_p0, "tmp_12_fu_485_p0");
    sc_trace(mVcdFile, tmp_13_fu_498_p0, "tmp_13_fu_498_p0");
    sc_trace(mVcdFile, grp_fu_176_p1, "grp_fu_176_p1");
    sc_trace(mVcdFile, grp_fu_159_ce, "grp_fu_159_ce");
    sc_trace(mVcdFile, grp_fu_163_ce, "grp_fu_163_ce");
    sc_trace(mVcdFile, grp_fu_168_ce, "grp_fu_168_ce");
    sc_trace(mVcdFile, grp_fu_176_ce, "grp_fu_176_ce");
    sc_trace(mVcdFile, grp_fu_179_ce, "grp_fu_179_ce");
    sc_trace(mVcdFile, grp_fu_182_ce, "grp_fu_182_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");

    }
    mHdltvinHandle.open("gaussian.hdltvin.dat");
    mHdltvoutHandle.open("gaussian.hdltvout.dat");
}

gaussian::~gaussian() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete gaussian_fadd_32ns_32ns_32_5_full_dsp_U1;
    delete gaussian_fmul_32ns_32ns_32_4_max_dsp_U2;
    delete gaussian_fmul_32ns_32ns_32_4_max_dsp_U3;
    delete gaussian_fptoui_32ns_64_4_U4;
    delete gaussian_sitofp_64ns_32_6_U5;
    delete gaussian_sitofp_64ns_32_6_U6;
}

void gaussian::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_240_p2.read(), ap_const_lv1_0))) {
        indvar1_i_reg_135 = i_reg_531.read();
    } else if ((esl_seteq<1,6,6>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar1_i_reg_135 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,6,6>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_222_p2.read()))) {
        indvar_i_reg_147 = ap_const_lv11_0;
    } else if (esl_seteq<1,6,6>(ap_ST_st59_fsm_58, ap_CS_fsm.read())) {
        indvar_i_reg_147 = j_reg_546.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        i_reg_531 = i_fu_216_p2.read();
        tmp_i_12_reg_525 = tmp_i_12_fu_210_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        in_load_7_reg_678 = in_r_q1.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st21_fsm_20, ap_CS_fsm.read())) {
        in_load_8_reg_688 = in_r_q0.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        j_reg_546 = j_fu_234_p2.read();
        tmp6_i_reg_541 = tmp6_i_fu_228_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st18_fsm_17, ap_CS_fsm.read())) {
        p_addr1_reg_658 = p_addr1_fu_469_p2.read();
        p_addr4_reg_653 = p_addr4_fu_464_p2.read();
        p_addr7_reg_648 = p_addr7_fu_459_p2.read();
        tmp_8_reg_633 = tmp_8_fu_409_p1.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st13_fsm_12, ap_CS_fsm.read())) {
        p_addr8_cast_reg_612 = p_addr8_cast_fu_378_p1.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(exitcond1_fu_240_p2.read(), ap_const_lv1_0))) {
        p_addr_cast_reg_560 = p_addr_cast_fu_280_p1.read();
        tmp_4_i_trn_cast_reg_554 = tmp_4_i_trn_cast_fu_246_p1.read();
        tmp_8_i_trn_cast_reg_570 = tmp_8_i_trn_cast_fu_299_p1.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read()))) {
        reg_185 = in_r_q0.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()))) {
        reg_189 = in_r_q1.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st30_fsm_29, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st35_fsm_34, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st40_fsm_39, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st45_fsm_44, ap_CS_fsm.read()))) {
        reg_193 = grp_fu_179_p1.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st29_fsm_28, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st34_fsm_33, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st39_fsm_38, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st44_fsm_43, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st49_fsm_48, ap_CS_fsm.read()))) {
        reg_198 = grp_fu_163_p2.read();
    }
    if ((esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st24_fsm_23, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st29_fsm_28, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st34_fsm_33, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st39_fsm_38, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st44_fsm_43, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st49_fsm_48, ap_CS_fsm.read()) || esl_seteq<1,6,6>(ap_ST_st54_fsm_53, ap_CS_fsm.read()))) {
        reg_204 = grp_fu_159_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st14_fsm_13, ap_CS_fsm.read())) {
        tmp_10_i_reg_623 = grp_fu_168_p2.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        tmp_12_i_trn_cast_reg_591 = tmp_12_i_trn_cast_fu_328_p1.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st58_fsm_57, ap_CS_fsm.read())) {
        tmp_14_reg_713 = tmp_14_fu_521_p1.read();
    }
    if (esl_seteq<1,6,6>(ap_ST_st10_fsm_9, ap_CS_fsm.read())) {
        tmp_i_reg_602 = grp_fu_182_p1.read();
    }
}

void gaussian::thread_ap_done() {
    if ((esl_seteq<1,6,6>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_222_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gaussian::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,6,6>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gaussian::thread_ap_ready() {
    if ((esl_seteq<1,6,6>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_222_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gaussian::thread_exitcond1_fu_240_p2() {
    exitcond1_fu_240_p2 = (!indvar_i_reg_147.read().is_01() || !ap_const_lv11_77E.is_01())? sc_lv<1>(): sc_lv<1>(indvar_i_reg_147.read() == ap_const_lv11_77E);
}

void gaussian::thread_exitcond_fu_222_p2() {
    exitcond_fu_222_p2 = (!indvar1_i_reg_135.read().is_01() || !ap_const_lv11_436.is_01())? sc_lv<1>(): sc_lv<1>(indvar1_i_reg_135.read() == ap_const_lv11_436);
}

void gaussian::thread_grp_fu_159_ce() {
    grp_fu_159_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_159_p0() {
    if ((esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st30_fsm_29, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st35_fsm_34, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st40_fsm_39, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st45_fsm_44, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st50_fsm_49, ap_CS_fsm.read()))) {
        grp_fu_159_p0 = reg_204.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        grp_fu_159_p0 = reg_198.read();
    } else {
        grp_fu_159_p0 = reg_204.read();
    }
}

void gaussian::thread_grp_fu_159_p1() {
    if ((esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st30_fsm_29, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st35_fsm_34, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st40_fsm_39, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st45_fsm_44, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st50_fsm_49, ap_CS_fsm.read()))) {
        grp_fu_159_p1 = reg_198.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        grp_fu_159_p1 = tmp_10_i_reg_623.read();
    } else {
        grp_fu_159_p1 = tmp_10_i_reg_623.read();
    }
}

void gaussian::thread_grp_fu_163_ce() {
    grp_fu_163_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_163_p0() {
    grp_fu_163_p0 = reg_193.read();
}

void gaussian::thread_grp_fu_163_p1() {
    if (esl_seteq<1,6,6>(ap_ST_st31_fsm_30, ap_CS_fsm.read())) {
        grp_fu_163_p1 = ap_const_lv32_3E19389B;
    } else if (esl_seteq<1,6,6>(ap_ST_st26_fsm_25, ap_CS_fsm.read())) {
        grp_fu_163_p1 = ap_const_lv32_3EBC7736;
    } else if ((esl_seteq<1,6,6>(ap_ST_st21_fsm_20, ap_CS_fsm.read()) || 
                esl_seteq<1,6,6>(ap_ST_st41_fsm_40, ap_CS_fsm.read()))) {
        grp_fu_163_p1 = ap_const_lv32_3E193AF7;
    } else if ((esl_seteq<1,6,6>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) || 
                esl_seteq<1,6,6>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,6,6>(ap_ST_st36_fsm_35, ap_CS_fsm.read()) || 
                esl_seteq<1,6,6>(ap_ST_st46_fsm_45, ap_CS_fsm.read()))) {
        grp_fu_163_p1 = ap_const_lv32_3D7929ED;
    } else {
        grp_fu_163_p1 = ap_const_lv32_3E19389B;
    }
}

void gaussian::thread_grp_fu_168_ce() {
    grp_fu_168_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_168_p0() {
    grp_fu_168_p0 = tmp_i_reg_602.read();
}

void gaussian::thread_grp_fu_168_p1() {
    grp_fu_168_p1 = ap_const_lv32_3E193AF7;
}

void gaussian::thread_grp_fu_176_ce() {
    grp_fu_176_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_176_p0() {
    grp_fu_176_p0 = reg_204.read();
}

void gaussian::thread_grp_fu_179_ce() {
    grp_fu_179_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_179_p0() {
    if (esl_seteq<1,6,6>(ap_ST_st40_fsm_39, ap_CS_fsm.read())) {
        grp_fu_179_p0 = tmp_38_i1_fu_517_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st35_fsm_34, ap_CS_fsm.read())) {
        grp_fu_179_p0 = tmp_34_i1_fu_513_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st30_fsm_29, ap_CS_fsm.read())) {
        grp_fu_179_p0 = tmp_30_i9_fu_508_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st25_fsm_24, ap_CS_fsm.read())) {
        grp_fu_179_p0 = tmp_26_i8_fu_503_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        grp_fu_179_p0 = tmp_22_i7_fu_490_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        grp_fu_179_p0 = tmp_18_i6_fu_396_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st10_fsm_9, ap_CS_fsm.read())) {
        grp_fu_179_p0 = tmp_14_i5_fu_345_p1.read();
    } else if (esl_seteq<1,6,6>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
        grp_fu_179_p0 = tmp_6_i3_fu_318_p1.read();
    } else {
        grp_fu_179_p0 = tmp_38_i1_fu_517_p1.read();
    }
}

void gaussian::thread_grp_fu_182_ce() {
    grp_fu_182_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_182_p0() {
    grp_fu_182_p0 = esl_zext<64,16>(reg_189.read());
}

void gaussian::thread_i_fu_216_p2() {
    i_fu_216_p2 = (!indvar1_i_reg_135.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_bigint<11>(indvar1_i_reg_135.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void gaussian::thread_in_r_address0() {
    if (esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_13_fu_498_p1.read());
    } else if (esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_11_fu_477_p1.read());
    } else if (esl_seteq<1,6,6>(ap_ST_st18_fsm_17, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_8_fu_409_p1.read());
    } else if (esl_seteq<1,6,6>(ap_ST_st13_fsm_12, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_7_fu_391_p1.read());
    } else if (esl_seteq<1,6,6>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_4_fu_340_p1.read());
    } else if (esl_seteq<1,6,6>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_2_fu_294_p1.read());
    } else {
        in_r_address0 =  (sc_lv<21>) (tmp_13_fu_498_p1.read());
    }
}

void gaussian::thread_in_r_address1() {
    if (esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read())) {
        in_r_address1 =  (sc_lv<21>) (tmp_12_fu_485_p1.read());
    } else if (esl_seteq<1,6,6>(ap_ST_st18_fsm_17, ap_CS_fsm.read())) {
        in_r_address1 =  (sc_lv<21>) (tmp_9_fu_422_p1.read());
    } else if (esl_seteq<1,6,6>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        in_r_address1 =  (sc_lv<21>) (tmp_3_fu_313_p1.read());
    } else {
        in_r_address1 =  (sc_lv<21>) (tmp_12_fu_485_p1.read());
    }
}

void gaussian::thread_in_r_ce0() {
    if ((esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || 
         (esl_seteq<1,6,6>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_240_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,6,6>(ap_ST_st8_fsm_7, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,6,6>(ap_ST_st18_fsm_17, ap_CS_fsm.read()))) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void gaussian::thread_in_r_ce1() {
    if ((esl_seteq<1,6,6>(ap_ST_st19_fsm_18, ap_CS_fsm.read()) || 
         (esl_seteq<1,6,6>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(exitcond1_fu_240_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,6,6>(ap_ST_st18_fsm_17, ap_CS_fsm.read()))) {
        in_r_ce1 = ap_const_logic_1;
    } else {
        in_r_ce1 = ap_const_logic_0;
    }
}

void gaussian::thread_j_fu_234_p2() {
    j_fu_234_p2 = (!indvar_i_reg_147.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_bigint<11>(indvar_i_reg_147.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void gaussian::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<21>) (tmp_8_reg_633.read());
}

void gaussian::thread_out_r_ce0() {
    if (esl_seteq<1,6,6>(ap_ST_st59_fsm_58, ap_CS_fsm.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void gaussian::thread_out_r_d0() {
    out_r_d0 = tmp_14_reg_713.read();
}

void gaussian::thread_out_r_we0() {
    if ((esl_seteq<1,6,6>(ap_ST_st59_fsm_58, ap_CS_fsm.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void gaussian::thread_p_addr10_fu_414_p2() {
    p_addr10_fu_414_p2 = (!p_addr8_cast_reg_612.read().is_01() || !tmp_12_i_trn_cast_reg_591.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr8_cast_reg_612.read()) + sc_biguint<24>(tmp_12_i_trn_cast_reg_591.read()));
}

void gaussian::thread_p_addr11_fu_401_p2() {
    p_addr11_fu_401_p2 = (!p_addr8_cast_reg_612.read().is_01() || !tmp_8_i_trn_cast_reg_570.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr8_cast_reg_612.read()) + sc_biguint<24>(tmp_8_i_trn_cast_reg_570.read()));
}

void gaussian::thread_p_addr1_fu_469_p0() {
    p_addr1_fu_469_p0 = p_addr6_cast_fu_455_p1.read();
}

void gaussian::thread_p_addr1_fu_469_p2() {
    p_addr1_fu_469_p2 = (!p_addr1_fu_469_p0.read().is_01() || !tmp_12_i_trn_cast_reg_591.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr1_fu_469_p0.read()) + sc_biguint<24>(tmp_12_i_trn_cast_reg_591.read()));
}

void gaussian::thread_p_addr2_fu_284_p0() {
    p_addr2_fu_284_p0 = p_addr_cast_fu_280_p1.read();
}

void gaussian::thread_p_addr2_fu_284_p2() {
    p_addr2_fu_284_p2 = (!p_addr2_fu_284_p0.read().is_01() || !tmp_4_i_trn_cast_fu_246_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr2_fu_284_p0.read()) + sc_biguint<24>(tmp_4_i_trn_cast_fu_246_p1.read()));
}

void gaussian::thread_p_addr3_fu_303_p0() {
    p_addr3_fu_303_p0 = p_addr_cast_fu_280_p1.read();
}

void gaussian::thread_p_addr3_fu_303_p2() {
    p_addr3_fu_303_p2 = (!p_addr3_fu_303_p0.read().is_01() || !tmp_8_i_trn_cast_fu_299_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr3_fu_303_p0.read()) + sc_biguint<24>(tmp_8_i_trn_cast_fu_299_p1.read()));
}

void gaussian::thread_p_addr4_fu_464_p0() {
    p_addr4_fu_464_p0 = p_addr6_cast_fu_455_p1.read();
}

void gaussian::thread_p_addr4_fu_464_p2() {
    p_addr4_fu_464_p2 = (!p_addr4_fu_464_p0.read().is_01() || !tmp_8_i_trn_cast_reg_570.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr4_fu_464_p0.read()) + sc_biguint<24>(tmp_8_i_trn_cast_reg_570.read()));
}

void gaussian::thread_p_addr5_fu_331_p2() {
    p_addr5_fu_331_p2 = (!p_addr_cast_reg_560.read().is_01() || !tmp_12_i_trn_cast_fu_328_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr_cast_reg_560.read()) + sc_biguint<24>(tmp_12_i_trn_cast_fu_328_p1.read()));
}

void gaussian::thread_p_addr6_cast_fu_455_p1() {
    p_addr6_cast_fu_455_p1 = esl_sext<24,23>(p_addr6_fu_449_p2.read());
}

void gaussian::thread_p_addr6_fu_449_p2() {
    p_addr6_fu_449_p2 = (!p_shl4_cast_fu_434_p1.read().is_01() || !p_shl5_cast_fu_445_p1.read().is_01())? sc_lv<23>(): (sc_bigint<23>(p_shl4_cast_fu_434_p1.read()) - sc_biguint<23>(p_shl5_cast_fu_445_p1.read()));
}

void gaussian::thread_p_addr7_fu_459_p0() {
    p_addr7_fu_459_p0 = p_addr6_cast_fu_455_p1.read();
}

void gaussian::thread_p_addr7_fu_459_p2() {
    p_addr7_fu_459_p2 = (!p_addr7_fu_459_p0.read().is_01() || !tmp_4_i_trn_cast_reg_554.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr7_fu_459_p0.read()) + sc_biguint<24>(tmp_4_i_trn_cast_reg_554.read()));
}

void gaussian::thread_p_addr8_cast_fu_378_p1() {
    p_addr8_cast_fu_378_p1 = esl_sext<24,23>(p_addr8_fu_372_p2.read());
}

void gaussian::thread_p_addr8_fu_372_p2() {
    p_addr8_fu_372_p2 = (!p_shl2_cast_fu_357_p1.read().is_01() || !p_shl3_cast_fu_368_p1.read().is_01())? sc_lv<23>(): (sc_bigint<23>(p_shl2_cast_fu_357_p1.read()) - sc_biguint<23>(p_shl3_cast_fu_368_p1.read()));
}

void gaussian::thread_p_addr9_fu_382_p0() {
    p_addr9_fu_382_p0 = esl_sext<24,23>(p_addr8_fu_372_p2.read());
}

void gaussian::thread_p_addr9_fu_382_p2() {
    p_addr9_fu_382_p2 = (!p_addr9_fu_382_p0.read().is_01() || !tmp_4_i_trn_cast_reg_554.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr9_fu_382_p0.read()) + sc_biguint<24>(tmp_4_i_trn_cast_reg_554.read()));
}

void gaussian::thread_p_addr_cast_fu_280_p1() {
    p_addr_cast_fu_280_p1 = esl_sext<24,23>(p_addr_fu_274_p2.read());
}

void gaussian::thread_p_addr_fu_274_p2() {
    p_addr_fu_274_p2 = (!p_shl_cast_fu_258_p1.read().is_01() || !p_shl1_cast_fu_270_p1.read().is_01())? sc_lv<23>(): (sc_bigint<23>(p_shl_cast_fu_258_p1.read()) - sc_biguint<23>(p_shl1_cast_fu_270_p1.read()));
}

void gaussian::thread_p_shl1_cast_fu_270_p1() {
    p_shl1_cast_fu_270_p1 = esl_zext<23,18>(tmp_1_fu_262_p3.read());
}

void gaussian::thread_p_shl2_cast_fu_357_p1() {
    p_shl2_cast_fu_357_p1 = esl_zext<23,22>(tmp_5_fu_350_p3.read());
}

void gaussian::thread_p_shl3_cast_fu_368_p1() {
    p_shl3_cast_fu_368_p1 = esl_zext<23,18>(tmp_6_fu_361_p3.read());
}

void gaussian::thread_p_shl4_cast_fu_434_p1() {
    p_shl4_cast_fu_434_p1 = esl_zext<23,22>(tmp_s_fu_427_p3.read());
}

void gaussian::thread_p_shl5_cast_fu_445_p1() {
    p_shl5_cast_fu_445_p1 = esl_zext<23,18>(tmp_10_fu_438_p3.read());
}

void gaussian::thread_p_shl_cast_fu_258_p1() {
    p_shl_cast_fu_258_p1 = esl_zext<23,22>(tmp_fu_250_p3.read());
}

void gaussian::thread_tmp6_i_fu_228_p2() {
    tmp6_i_fu_228_p2 = (!indvar_i_reg_147.read().is_01() || !ap_const_lv11_2.is_01())? sc_lv<11>(): (sc_bigint<11>(indvar_i_reg_147.read()) + sc_biguint<11>(ap_const_lv11_2));
}

void gaussian::thread_tmp_10_fu_438_p3() {
    tmp_10_fu_438_p3 = esl_concat<11,7>(tmp_i_12_reg_525.read(), ap_const_lv7_0);
}

void gaussian::thread_tmp_11_fu_477_p0() {
    tmp_11_fu_477_p0 = esl_sext<32,24>(p_addr7_reg_648.read());
}

void gaussian::thread_tmp_11_fu_477_p1() {
    tmp_11_fu_477_p1 = esl_zext<64,32>(tmp_11_fu_477_p0.read());
}

void gaussian::thread_tmp_12_fu_485_p0() {
    tmp_12_fu_485_p0 = esl_sext<32,24>(p_addr4_reg_653.read());
}

void gaussian::thread_tmp_12_fu_485_p1() {
    tmp_12_fu_485_p1 = esl_zext<64,32>(tmp_12_fu_485_p0.read());
}

void gaussian::thread_tmp_12_i_trn_cast_fu_328_p1() {
    tmp_12_i_trn_cast_fu_328_p1 = esl_zext<24,11>(tmp6_i_reg_541.read());
}

void gaussian::thread_tmp_13_fu_498_p0() {
    tmp_13_fu_498_p0 = esl_sext<32,24>(p_addr1_reg_658.read());
}

void gaussian::thread_tmp_13_fu_498_p1() {
    tmp_13_fu_498_p1 = esl_zext<64,32>(tmp_13_fu_498_p0.read());
}

void gaussian::thread_tmp_14_fu_521_p1() {
    tmp_14_fu_521_p1 = grp_fu_176_p1.read().range(16-1, 0);
}

void gaussian::thread_tmp_14_i5_fu_345_p1() {
    tmp_14_i5_fu_345_p1 = esl_zext<64,16>(reg_185.read());
}

void gaussian::thread_tmp_18_i6_fu_396_p1() {
    tmp_18_i6_fu_396_p1 = esl_zext<64,16>(reg_185.read());
}

void gaussian::thread_tmp_1_fu_262_p3() {
    tmp_1_fu_262_p3 = esl_concat<11,7>(indvar1_i_reg_135.read(), ap_const_lv7_0);
}

void gaussian::thread_tmp_22_i7_fu_490_p1() {
    tmp_22_i7_fu_490_p1 = esl_zext<64,16>(reg_185.read());
}

void gaussian::thread_tmp_26_i8_fu_503_p1() {
    tmp_26_i8_fu_503_p1 = esl_zext<64,16>(reg_189.read());
}

void gaussian::thread_tmp_2_fu_294_p0() {
    tmp_2_fu_294_p0 = esl_sext<32,24>(p_addr2_fu_284_p2.read());
}

void gaussian::thread_tmp_2_fu_294_p1() {
    tmp_2_fu_294_p1 = esl_zext<64,32>(tmp_2_fu_294_p0.read());
}

void gaussian::thread_tmp_30_i9_fu_508_p1() {
    tmp_30_i9_fu_508_p1 = esl_zext<64,16>(reg_185.read());
}

void gaussian::thread_tmp_34_i1_fu_513_p1() {
    tmp_34_i1_fu_513_p1 = esl_zext<64,16>(in_load_7_reg_678.read());
}

void gaussian::thread_tmp_38_i1_fu_517_p1() {
    tmp_38_i1_fu_517_p1 = esl_zext<64,16>(in_load_8_reg_688.read());
}

void gaussian::thread_tmp_3_fu_313_p0() {
    tmp_3_fu_313_p0 = esl_sext<32,24>(p_addr3_fu_303_p2.read());
}

void gaussian::thread_tmp_3_fu_313_p1() {
    tmp_3_fu_313_p1 = esl_zext<64,32>(tmp_3_fu_313_p0.read());
}

void gaussian::thread_tmp_4_fu_340_p0() {
    tmp_4_fu_340_p0 = esl_sext<32,24>(p_addr5_fu_331_p2.read());
}

void gaussian::thread_tmp_4_fu_340_p1() {
    tmp_4_fu_340_p1 = esl_zext<64,32>(tmp_4_fu_340_p0.read());
}

void gaussian::thread_tmp_4_i_trn_cast_fu_246_p1() {
    tmp_4_i_trn_cast_fu_246_p1 = esl_zext<24,11>(indvar_i_reg_147.read());
}

void gaussian::thread_tmp_5_fu_350_p3() {
    tmp_5_fu_350_p3 = esl_concat<11,11>(i_reg_531.read(), ap_const_lv11_0);
}

void gaussian::thread_tmp_6_fu_361_p3() {
    tmp_6_fu_361_p3 = esl_concat<11,7>(i_reg_531.read(), ap_const_lv7_0);
}

void gaussian::thread_tmp_6_i3_fu_318_p1() {
    tmp_6_i3_fu_318_p1 = esl_zext<64,16>(reg_185.read());
}

void gaussian::thread_tmp_7_fu_391_p0() {
    tmp_7_fu_391_p0 = esl_sext<32,24>(p_addr9_fu_382_p2.read());
}

void gaussian::thread_tmp_7_fu_391_p1() {
    tmp_7_fu_391_p1 = esl_zext<64,32>(tmp_7_fu_391_p0.read());
}

void gaussian::thread_tmp_8_fu_409_p0() {
    tmp_8_fu_409_p0 = esl_sext<32,24>(p_addr11_fu_401_p2.read());
}

void gaussian::thread_tmp_8_fu_409_p1() {
    tmp_8_fu_409_p1 = esl_zext<64,32>(tmp_8_fu_409_p0.read());
}

void gaussian::thread_tmp_8_i_trn_cast_fu_299_p1() {
    tmp_8_i_trn_cast_fu_299_p1 = esl_zext<24,11>(j_fu_234_p2.read());
}

void gaussian::thread_tmp_9_fu_422_p0() {
    tmp_9_fu_422_p0 = esl_sext<32,24>(p_addr10_fu_414_p2.read());
}

void gaussian::thread_tmp_9_fu_422_p1() {
    tmp_9_fu_422_p1 = esl_zext<64,32>(tmp_9_fu_422_p0.read());
}

void gaussian::thread_tmp_fu_250_p3() {
    tmp_fu_250_p3 = esl_concat<11,11>(indvar1_i_reg_135.read(), ap_const_lv11_0);
}

void gaussian::thread_tmp_i_12_fu_210_p2() {
    tmp_i_12_fu_210_p2 = (!indvar1_i_reg_135.read().is_01() || !ap_const_lv11_2.is_01())? sc_lv<11>(): (sc_bigint<11>(indvar1_i_reg_135.read()) + sc_biguint<11>(ap_const_lv11_2));
}

void gaussian::thread_tmp_s_fu_427_p3() {
    tmp_s_fu_427_p3 = esl_concat<11,11>(tmp_i_12_reg_525.read(), ap_const_lv11_0);
}

void gaussian::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_222_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(exitcond1_fu_240_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 23 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 24 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
            break;
        case 25 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
            break;
        case 26 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
            break;
        case 27 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
            break;
        case 28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
            break;
        case 29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
            break;
        case 30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
            break;
        case 31 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
            break;
        case 33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
            break;
        case 34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
            break;
        case 35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
            break;
        case 36 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
            break;
        case 37 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
            break;
        case 38 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
            break;
        case 39 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
            break;
        case 40 : 
            ap_NS_fsm = ap_ST_st42_fsm_41;
            break;
        case 41 : 
            ap_NS_fsm = ap_ST_st43_fsm_42;
            break;
        case 42 : 
            ap_NS_fsm = ap_ST_st44_fsm_43;
            break;
        case 43 : 
            ap_NS_fsm = ap_ST_st45_fsm_44;
            break;
        case 44 : 
            ap_NS_fsm = ap_ST_st46_fsm_45;
            break;
        case 45 : 
            ap_NS_fsm = ap_ST_st47_fsm_46;
            break;
        case 46 : 
            ap_NS_fsm = ap_ST_st48_fsm_47;
            break;
        case 47 : 
            ap_NS_fsm = ap_ST_st49_fsm_48;
            break;
        case 48 : 
            ap_NS_fsm = ap_ST_st50_fsm_49;
            break;
        case 49 : 
            ap_NS_fsm = ap_ST_st51_fsm_50;
            break;
        case 50 : 
            ap_NS_fsm = ap_ST_st52_fsm_51;
            break;
        case 51 : 
            ap_NS_fsm = ap_ST_st53_fsm_52;
            break;
        case 52 : 
            ap_NS_fsm = ap_ST_st54_fsm_53;
            break;
        case 53 : 
            ap_NS_fsm = ap_ST_st55_fsm_54;
            break;
        case 54 : 
            ap_NS_fsm = ap_ST_st56_fsm_55;
            break;
        case 55 : 
            ap_NS_fsm = ap_ST_st57_fsm_56;
            break;
        case 56 : 
            ap_NS_fsm = ap_ST_st58_fsm_57;
            break;
        case 57 : 
            ap_NS_fsm = ap_ST_st59_fsm_58;
            break;
        case 58 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}
void gaussian::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_address0\" :  \"" << in_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_ce0\" :  \"" << in_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_q0\" :  \"" << in_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_address1\" :  \"" << in_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_ce1\" :  \"" << in_r_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_q1\" :  \"" << in_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_address0\" :  \"" << out_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ce0\" :  \"" << out_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_we0\" :  \"" << out_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_d0\" :  \"" << out_r_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

