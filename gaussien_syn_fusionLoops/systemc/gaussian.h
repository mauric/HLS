// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _gaussian_HH_
#define _gaussian_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "gaussian_loopFusion.h"

namespace ap_rtl {

struct gaussian : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<21> > in_r_address0;
    sc_out< sc_logic > in_r_ce0;
    sc_in< sc_lv<16> > in_r_q0;
    sc_out< sc_lv<21> > in_r_address1;
    sc_out< sc_logic > in_r_ce1;
    sc_in< sc_lv<16> > in_r_q1;
    sc_out< sc_lv<21> > out_r_address0;
    sc_out< sc_logic > out_r_ce0;
    sc_out< sc_logic > out_r_we0;
    sc_out< sc_lv<16> > out_r_d0;


    // Module declarations
    gaussian(sc_module_name name);
    SC_HAS_PROCESS(gaussian);

    ~gaussian();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    gaussian_loopFusion* grp_gaussian_loopFusion_fu_17;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > grp_gaussian_loopFusion_fu_17_ap_start;
    sc_signal< sc_logic > grp_gaussian_loopFusion_fu_17_ap_done;
    sc_signal< sc_logic > grp_gaussian_loopFusion_fu_17_ap_idle;
    sc_signal< sc_logic > grp_gaussian_loopFusion_fu_17_ap_ready;
    sc_signal< sc_lv<21> > grp_gaussian_loopFusion_fu_17_in_r_address0;
    sc_signal< sc_logic > grp_gaussian_loopFusion_fu_17_in_r_ce0;
    sc_signal< sc_lv<16> > grp_gaussian_loopFusion_fu_17_in_r_q0;
    sc_signal< sc_lv<21> > grp_gaussian_loopFusion_fu_17_in_r_address1;
    sc_signal< sc_logic > grp_gaussian_loopFusion_fu_17_in_r_ce1;
    sc_signal< sc_lv<16> > grp_gaussian_loopFusion_fu_17_in_r_q1;
    sc_signal< sc_lv<21> > grp_gaussian_loopFusion_fu_17_out_r_address0;
    sc_signal< sc_logic > grp_gaussian_loopFusion_fu_17_out_r_ce0;
    sc_signal< sc_logic > grp_gaussian_loopFusion_fu_17_out_r_we0;
    sc_signal< sc_lv<16> > grp_gaussian_loopFusion_fu_17_out_r_d0;
    sc_signal< sc_logic > grp_gaussian_loopFusion_fu_17_ap_start_ap_start_reg;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_st1_fsm_0;
    static const sc_lv<1> ap_ST_st2_fsm_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_gaussian_loopFusion_fu_17_ap_start();
    void thread_grp_gaussian_loopFusion_fu_17_in_r_q0();
    void thread_grp_gaussian_loopFusion_fu_17_in_r_q1();
    void thread_in_r_address0();
    void thread_in_r_address1();
    void thread_in_r_ce0();
    void thread_in_r_ce1();
    void thread_out_r_address0();
    void thread_out_r_ce0();
    void thread_out_r_d0();
    void thread_out_r_we0();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
