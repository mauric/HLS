-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.2
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gaussian_loopFusion is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_r_address1 : OUT STD_LOGIC_VECTOR (20 downto 0);
    in_r_ce1 : OUT STD_LOGIC;
    in_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of gaussian_loopFusion is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_ST_st50_fsm_49 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_ST_st51_fsm_50 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_ST_st52_fsm_51 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_ST_st53_fsm_52 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_ST_st54_fsm_53 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_ST_st55_fsm_54 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_ST_st56_fsm_55 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_ST_st57_fsm_56 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_ST_st58_fsm_57 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_ST_st59_fsm_58 : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_ST_st60_fsm_59 : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_ST_st61_fsm_60 : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3E7C8F32 : STD_LOGIC_VECTOR (31 downto 0) := "00111110011111001000111100110010";
    constant ap_const_lv32_3F1B5159 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000110110101000101011001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_437 : STD_LOGIC_VECTOR (10 downto 0) := "10000110111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_77E : STD_LOGIC_VECTOR (10 downto 0) := "11101111110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal tmp_address0 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_ce0 : STD_LOGIC;
    signal tmp_we0 : STD_LOGIC;
    signal tmp_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_address1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_ce1 : STD_LOGIC;
    signal tmp_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_231 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_235 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_225_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_239 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_228_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_249 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_210_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_215_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_260 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_206_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_271 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_fu_279_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_1_reg_647 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_fu_285_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_653 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_addr_fu_321_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr_reg_661 : STD_LOGIC_VECTOR (22 downto 0);
    signal exitcond_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_addr2_fu_360_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr2_reg_671 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_44_fu_370_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_reg_676 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_2_reg_686 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_50_reg_691 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_52_fu_422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_reg_701 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_2_fu_427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_432_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_addr3_fu_469_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr3_reg_731 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_s_fu_511_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_reg_751 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_reg_761 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_766 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr_cast1_fu_521_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr_reg_661_temp: signed (23-1 downto 0);
    signal p_addr_cast1_reg_771 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr2_cast1_fu_524_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr2_reg_671_temp: signed (23-1 downto 0);
    signal p_addr2_cast1_reg_776 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr3_cast1_fu_527_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr3_reg_731_temp: signed (23-1 downto 0);
    signal p_addr3_cast1_reg_783 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp6_fu_530_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp6_reg_788 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond1_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_reg_802 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_addr1_fu_580_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr1_reg_812 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_24_fu_593_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_reg_842 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_61_fu_643_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_reg_862 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar1_reg_182 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_reg_193 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_fu_331_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_fu_406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_479_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_fu_506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_fu_588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_206_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_206_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_210_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_210_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_215_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_222_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_225_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_228_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_297_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_fu_309_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl_cast_fu_305_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl1_cast_fu_317_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_25_fu_331_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr_fu_321_p2_temp: signed (23-1 downto 0);
    signal tmp_37_fu_336_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_39_fu_348_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl2_cast_fu_344_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl3_cast_fu_356_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_44_fu_370_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr2_fu_360_p2_temp: signed (23-1 downto 0);
    signal tmp_48_fu_395_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_49_fu_406_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_395_p3_temp: signed (23-1 downto 0);
    signal tmp_51_fu_411_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_52_fu_422_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_411_p3_temp: signed (23-1 downto 0);
    signal tmp_45_fu_447_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_46_fu_458_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl4_cast_fu_454_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl5_cast_fu_465_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_47_fu_479_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr3_fu_469_p2_temp: signed (23-1 downto 0);
    signal tmp_53_fu_484_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_54_fu_494_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_55_fu_506_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_494_p3_temp: signed (23-1 downto 0);
    signal j_fu_536_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_25_trn5_cast_fu_548_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr7_fu_552_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_56_fu_561_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr7_fu_552_p2_temp: signed (24-1 downto 0);
    signal p_addr4_fu_566_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_57_fu_575_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr4_fu_566_p2_temp: signed (24-1 downto 0);
    signal tmp_58_fu_588_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr1_reg_812_temp: signed (24-1 downto 0);
    signal tmp_37_trn_cast_fu_608_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_addr3_fu_612_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_59_fu_621_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_addr3_fu_612_p2_temp: signed (24-1 downto 0);
    signal tmp_39_trn_cast_fu_626_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_addr4_fu_629_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_60_fu_638_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_addr4_fu_629_p2_temp: signed (24-1 downto 0);
    signal grp_fu_222_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_206_ce : STD_LOGIC;
    signal grp_fu_210_ce : STD_LOGIC;
    signal grp_fu_215_ce : STD_LOGIC;
    signal grp_fu_222_ce : STD_LOGIC;
    signal grp_fu_225_ce : STD_LOGIC;
    signal grp_fu_228_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component gaussian_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gaussian_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gaussian_fptoui_32ns_64_4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component gaussian_sitofp_64ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gaussian_loopFusion_tmp IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    tmp_U : component gaussian_loopFusion_tmp
    generic map (
        DataWidth => 32,
        AddressRange => 2073600,
        AddressWidth => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp_address0,
        ce0 => tmp_ce0,
        we0 => tmp_we0,
        d0 => tmp_d0,
        q0 => tmp_q0,
        address1 => tmp_address1,
        ce1 => tmp_ce1,
        q1 => tmp_q1);

    gaussian_fadd_32ns_32ns_32_5_full_dsp_U1 : component gaussian_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_206_p0,
        din1 => grp_fu_206_p1,
        ce => grp_fu_206_ce,
        dout => grp_fu_206_p2);

    gaussian_fmul_32ns_32ns_32_4_max_dsp_U2 : component gaussian_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 2,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_210_p0,
        din1 => grp_fu_210_p1,
        ce => grp_fu_210_ce,
        dout => grp_fu_210_p2);

    gaussian_fmul_32ns_32ns_32_4_max_dsp_U3 : component gaussian_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 3,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_215_p0,
        din1 => grp_fu_215_p1,
        ce => grp_fu_215_ce,
        dout => grp_fu_215_p2);

    gaussian_fptoui_32ns_64_4_U4 : component gaussian_fptoui_32ns_64_4
    generic map (
        ID => 4,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_222_p0,
        ce => grp_fu_222_ce,
        dout => grp_fu_222_p1);

    gaussian_sitofp_64ns_32_6_U5 : component gaussian_sitofp_64ns_32_6
    generic map (
        ID => 5,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_225_p0,
        ce => grp_fu_225_ce,
        dout => grp_fu_225_p1);

    gaussian_sitofp_64ns_32_6_U6 : component gaussian_sitofp_64ns_32_6
    generic map (
        ID => 6,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_228_p0,
        ce => grp_fu_228_ce,
        dout => grp_fu_228_p1);




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- indvar1_reg_182 assign process. --
    indvar1_reg_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st26_fsm_25 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond1_fu_542_p2)))) then 
                indvar1_reg_182 <= i_reg_653;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                indvar1_reg_182 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- indvar_reg_193 assign process. --
    indvar_reg_193_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st25_fsm_24 = ap_CS_fsm)) then 
                indvar_reg_193 <= ap_const_lv11_0;
            elsif ((ap_ST_st61_fsm_60 = ap_CS_fsm)) then 
                indvar_reg_193 <= tmp6_reg_788;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                i_reg_653 <= i_fu_285_p2;
                tmp_1_1_reg_647 <= tmp_1_1_fu_279_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_542_p2))) then
                p_addr1_reg_812 <= p_addr1_fu_580_p2;
                tmp_57_reg_802(0) <= tmp_57_fu_575_p1(0);
    tmp_57_reg_802(1) <= tmp_57_fu_575_p1(1);
    tmp_57_reg_802(2) <= tmp_57_fu_575_p1(2);
    tmp_57_reg_802(3) <= tmp_57_fu_575_p1(3);
    tmp_57_reg_802(4) <= tmp_57_fu_575_p1(4);
    tmp_57_reg_802(5) <= tmp_57_fu_575_p1(5);
    tmp_57_reg_802(6) <= tmp_57_fu_575_p1(6);
    tmp_57_reg_802(7) <= tmp_57_fu_575_p1(7);
    tmp_57_reg_802(8) <= tmp_57_fu_575_p1(8);
    tmp_57_reg_802(9) <= tmp_57_fu_575_p1(9);
    tmp_57_reg_802(10) <= tmp_57_fu_575_p1(10);
    tmp_57_reg_802(11) <= tmp_57_fu_575_p1(11);
    tmp_57_reg_802(12) <= tmp_57_fu_575_p1(12);
    tmp_57_reg_802(13) <= tmp_57_fu_575_p1(13);
    tmp_57_reg_802(14) <= tmp_57_fu_575_p1(14);
    tmp_57_reg_802(15) <= tmp_57_fu_575_p1(15);
    tmp_57_reg_802(16) <= tmp_57_fu_575_p1(16);
    tmp_57_reg_802(17) <= tmp_57_fu_575_p1(17);
    tmp_57_reg_802(18) <= tmp_57_fu_575_p1(18);
    tmp_57_reg_802(19) <= tmp_57_fu_575_p1(19);
    tmp_57_reg_802(20) <= tmp_57_fu_575_p1(20);
    tmp_57_reg_802(21) <= tmp_57_fu_575_p1(21);
    tmp_57_reg_802(22) <= tmp_57_fu_575_p1(22);
    tmp_57_reg_802(23) <= tmp_57_fu_575_p1(23);
    tmp_57_reg_802(24) <= tmp_57_fu_575_p1(24);
    tmp_57_reg_802(25) <= tmp_57_fu_575_p1(25);
    tmp_57_reg_802(26) <= tmp_57_fu_575_p1(26);
    tmp_57_reg_802(27) <= tmp_57_fu_575_p1(27);
    tmp_57_reg_802(28) <= tmp_57_fu_575_p1(28);
    tmp_57_reg_802(29) <= tmp_57_fu_575_p1(29);
    tmp_57_reg_802(30) <= tmp_57_fu_575_p1(30);
    tmp_57_reg_802(31) <= tmp_57_fu_575_p1(31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st25_fsm_24 = ap_CS_fsm)) then
                p_addr2_cast1_reg_776(7) <= p_addr2_cast1_fu_524_p1(7);
    p_addr2_cast1_reg_776(8) <= p_addr2_cast1_fu_524_p1(8);
    p_addr2_cast1_reg_776(9) <= p_addr2_cast1_fu_524_p1(9);
    p_addr2_cast1_reg_776(10) <= p_addr2_cast1_fu_524_p1(10);
    p_addr2_cast1_reg_776(11) <= p_addr2_cast1_fu_524_p1(11);
    p_addr2_cast1_reg_776(12) <= p_addr2_cast1_fu_524_p1(12);
    p_addr2_cast1_reg_776(13) <= p_addr2_cast1_fu_524_p1(13);
    p_addr2_cast1_reg_776(14) <= p_addr2_cast1_fu_524_p1(14);
    p_addr2_cast1_reg_776(15) <= p_addr2_cast1_fu_524_p1(15);
    p_addr2_cast1_reg_776(16) <= p_addr2_cast1_fu_524_p1(16);
    p_addr2_cast1_reg_776(17) <= p_addr2_cast1_fu_524_p1(17);
    p_addr2_cast1_reg_776(18) <= p_addr2_cast1_fu_524_p1(18);
    p_addr2_cast1_reg_776(19) <= p_addr2_cast1_fu_524_p1(19);
    p_addr2_cast1_reg_776(20) <= p_addr2_cast1_fu_524_p1(20);
    p_addr2_cast1_reg_776(21) <= p_addr2_cast1_fu_524_p1(21);
    p_addr2_cast1_reg_776(22) <= p_addr2_cast1_fu_524_p1(22);
    p_addr2_cast1_reg_776(23) <= p_addr2_cast1_fu_524_p1(23);
                p_addr3_cast1_reg_783(7) <= p_addr3_cast1_fu_527_p1(7);
    p_addr3_cast1_reg_783(8) <= p_addr3_cast1_fu_527_p1(8);
    p_addr3_cast1_reg_783(9) <= p_addr3_cast1_fu_527_p1(9);
    p_addr3_cast1_reg_783(10) <= p_addr3_cast1_fu_527_p1(10);
    p_addr3_cast1_reg_783(11) <= p_addr3_cast1_fu_527_p1(11);
    p_addr3_cast1_reg_783(12) <= p_addr3_cast1_fu_527_p1(12);
    p_addr3_cast1_reg_783(13) <= p_addr3_cast1_fu_527_p1(13);
    p_addr3_cast1_reg_783(14) <= p_addr3_cast1_fu_527_p1(14);
    p_addr3_cast1_reg_783(15) <= p_addr3_cast1_fu_527_p1(15);
    p_addr3_cast1_reg_783(16) <= p_addr3_cast1_fu_527_p1(16);
    p_addr3_cast1_reg_783(17) <= p_addr3_cast1_fu_527_p1(17);
    p_addr3_cast1_reg_783(18) <= p_addr3_cast1_fu_527_p1(18);
    p_addr3_cast1_reg_783(19) <= p_addr3_cast1_fu_527_p1(19);
    p_addr3_cast1_reg_783(20) <= p_addr3_cast1_fu_527_p1(20);
    p_addr3_cast1_reg_783(21) <= p_addr3_cast1_fu_527_p1(21);
    p_addr3_cast1_reg_783(22) <= p_addr3_cast1_fu_527_p1(22);
    p_addr3_cast1_reg_783(23) <= p_addr3_cast1_fu_527_p1(23);
                p_addr_cast1_reg_771(7) <= p_addr_cast1_fu_521_p1(7);
    p_addr_cast1_reg_771(8) <= p_addr_cast1_fu_521_p1(8);
    p_addr_cast1_reg_771(9) <= p_addr_cast1_fu_521_p1(9);
    p_addr_cast1_reg_771(10) <= p_addr_cast1_fu_521_p1(10);
    p_addr_cast1_reg_771(11) <= p_addr_cast1_fu_521_p1(11);
    p_addr_cast1_reg_771(12) <= p_addr_cast1_fu_521_p1(12);
    p_addr_cast1_reg_771(13) <= p_addr_cast1_fu_521_p1(13);
    p_addr_cast1_reg_771(14) <= p_addr_cast1_fu_521_p1(14);
    p_addr_cast1_reg_771(15) <= p_addr_cast1_fu_521_p1(15);
    p_addr_cast1_reg_771(16) <= p_addr_cast1_fu_521_p1(16);
    p_addr_cast1_reg_771(17) <= p_addr_cast1_fu_521_p1(17);
    p_addr_cast1_reg_771(18) <= p_addr_cast1_fu_521_p1(18);
    p_addr_cast1_reg_771(19) <= p_addr_cast1_fu_521_p1(19);
    p_addr_cast1_reg_771(20) <= p_addr_cast1_fu_521_p1(20);
    p_addr_cast1_reg_771(21) <= p_addr_cast1_fu_521_p1(21);
    p_addr_cast1_reg_771(22) <= p_addr_cast1_fu_521_p1(22);
    p_addr_cast1_reg_771(23) <= p_addr_cast1_fu_521_p1(23);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (exitcond_fu_291_p2 = ap_const_lv1_0))) then
                p_addr2_reg_671(7) <= p_addr2_fu_360_p2(7);
    p_addr2_reg_671(8) <= p_addr2_fu_360_p2(8);
    p_addr2_reg_671(9) <= p_addr2_fu_360_p2(9);
    p_addr2_reg_671(10) <= p_addr2_fu_360_p2(10);
    p_addr2_reg_671(11) <= p_addr2_fu_360_p2(11);
    p_addr2_reg_671(12) <= p_addr2_fu_360_p2(12);
    p_addr2_reg_671(13) <= p_addr2_fu_360_p2(13);
    p_addr2_reg_671(14) <= p_addr2_fu_360_p2(14);
    p_addr2_reg_671(15) <= p_addr2_fu_360_p2(15);
    p_addr2_reg_671(16) <= p_addr2_fu_360_p2(16);
    p_addr2_reg_671(17) <= p_addr2_fu_360_p2(17);
    p_addr2_reg_671(18) <= p_addr2_fu_360_p2(18);
    p_addr2_reg_671(19) <= p_addr2_fu_360_p2(19);
    p_addr2_reg_671(20) <= p_addr2_fu_360_p2(20);
    p_addr2_reg_671(21) <= p_addr2_fu_360_p2(21);
    p_addr2_reg_671(22) <= p_addr2_fu_360_p2(22);
                p_addr_reg_661(7) <= p_addr_fu_321_p2(7);
    p_addr_reg_661(8) <= p_addr_fu_321_p2(8);
    p_addr_reg_661(9) <= p_addr_fu_321_p2(9);
    p_addr_reg_661(10) <= p_addr_fu_321_p2(10);
    p_addr_reg_661(11) <= p_addr_fu_321_p2(11);
    p_addr_reg_661(12) <= p_addr_fu_321_p2(12);
    p_addr_reg_661(13) <= p_addr_fu_321_p2(13);
    p_addr_reg_661(14) <= p_addr_fu_321_p2(14);
    p_addr_reg_661(15) <= p_addr_fu_321_p2(15);
    p_addr_reg_661(16) <= p_addr_fu_321_p2(16);
    p_addr_reg_661(17) <= p_addr_fu_321_p2(17);
    p_addr_reg_661(18) <= p_addr_fu_321_p2(18);
    p_addr_reg_661(19) <= p_addr_fu_321_p2(19);
    p_addr_reg_661(20) <= p_addr_fu_321_p2(20);
    p_addr_reg_661(21) <= p_addr_fu_321_p2(21);
    p_addr_reg_661(22) <= p_addr_fu_321_p2(22);
                tmp_1_2_reg_686 <= p_addr_fu_321_p2(22 downto 1);
                tmp_44_reg_676(7) <= tmp_44_fu_370_p1(7);
    tmp_44_reg_676(8) <= tmp_44_fu_370_p1(8);
    tmp_44_reg_676(9) <= tmp_44_fu_370_p1(9);
    tmp_44_reg_676(10) <= tmp_44_fu_370_p1(10);
    tmp_44_reg_676(11) <= tmp_44_fu_370_p1(11);
    tmp_44_reg_676(12) <= tmp_44_fu_370_p1(12);
    tmp_44_reg_676(13) <= tmp_44_fu_370_p1(13);
    tmp_44_reg_676(14) <= tmp_44_fu_370_p1(14);
    tmp_44_reg_676(15) <= tmp_44_fu_370_p1(15);
    tmp_44_reg_676(16) <= tmp_44_fu_370_p1(16);
    tmp_44_reg_676(17) <= tmp_44_fu_370_p1(17);
    tmp_44_reg_676(18) <= tmp_44_fu_370_p1(18);
    tmp_44_reg_676(19) <= tmp_44_fu_370_p1(19);
    tmp_44_reg_676(20) <= tmp_44_fu_370_p1(20);
    tmp_44_reg_676(21) <= tmp_44_fu_370_p1(21);
    tmp_44_reg_676(22) <= tmp_44_fu_370_p1(22);
    tmp_44_reg_676(23) <= tmp_44_fu_370_p1(23);
    tmp_44_reg_676(24) <= tmp_44_fu_370_p1(24);
    tmp_44_reg_676(25) <= tmp_44_fu_370_p1(25);
    tmp_44_reg_676(26) <= tmp_44_fu_370_p1(26);
    tmp_44_reg_676(27) <= tmp_44_fu_370_p1(27);
    tmp_44_reg_676(28) <= tmp_44_fu_370_p1(28);
    tmp_44_reg_676(29) <= tmp_44_fu_370_p1(29);
    tmp_44_reg_676(30) <= tmp_44_fu_370_p1(30);
    tmp_44_reg_676(31) <= tmp_44_fu_370_p1(31);
                tmp_50_reg_691 <= p_addr2_fu_360_p2(22 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then
                p_addr3_reg_731(7) <= p_addr3_fu_469_p2(7);
    p_addr3_reg_731(8) <= p_addr3_fu_469_p2(8);
    p_addr3_reg_731(9) <= p_addr3_fu_469_p2(9);
    p_addr3_reg_731(10) <= p_addr3_fu_469_p2(10);
    p_addr3_reg_731(11) <= p_addr3_fu_469_p2(11);
    p_addr3_reg_731(12) <= p_addr3_fu_469_p2(12);
    p_addr3_reg_731(13) <= p_addr3_fu_469_p2(13);
    p_addr3_reg_731(14) <= p_addr3_fu_469_p2(14);
    p_addr3_reg_731(15) <= p_addr3_fu_469_p2(15);
    p_addr3_reg_731(16) <= p_addr3_fu_469_p2(16);
    p_addr3_reg_731(17) <= p_addr3_fu_469_p2(17);
    p_addr3_reg_731(18) <= p_addr3_fu_469_p2(18);
    p_addr3_reg_731(19) <= p_addr3_fu_469_p2(19);
    p_addr3_reg_731(20) <= p_addr3_fu_469_p2(20);
    p_addr3_reg_731(21) <= p_addr3_fu_469_p2(21);
    p_addr3_reg_731(22) <= p_addr3_fu_469_p2(22);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) or (ap_ST_st4_fsm_3 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st27_fsm_26 = ap_CS_fsm) or (ap_ST_st28_fsm_27 = ap_CS_fsm))) then
                reg_231 <= in_r_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) or (ap_ST_st4_fsm_3 = ap_CS_fsm) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or (ap_ST_st27_fsm_26 = ap_CS_fsm))) then
                reg_235 <= in_r_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm))) then
                reg_239 <= grp_fu_225_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm))) then
                reg_244 <= grp_fu_228_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm))) then
                reg_249 <= grp_fu_225_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st51_fsm_50 = ap_CS_fsm))) then
                reg_254 <= grp_fu_210_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st46_fsm_45 = ap_CS_fsm))) then
                reg_260 <= grp_fu_215_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st46_fsm_45 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm))) then
                reg_265 <= grp_fu_210_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st51_fsm_50 = ap_CS_fsm) or (ap_ST_st23_fsm_22 = ap_CS_fsm) or (ap_ST_st24_fsm_23 = ap_CS_fsm) or (ap_ST_st47_fsm_46 = ap_CS_fsm) or (ap_ST_st56_fsm_55 = ap_CS_fsm))) then
                reg_271 <= grp_fu_206_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st26_fsm_25 = ap_CS_fsm)) then
                tmp6_reg_788 <= tmp6_fu_530_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then
                tmp_17_reg_751 <= grp_fu_228_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then
                tmp_18_reg_761 <= grp_fu_215_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st19_fsm_18 = ap_CS_fsm)) then
                tmp_19_reg_766 <= grp_fu_206_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then
                tmp_52_reg_701(7) <= tmp_52_fu_422_p1(7);
    tmp_52_reg_701(8) <= tmp_52_fu_422_p1(8);
    tmp_52_reg_701(9) <= tmp_52_fu_422_p1(9);
    tmp_52_reg_701(10) <= tmp_52_fu_422_p1(10);
    tmp_52_reg_701(11) <= tmp_52_fu_422_p1(11);
    tmp_52_reg_701(12) <= tmp_52_fu_422_p1(12);
    tmp_52_reg_701(13) <= tmp_52_fu_422_p1(13);
    tmp_52_reg_701(14) <= tmp_52_fu_422_p1(14);
    tmp_52_reg_701(15) <= tmp_52_fu_422_p1(15);
    tmp_52_reg_701(16) <= tmp_52_fu_422_p1(16);
    tmp_52_reg_701(17) <= tmp_52_fu_422_p1(17);
    tmp_52_reg_701(18) <= tmp_52_fu_422_p1(18);
    tmp_52_reg_701(19) <= tmp_52_fu_422_p1(19);
    tmp_52_reg_701(20) <= tmp_52_fu_422_p1(20);
    tmp_52_reg_701(21) <= tmp_52_fu_422_p1(21);
    tmp_52_reg_701(22) <= tmp_52_fu_422_p1(22);
    tmp_52_reg_701(23) <= tmp_52_fu_422_p1(23);
    tmp_52_reg_701(24) <= tmp_52_fu_422_p1(24);
    tmp_52_reg_701(25) <= tmp_52_fu_422_p1(25);
    tmp_52_reg_701(26) <= tmp_52_fu_422_p1(26);
    tmp_52_reg_701(27) <= tmp_52_fu_422_p1(27);
    tmp_52_reg_701(28) <= tmp_52_fu_422_p1(28);
    tmp_52_reg_701(29) <= tmp_52_fu_422_p1(29);
    tmp_52_reg_701(30) <= tmp_52_fu_422_p1(30);
    tmp_52_reg_701(31) <= tmp_52_fu_422_p1(31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st42_fsm_41 = ap_CS_fsm)) then
                tmp_60_reg_842(0) <= tmp_60_fu_638_p1(0);
    tmp_60_reg_842(1) <= tmp_60_fu_638_p1(1);
    tmp_60_reg_842(2) <= tmp_60_fu_638_p1(2);
    tmp_60_reg_842(3) <= tmp_60_fu_638_p1(3);
    tmp_60_reg_842(4) <= tmp_60_fu_638_p1(4);
    tmp_60_reg_842(5) <= tmp_60_fu_638_p1(5);
    tmp_60_reg_842(6) <= tmp_60_fu_638_p1(6);
    tmp_60_reg_842(7) <= tmp_60_fu_638_p1(7);
    tmp_60_reg_842(8) <= tmp_60_fu_638_p1(8);
    tmp_60_reg_842(9) <= tmp_60_fu_638_p1(9);
    tmp_60_reg_842(10) <= tmp_60_fu_638_p1(10);
    tmp_60_reg_842(11) <= tmp_60_fu_638_p1(11);
    tmp_60_reg_842(12) <= tmp_60_fu_638_p1(12);
    tmp_60_reg_842(13) <= tmp_60_fu_638_p1(13);
    tmp_60_reg_842(14) <= tmp_60_fu_638_p1(14);
    tmp_60_reg_842(15) <= tmp_60_fu_638_p1(15);
    tmp_60_reg_842(16) <= tmp_60_fu_638_p1(16);
    tmp_60_reg_842(17) <= tmp_60_fu_638_p1(17);
    tmp_60_reg_842(18) <= tmp_60_fu_638_p1(18);
    tmp_60_reg_842(19) <= tmp_60_fu_638_p1(19);
    tmp_60_reg_842(20) <= tmp_60_fu_638_p1(20);
    tmp_60_reg_842(21) <= tmp_60_fu_638_p1(21);
    tmp_60_reg_842(22) <= tmp_60_fu_638_p1(22);
    tmp_60_reg_842(23) <= tmp_60_fu_638_p1(23);
    tmp_60_reg_842(24) <= tmp_60_fu_638_p1(24);
    tmp_60_reg_842(25) <= tmp_60_fu_638_p1(25);
    tmp_60_reg_842(26) <= tmp_60_fu_638_p1(26);
    tmp_60_reg_842(27) <= tmp_60_fu_638_p1(27);
    tmp_60_reg_842(28) <= tmp_60_fu_638_p1(28);
    tmp_60_reg_842(29) <= tmp_60_fu_638_p1(29);
    tmp_60_reg_842(30) <= tmp_60_fu_638_p1(30);
    tmp_60_reg_842(31) <= tmp_60_fu_638_p1(31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st60_fsm_59 = ap_CS_fsm)) then
                tmp_61_reg_862 <= tmp_61_fu_643_p1;
            end if;
        end if;
    end process;
    p_addr_reg_661(6 downto 0) <= "0000000";
    p_addr2_reg_671(6 downto 0) <= "0000000";
    tmp_44_reg_676(6 downto 0) <= "0000000";
    tmp_44_reg_676(63 downto 32) <= "00000000000000000000000000000000";
    tmp_52_reg_701(6 downto 0) <= "0000001";
    tmp_52_reg_701(63 downto 32) <= "00000000000000000000000000000000";
    p_addr3_reg_731(6 downto 0) <= "0000000";
    p_addr_cast1_reg_771(6 downto 0) <= "0000000";
    p_addr2_cast1_reg_776(6 downto 0) <= "0000000";
    p_addr3_cast1_reg_783(6 downto 0) <= "0000000";
    tmp_57_reg_802(63 downto 32) <= "00000000000000000000000000000000";
    tmp_60_reg_842(63 downto 32) <= "00000000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , exitcond_fu_291_p2 , exitcond1_fu_542_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond_fu_291_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                if ((ap_const_lv1_0 = exitcond1_fu_542_p2)) then
                    ap_NS_fsm <= ap_ST_st27_fsm_26;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st45_fsm_44;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st47_fsm_46 => 
                ap_NS_fsm <= ap_ST_st48_fsm_47;
            when ap_ST_st48_fsm_47 => 
                ap_NS_fsm <= ap_ST_st49_fsm_48;
            when ap_ST_st49_fsm_48 => 
                ap_NS_fsm <= ap_ST_st50_fsm_49;
            when ap_ST_st50_fsm_49 => 
                ap_NS_fsm <= ap_ST_st51_fsm_50;
            when ap_ST_st51_fsm_50 => 
                ap_NS_fsm <= ap_ST_st52_fsm_51;
            when ap_ST_st52_fsm_51 => 
                ap_NS_fsm <= ap_ST_st53_fsm_52;
            when ap_ST_st53_fsm_52 => 
                ap_NS_fsm <= ap_ST_st54_fsm_53;
            when ap_ST_st54_fsm_53 => 
                ap_NS_fsm <= ap_ST_st55_fsm_54;
            when ap_ST_st55_fsm_54 => 
                ap_NS_fsm <= ap_ST_st56_fsm_55;
            when ap_ST_st56_fsm_55 => 
                ap_NS_fsm <= ap_ST_st57_fsm_56;
            when ap_ST_st57_fsm_56 => 
                ap_NS_fsm <= ap_ST_st58_fsm_57;
            when ap_ST_st58_fsm_57 => 
                ap_NS_fsm <= ap_ST_st59_fsm_58;
            when ap_ST_st59_fsm_58 => 
                ap_NS_fsm <= ap_ST_st60_fsm_59;
            when ap_ST_st60_fsm_59 => 
                ap_NS_fsm <= ap_ST_st61_fsm_60;
            when ap_ST_st61_fsm_60 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_CS_fsm, exitcond_fu_291_p2)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm)) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((exitcond_fu_291_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond_fu_291_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((exitcond_fu_291_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_542_p2 <= "1" when (indvar_reg_193 = ap_const_lv11_77E) else "0";
    exitcond_fu_291_p2 <= "1" when (indvar1_reg_182 = ap_const_lv11_437) else "0";
    grp_fu_206_ce <= ap_const_logic_1;

    -- grp_fu_206_p0 assign process. --
    grp_fu_206_p0_assign_proc : process(ap_CS_fsm, reg_254, reg_265, reg_271, tmp_19_reg_766)
    begin
        if ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then 
            grp_fu_206_p0 <= tmp_19_reg_766;
        elsif (((ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st43_fsm_42 = ap_CS_fsm) or (ap_ST_st52_fsm_51 = ap_CS_fsm))) then 
            grp_fu_206_p0 <= reg_271;
        elsif (((ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st47_fsm_46 = ap_CS_fsm))) then 
            grp_fu_206_p0 <= reg_265;
        elsif (((ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm))) then 
            grp_fu_206_p0 <= reg_254;
        else 
            grp_fu_206_p0 <= tmp_19_reg_766;
        end if; 
    end process;


    -- grp_fu_206_p1 assign process. --
    grp_fu_206_p1_assign_proc : process(ap_CS_fsm, reg_254, reg_260, reg_265, tmp_18_reg_761)
    begin
        if ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then 
            grp_fu_206_p1 <= reg_265;
        elsif (((ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st43_fsm_42 = ap_CS_fsm) or (ap_ST_st52_fsm_51 = ap_CS_fsm))) then 
            grp_fu_206_p1 <= reg_254;
        elsif ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then 
            grp_fu_206_p1 <= tmp_18_reg_761;
        elsif (((ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st47_fsm_46 = ap_CS_fsm))) then 
            grp_fu_206_p1 <= reg_260;
        else 
            grp_fu_206_p1 <= tmp_18_reg_761;
        end if; 
    end process;

    grp_fu_210_ce <= ap_const_logic_1;

    -- grp_fu_210_p0 assign process. --
    grp_fu_210_p0_assign_proc : process(ap_CS_fsm, tmp_q0, reg_239, reg_249, reg_271)
    begin
        if ((ap_ST_st48_fsm_47 = ap_CS_fsm)) then 
            grp_fu_210_p0 <= reg_271;
        elsif ((ap_ST_st43_fsm_42 = ap_CS_fsm)) then 
            grp_fu_210_p0 <= tmp_q0;
        elsif (((ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm))) then 
            grp_fu_210_p0 <= reg_249;
        elsif (((ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm))) then 
            grp_fu_210_p0 <= reg_239;
        else 
            grp_fu_210_p0 <= reg_271;
        end if; 
    end process;

    grp_fu_210_p1 <= ap_const_lv32_3E7C8F32;
    grp_fu_215_ce <= ap_const_logic_1;

    -- grp_fu_215_p0 assign process. --
    grp_fu_215_p0_assign_proc : process(ap_CS_fsm, tmp_q1, reg_244, tmp_17_reg_751)
    begin
        if ((ap_ST_st43_fsm_42 = ap_CS_fsm)) then 
            grp_fu_215_p0 <= tmp_q1;
        elsif ((ap_ST_st11_fsm_10 = ap_CS_fsm)) then 
            grp_fu_215_p0 <= tmp_17_reg_751;
        elsif (((ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm))) then 
            grp_fu_215_p0 <= reg_244;
        else 
            grp_fu_215_p0 <= tmp_17_reg_751;
        end if; 
    end process;

    grp_fu_215_p1 <= ap_const_lv32_3F1B5159;
    grp_fu_222_ce <= ap_const_logic_1;
    grp_fu_222_p0 <= reg_271;
    grp_fu_225_ce <= ap_const_logic_1;

    -- grp_fu_225_p0 assign process. --
    grp_fu_225_p0_assign_proc : process(ap_CS_fsm, tmp_2_fu_427_p1, tmp_13_fu_437_p1, tmp_s_fu_511_p1, tmp_20_fu_516_p1, tmp_24_fu_593_p1, tmp_32_fu_603_p1)
    begin
        if ((ap_ST_st33_fsm_32 = ap_CS_fsm)) then 
            grp_fu_225_p0 <= tmp_32_fu_603_p1;
        elsif ((ap_ST_st28_fsm_27 = ap_CS_fsm)) then 
            grp_fu_225_p0 <= tmp_24_fu_593_p1;
        elsif ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            grp_fu_225_p0 <= tmp_20_fu_516_p1;
        elsif ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
            grp_fu_225_p0 <= tmp_s_fu_511_p1;
        elsif ((ap_ST_st5_fsm_4 = ap_CS_fsm)) then 
            grp_fu_225_p0 <= tmp_13_fu_437_p1;
        elsif ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
            grp_fu_225_p0 <= tmp_2_fu_427_p1;
        else 
            grp_fu_225_p0 <= tmp_32_fu_603_p1;
        end if; 
    end process;

    grp_fu_228_ce <= ap_const_logic_1;

    -- grp_fu_228_p0 assign process. --
    grp_fu_228_p0_assign_proc : process(ap_CS_fsm, tmp_6_fu_432_p1, tmp_16_fu_442_p1, tmp_28_fu_598_p1)
    begin
        if ((ap_ST_st28_fsm_27 = ap_CS_fsm)) then 
            grp_fu_228_p0 <= tmp_28_fu_598_p1;
        elsif ((ap_ST_st5_fsm_4 = ap_CS_fsm)) then 
            grp_fu_228_p0 <= tmp_16_fu_442_p1;
        elsif ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
            grp_fu_228_p0 <= tmp_6_fu_432_p1;
        else 
            grp_fu_228_p0 <= tmp_28_fu_598_p1;
        end if; 
    end process;

    i_fu_285_p2 <= std_logic_vector(unsigned(indvar1_reg_182) + unsigned(ap_const_lv11_1));

    -- in_r_address0 assign process. --
    in_r_address0_assign_proc : process(ap_CS_fsm, tmp_25_fu_331_p1, tmp_49_fu_406_p1, tmp_47_fu_479_p1, tmp_56_fu_561_p1, tmp_58_fu_588_p1)
    begin
        if ((ap_ST_st27_fsm_26 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_58_fu_588_p1(21 - 1 downto 0);
        elsif ((ap_ST_st26_fsm_25 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_56_fu_561_p1(21 - 1 downto 0);
        elsif ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_47_fu_479_p1(21 - 1 downto 0);
        elsif ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_49_fu_406_p1(21 - 1 downto 0);
        elsif ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_25_fu_331_p1(21 - 1 downto 0);
        else 
            in_r_address0 <= tmp_58_fu_588_p1(21 - 1 downto 0);
        end if; 
    end process;


    -- in_r_address1 assign process. --
    in_r_address1_assign_proc : process(ap_CS_fsm, tmp_44_fu_370_p1, tmp_52_fu_422_p1, tmp_57_fu_575_p1, tmp_55_fu_506_p1)
    begin
        if ((ap_ST_st26_fsm_25 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_57_fu_575_p1(21 - 1 downto 0);
        elsif ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_55_fu_506_p1(21 - 1 downto 0);
        elsif ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_52_fu_422_p1(21 - 1 downto 0);
        elsif ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_44_fu_370_p1(21 - 1 downto 0);
        else 
            in_r_address1 <= tmp_57_fu_575_p1(21 - 1 downto 0);
        end if; 
    end process;


    -- in_r_ce0 assign process. --
    in_r_ce0_assign_proc : process(ap_CS_fsm, exitcond_fu_291_p2, exitcond1_fu_542_p2)
    begin
        if (((ap_ST_st3_fsm_2 = ap_CS_fsm) or (ap_ST_st27_fsm_26 = ap_CS_fsm) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and (exitcond_fu_291_p2 = ap_const_lv1_0)) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or ((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_542_p2)))) then 
            in_r_ce0 <= ap_const_logic_1;
        else 
            in_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- in_r_ce1 assign process. --
    in_r_ce1_assign_proc : process(ap_CS_fsm, exitcond_fu_291_p2, exitcond1_fu_542_p2)
    begin
        if (((ap_ST_st3_fsm_2 = ap_CS_fsm) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and (exitcond_fu_291_p2 = ap_const_lv1_0)) or (ap_ST_st7_fsm_6 = ap_CS_fsm) or ((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_542_p2)))) then 
            in_r_ce1 <= ap_const_logic_1;
        else 
            in_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_536_p2 <= std_logic_vector(unsigned(indvar_reg_193) + unsigned(ap_const_lv11_2));
    out_r_address0 <= tmp_60_reg_842(21 - 1 downto 0);

    -- out_r_ce0 assign process. --
    out_r_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st61_fsm_60 = ap_CS_fsm)) then 
            out_r_ce0 <= ap_const_logic_1;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_r_d0 <= tmp_61_reg_862;

    -- out_r_we0 assign process. --
    out_r_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st61_fsm_60 = ap_CS_fsm))) then 
            out_r_we0 <= ap_const_logic_1;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_addr1_fu_580_p2 <= std_logic_vector(unsigned(p_addr3_cast1_reg_783) + unsigned(tmp_25_trn5_cast_fu_548_p1));
    
    p_addr2_reg_671_temp <= signed(p_addr2_reg_671);
    p_addr2_cast1_fu_524_p1 <= std_logic_vector(resize(p_addr2_reg_671_temp,24));

    p_addr2_fu_360_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_344_p1) - unsigned(p_shl3_cast_fu_356_p1));
    
    p_addr3_reg_731_temp <= signed(p_addr3_reg_731);
    p_addr3_cast1_fu_527_p1 <= std_logic_vector(resize(p_addr3_reg_731_temp,24));

    p_addr3_fu_469_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_454_p1) - unsigned(p_shl5_cast_fu_465_p1));
    p_addr4_fu_566_p2 <= std_logic_vector(unsigned(p_addr2_cast1_reg_776) + unsigned(tmp_25_trn5_cast_fu_548_p1));
    p_addr7_fu_552_p2 <= std_logic_vector(unsigned(p_addr_cast1_reg_771) + unsigned(tmp_25_trn5_cast_fu_548_p1));
    
    p_addr_reg_661_temp <= signed(p_addr_reg_661);
    p_addr_cast1_fu_521_p1 <= std_logic_vector(resize(p_addr_reg_661_temp,24));

    p_addr_fu_321_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_305_p1) - unsigned(p_shl1_cast_fu_317_p1));
    p_shl1_cast_fu_317_p1 <= std_logic_vector(resize(unsigned(tmp_5_fu_309_p3),23));
    p_shl2_cast_fu_344_p1 <= std_logic_vector(resize(unsigned(tmp_37_fu_336_p3),23));
    p_shl3_cast_fu_356_p1 <= std_logic_vector(resize(unsigned(tmp_39_fu_348_p3),23));
    p_shl4_cast_fu_454_p1 <= std_logic_vector(resize(unsigned(tmp_45_fu_447_p3),23));
    p_shl5_cast_fu_465_p1 <= std_logic_vector(resize(unsigned(tmp_46_fu_458_p3),23));
    p_shl_cast_fu_305_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_297_p3),23));
    tmp6_fu_530_p2 <= std_logic_vector(unsigned(indvar_reg_193) + unsigned(ap_const_lv11_1));
    tmp_13_fu_437_p1 <= std_logic_vector(resize(unsigned(reg_231),64));
    tmp_16_fu_442_p1 <= std_logic_vector(resize(unsigned(reg_235),64));
    tmp_1_1_fu_279_p2 <= std_logic_vector(unsigned(indvar1_reg_182) + unsigned(ap_const_lv11_2));
    tmp_1_fu_297_p3 <= (indvar1_reg_182 & ap_const_lv11_0);
    tmp_20_fu_516_p1 <= std_logic_vector(resize(unsigned(reg_235),64));
    tmp_24_fu_593_p1 <= std_logic_vector(resize(unsigned(reg_231),64));
    
    p_addr_fu_321_p2_temp <= signed(p_addr_fu_321_p2);
    tmp_25_fu_331_p0 <= std_logic_vector(resize(p_addr_fu_321_p2_temp,32));

    tmp_25_fu_331_p1 <= std_logic_vector(resize(unsigned(tmp_25_fu_331_p0),64));
    tmp_25_trn5_cast_fu_548_p1 <= std_logic_vector(resize(unsigned(j_fu_536_p2),24));
    tmp_28_fu_598_p1 <= std_logic_vector(resize(unsigned(reg_235),64));
    tmp_2_fu_427_p1 <= std_logic_vector(resize(unsigned(reg_231),64));
    tmp_32_fu_603_p1 <= std_logic_vector(resize(unsigned(reg_231),64));
    tmp_37_fu_336_p3 <= (i_fu_285_p2 & ap_const_lv11_0);
    tmp_37_trn_cast_fu_608_p1 <= std_logic_vector(resize(unsigned(indvar_reg_193),24));
    tmp_39_fu_348_p3 <= (i_fu_285_p2 & ap_const_lv7_0);
    tmp_39_trn_cast_fu_626_p1 <= std_logic_vector(resize(unsigned(tmp6_reg_788),24));
    
    p_addr2_fu_360_p2_temp <= signed(p_addr2_fu_360_p2);
    tmp_44_fu_370_p0 <= std_logic_vector(resize(p_addr2_fu_360_p2_temp,32));

    tmp_44_fu_370_p1 <= std_logic_vector(resize(unsigned(tmp_44_fu_370_p0),64));
    tmp_45_fu_447_p3 <= (tmp_1_1_reg_647 & ap_const_lv11_0);
    tmp_46_fu_458_p3 <= (tmp_1_1_reg_647 & ap_const_lv7_0);
    
    p_addr3_fu_469_p2_temp <= signed(p_addr3_fu_469_p2);
    tmp_47_fu_479_p0 <= std_logic_vector(resize(p_addr3_fu_469_p2_temp,32));

    tmp_47_fu_479_p1 <= std_logic_vector(resize(unsigned(tmp_47_fu_479_p0),64));
    tmp_48_fu_395_p3 <= (tmp_1_2_reg_686 & ap_const_lv1_1);
    
    tmp_48_fu_395_p3_temp <= signed(tmp_48_fu_395_p3);
    tmp_49_fu_406_p0 <= std_logic_vector(resize(tmp_48_fu_395_p3_temp,32));

    tmp_49_fu_406_p1 <= std_logic_vector(resize(unsigned(tmp_49_fu_406_p0),64));
    tmp_51_fu_411_p3 <= (tmp_50_reg_691 & ap_const_lv1_1);
    
    tmp_51_fu_411_p3_temp <= signed(tmp_51_fu_411_p3);
    tmp_52_fu_422_p0 <= std_logic_vector(resize(tmp_51_fu_411_p3_temp,32));

    tmp_52_fu_422_p1 <= std_logic_vector(resize(unsigned(tmp_52_fu_422_p0),64));
    tmp_53_fu_484_p4 <= p_addr3_fu_469_p2(22 downto 1);
    tmp_54_fu_494_p3 <= (tmp_53_fu_484_p4 & ap_const_lv1_1);
    
    tmp_54_fu_494_p3_temp <= signed(tmp_54_fu_494_p3);
    tmp_55_fu_506_p0 <= std_logic_vector(resize(tmp_54_fu_494_p3_temp,32));

    tmp_55_fu_506_p1 <= std_logic_vector(resize(unsigned(tmp_55_fu_506_p0),64));
    
    p_addr7_fu_552_p2_temp <= signed(p_addr7_fu_552_p2);
    tmp_56_fu_561_p0 <= std_logic_vector(resize(p_addr7_fu_552_p2_temp,32));

    tmp_56_fu_561_p1 <= std_logic_vector(resize(unsigned(tmp_56_fu_561_p0),64));
    
    p_addr4_fu_566_p2_temp <= signed(p_addr4_fu_566_p2);
    tmp_57_fu_575_p0 <= std_logic_vector(resize(p_addr4_fu_566_p2_temp,32));

    tmp_57_fu_575_p1 <= std_logic_vector(resize(unsigned(tmp_57_fu_575_p0),64));
    
    p_addr1_reg_812_temp <= signed(p_addr1_reg_812);
    tmp_58_fu_588_p0 <= std_logic_vector(resize(p_addr1_reg_812_temp,32));

    tmp_58_fu_588_p1 <= std_logic_vector(resize(unsigned(tmp_58_fu_588_p0),64));
    
    tmp_addr3_fu_612_p2_temp <= signed(tmp_addr3_fu_612_p2);
    tmp_59_fu_621_p0 <= std_logic_vector(resize(tmp_addr3_fu_612_p2_temp,32));

    tmp_59_fu_621_p1 <= std_logic_vector(resize(unsigned(tmp_59_fu_621_p0),64));
    tmp_5_fu_309_p3 <= (indvar1_reg_182 & ap_const_lv7_0);
    
    tmp_addr4_fu_629_p2_temp <= signed(tmp_addr4_fu_629_p2);
    tmp_60_fu_638_p0 <= std_logic_vector(resize(tmp_addr4_fu_629_p2_temp,32));

    tmp_60_fu_638_p1 <= std_logic_vector(resize(unsigned(tmp_60_fu_638_p0),64));
    tmp_61_fu_643_p1 <= grp_fu_222_p1(16 - 1 downto 0);
    tmp_6_fu_432_p1 <= std_logic_vector(resize(unsigned(reg_235),64));
    tmp_addr3_fu_612_p2 <= std_logic_vector(unsigned(p_addr2_cast1_reg_776) + unsigned(tmp_37_trn_cast_fu_608_p1));
    tmp_addr4_fu_629_p2 <= std_logic_vector(unsigned(p_addr2_cast1_reg_776) + unsigned(tmp_39_trn_cast_fu_626_p1));

    -- tmp_address0 assign process. --
    tmp_address0_assign_proc : process(ap_CS_fsm, tmp_44_reg_676, tmp_52_reg_701, tmp_57_reg_802, tmp_59_fu_621_p1)
    begin
        if ((ap_ST_st48_fsm_47 = ap_CS_fsm)) then 
            tmp_address0 <= tmp_57_reg_802(21 - 1 downto 0);
        elsif ((ap_ST_st25_fsm_24 = ap_CS_fsm)) then 
            tmp_address0 <= tmp_52_reg_701(21 - 1 downto 0);
        elsif ((ap_ST_st24_fsm_23 = ap_CS_fsm)) then 
            tmp_address0 <= tmp_44_reg_676(21 - 1 downto 0);
        elsif ((ap_ST_st42_fsm_41 = ap_CS_fsm)) then 
            tmp_address0 <= tmp_59_fu_621_p1(21 - 1 downto 0);
        else 
            tmp_address0 <= tmp_57_reg_802(21 - 1 downto 0);
        end if; 
    end process;

    tmp_address1 <= tmp_60_fu_638_p1(21 - 1 downto 0);

    -- tmp_ce0 assign process. --
    tmp_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st24_fsm_23 = ap_CS_fsm) or (ap_ST_st25_fsm_24 = ap_CS_fsm) or (ap_ST_st48_fsm_47 = ap_CS_fsm))) then 
            tmp_ce0 <= ap_const_logic_1;
        else 
            tmp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- tmp_ce1 assign process. --
    tmp_ce1_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st42_fsm_41 = ap_CS_fsm)) then 
            tmp_ce1 <= ap_const_logic_1;
        else 
            tmp_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_d0 <= reg_271;
    tmp_s_fu_511_p1 <= std_logic_vector(resize(unsigned(reg_231),64));

    -- tmp_we0 assign process. --
    tmp_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st24_fsm_23 = ap_CS_fsm) or (ap_ST_st25_fsm_24 = ap_CS_fsm) or (ap_ST_st48_fsm_47 = ap_CS_fsm))) then 
            tmp_we0 <= ap_const_logic_1;
        else 
            tmp_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
