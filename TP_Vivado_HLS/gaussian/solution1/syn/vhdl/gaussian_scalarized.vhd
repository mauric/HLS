-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.2
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gaussian_scalarized is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_r_address1 : OUT STD_LOGIC_VECTOR (20 downto 0);
    in_r_ce1 : OUT STD_LOGIC;
    in_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of gaussian_scalarized is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_ST_st50_fsm_49 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_ST_st51_fsm_50 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_ST_st52_fsm_51 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_ST_st53_fsm_52 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_ST_st54_fsm_53 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_ST_st55_fsm_54 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_ST_st56_fsm_55 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_ST_st57_fsm_56 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_ST_st58_fsm_57 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_ST_st59_fsm_58 : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_ST_st60_fsm_59 : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_ST_st61_fsm_60 : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3E7C8F32 : STD_LOGIC_VECTOR (31 downto 0) := "00111110011111001000111100110010";
    constant ap_const_lv32_3F1B5159 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000110110101000101011001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_437 : STD_LOGIC_VECTOR (10 downto 0) := "10000110111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_77E : STD_LOGIC_VECTOR (10 downto 0) := "11101111110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal reg_223 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_227 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_211_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_231 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_214_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_236 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_185_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_241 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_190_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_247 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_177_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_253 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_181_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_259 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_271 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_278_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_reg_626 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_fu_284_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_632 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_addr_fu_320_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr_reg_640 : STD_LOGIC_VECTOR (22 downto 0);
    signal exitcond_fu_290_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_addr2_fu_359_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr2_reg_650 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_45_reg_660 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_48_reg_665 : STD_LOGIC_VECTOR (21 downto 0);
    signal in_load_3_reg_680 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_load_4_reg_685 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_426_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_fu_431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_addr3_fu_466_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr3_reg_710 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_s_fu_508_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_217_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_730 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_220_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_735 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_513_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_745 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_200_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_750 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr_cast1_fu_518_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr_reg_640_temp: signed (23-1 downto 0);
    signal p_addr_cast1_reg_755 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr2_cast1_fu_521_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr2_reg_650_temp: signed (23-1 downto 0);
    signal p_addr2_cast1_reg_760 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr3_cast1_fu_524_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr3_reg_710_temp: signed (23-1 downto 0);
    signal p_addr3_cast1_reg_766 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp6_fu_527_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp6_reg_771 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond1_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_addr1_fu_577_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr1_reg_789 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr9_fu_586_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr9_reg_794 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_22_fu_599_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_26_fu_604_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_58_fu_614_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_reg_819 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar1_reg_133 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_reg_144 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp0_2_reg_155 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp0_1_reg_165 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_330_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_369_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_fu_476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_fu_558_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_fu_572_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_177_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_177_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_181_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_185_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_190_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_190_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_195_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_195_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_200_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_208_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_211_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_214_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_217_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_220_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_296_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_fu_308_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl_cast_fu_304_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl1_cast_fu_316_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_23_fu_330_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr_fu_320_p2_temp: signed (23-1 downto 0);
    signal tmp_39_fu_335_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_40_fu_347_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl2_cast_fu_343_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl3_cast_fu_355_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_41_fu_369_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr2_fu_359_p2_temp: signed (23-1 downto 0);
    signal tmp_46_fu_394_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_47_fu_405_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_394_p3_temp: signed (23-1 downto 0);
    signal tmp_49_fu_410_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_50_fu_421_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_410_p3_temp: signed (23-1 downto 0);
    signal tmp_42_fu_444_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_43_fu_455_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl4_cast_fu_451_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl5_cast_fu_462_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_44_fu_476_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr3_fu_466_p2_temp: signed (23-1 downto 0);
    signal tmp_51_fu_481_p4 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_57_fu_491_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_52_fu_503_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_491_p3_temp: signed (23-1 downto 0);
    signal j_fu_533_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_trn5_cast_fu_545_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr7_fu_549_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_53_fu_558_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr7_fu_549_p2_temp: signed (24-1 downto 0);
    signal p_addr4_fu_563_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_54_fu_572_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr4_fu_563_p2_temp: signed (24-1 downto 0);
    signal tmp_40_trn_cast_fu_582_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_55_fu_594_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr1_reg_789_temp: signed (24-1 downto 0);
    signal grp_fu_208_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_621_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr9_reg_794_temp: signed (24-1 downto 0);
    signal grp_fu_177_ce : STD_LOGIC;
    signal grp_fu_181_ce : STD_LOGIC;
    signal grp_fu_185_ce : STD_LOGIC;
    signal grp_fu_190_ce : STD_LOGIC;
    signal grp_fu_195_ce : STD_LOGIC;
    signal grp_fu_200_ce : STD_LOGIC;
    signal grp_fu_208_ce : STD_LOGIC;
    signal grp_fu_211_ce : STD_LOGIC;
    signal grp_fu_214_ce : STD_LOGIC;
    signal grp_fu_217_ce : STD_LOGIC;
    signal grp_fu_220_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component gaussian_fadd_32ns_32ns_32_5_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gaussian_fmul_32ns_32ns_32_4_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gaussian_fptoui_32ns_64_4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component gaussian_sitofp_64ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    gaussian_fadd_32ns_32ns_32_5_full_dsp_U1 : component gaussian_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_177_p0,
        din1 => grp_fu_177_p1,
        ce => grp_fu_177_ce,
        dout => grp_fu_177_p2);

    gaussian_fadd_32ns_32ns_32_5_full_dsp_U2 : component gaussian_fadd_32ns_32ns_32_5_full_dsp
    generic map (
        ID => 2,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_181_p0,
        din1 => grp_fu_181_p1,
        ce => grp_fu_181_ce,
        dout => grp_fu_181_p2);

    gaussian_fmul_32ns_32ns_32_4_max_dsp_U3 : component gaussian_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 3,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_185_p0,
        din1 => grp_fu_185_p1,
        ce => grp_fu_185_ce,
        dout => grp_fu_185_p2);

    gaussian_fmul_32ns_32ns_32_4_max_dsp_U4 : component gaussian_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 4,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_190_p0,
        din1 => grp_fu_190_p1,
        ce => grp_fu_190_ce,
        dout => grp_fu_190_p2);

    gaussian_fmul_32ns_32ns_32_4_max_dsp_U5 : component gaussian_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 5,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_195_p0,
        din1 => grp_fu_195_p1,
        ce => grp_fu_195_ce,
        dout => grp_fu_195_p2);

    gaussian_fmul_32ns_32ns_32_4_max_dsp_U6 : component gaussian_fmul_32ns_32ns_32_4_max_dsp
    generic map (
        ID => 6,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_200_p0,
        din1 => grp_fu_200_p1,
        ce => grp_fu_200_ce,
        dout => grp_fu_200_p2);

    gaussian_fptoui_32ns_64_4_U7 : component gaussian_fptoui_32ns_64_4
    generic map (
        ID => 7,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_208_p0,
        ce => grp_fu_208_ce,
        dout => grp_fu_208_p1);

    gaussian_sitofp_64ns_32_6_U8 : component gaussian_sitofp_64ns_32_6
    generic map (
        ID => 8,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_211_p0,
        ce => grp_fu_211_ce,
        dout => grp_fu_211_p1);

    gaussian_sitofp_64ns_32_6_U9 : component gaussian_sitofp_64ns_32_6
    generic map (
        ID => 9,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_214_p0,
        ce => grp_fu_214_ce,
        dout => grp_fu_214_p1);

    gaussian_sitofp_64ns_32_6_U10 : component gaussian_sitofp_64ns_32_6
    generic map (
        ID => 10,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_217_p0,
        ce => grp_fu_217_ce,
        dout => grp_fu_217_p1);

    gaussian_sitofp_64ns_32_6_U11 : component gaussian_sitofp_64ns_32_6
    generic map (
        ID => 11,
        NUM_STAGE => 6,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_220_p0,
        ce => grp_fu_220_ce,
        dout => grp_fu_220_p1);




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- indvar1_reg_133 assign process. --
    indvar1_reg_133_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st26_fsm_25 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond1_fu_539_p2)))) then 
                indvar1_reg_133 <= i_reg_632;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                indvar1_reg_133 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- indvar_reg_144 assign process. --
    indvar_reg_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st25_fsm_24 = ap_CS_fsm)) then 
                indvar_reg_144 <= ap_const_lv11_0;
            elsif ((ap_ST_st61_fsm_60 = ap_CS_fsm)) then 
                indvar_reg_144 <= tmp6_reg_771;
            end if; 
        end if;
    end process;

    -- tmp0_1_reg_165 assign process. --
    tmp0_1_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st25_fsm_24 = ap_CS_fsm)) then 
                tmp0_1_reg_165 <= reg_253;
            elsif ((ap_ST_st61_fsm_60 = ap_CS_fsm)) then 
                tmp0_1_reg_165 <= tmp0_2_reg_155;
            end if; 
        end if;
    end process;

    -- tmp0_2_reg_155 assign process. --
    tmp0_2_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st25_fsm_24 = ap_CS_fsm)) then 
                tmp0_2_reg_155 <= reg_259;
            elsif ((ap_ST_st61_fsm_60 = ap_CS_fsm)) then 
                tmp0_2_reg_155 <= reg_271;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                i_reg_632 <= i_fu_284_p2;
                tmp_reg_626 <= tmp_fu_278_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then
                in_load_3_reg_680 <= in_r_q0;
                in_load_4_reg_685 <= in_r_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_539_p2))) then
                p_addr1_reg_789 <= p_addr1_fu_577_p2;
                p_addr9_reg_794 <= p_addr9_fu_586_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st25_fsm_24 = ap_CS_fsm)) then
                p_addr2_cast1_reg_760(7) <= p_addr2_cast1_fu_521_p1(7);
    p_addr2_cast1_reg_760(8) <= p_addr2_cast1_fu_521_p1(8);
    p_addr2_cast1_reg_760(9) <= p_addr2_cast1_fu_521_p1(9);
    p_addr2_cast1_reg_760(10) <= p_addr2_cast1_fu_521_p1(10);
    p_addr2_cast1_reg_760(11) <= p_addr2_cast1_fu_521_p1(11);
    p_addr2_cast1_reg_760(12) <= p_addr2_cast1_fu_521_p1(12);
    p_addr2_cast1_reg_760(13) <= p_addr2_cast1_fu_521_p1(13);
    p_addr2_cast1_reg_760(14) <= p_addr2_cast1_fu_521_p1(14);
    p_addr2_cast1_reg_760(15) <= p_addr2_cast1_fu_521_p1(15);
    p_addr2_cast1_reg_760(16) <= p_addr2_cast1_fu_521_p1(16);
    p_addr2_cast1_reg_760(17) <= p_addr2_cast1_fu_521_p1(17);
    p_addr2_cast1_reg_760(18) <= p_addr2_cast1_fu_521_p1(18);
    p_addr2_cast1_reg_760(19) <= p_addr2_cast1_fu_521_p1(19);
    p_addr2_cast1_reg_760(20) <= p_addr2_cast1_fu_521_p1(20);
    p_addr2_cast1_reg_760(21) <= p_addr2_cast1_fu_521_p1(21);
    p_addr2_cast1_reg_760(22) <= p_addr2_cast1_fu_521_p1(22);
    p_addr2_cast1_reg_760(23) <= p_addr2_cast1_fu_521_p1(23);
                p_addr3_cast1_reg_766(7) <= p_addr3_cast1_fu_524_p1(7);
    p_addr3_cast1_reg_766(8) <= p_addr3_cast1_fu_524_p1(8);
    p_addr3_cast1_reg_766(9) <= p_addr3_cast1_fu_524_p1(9);
    p_addr3_cast1_reg_766(10) <= p_addr3_cast1_fu_524_p1(10);
    p_addr3_cast1_reg_766(11) <= p_addr3_cast1_fu_524_p1(11);
    p_addr3_cast1_reg_766(12) <= p_addr3_cast1_fu_524_p1(12);
    p_addr3_cast1_reg_766(13) <= p_addr3_cast1_fu_524_p1(13);
    p_addr3_cast1_reg_766(14) <= p_addr3_cast1_fu_524_p1(14);
    p_addr3_cast1_reg_766(15) <= p_addr3_cast1_fu_524_p1(15);
    p_addr3_cast1_reg_766(16) <= p_addr3_cast1_fu_524_p1(16);
    p_addr3_cast1_reg_766(17) <= p_addr3_cast1_fu_524_p1(17);
    p_addr3_cast1_reg_766(18) <= p_addr3_cast1_fu_524_p1(18);
    p_addr3_cast1_reg_766(19) <= p_addr3_cast1_fu_524_p1(19);
    p_addr3_cast1_reg_766(20) <= p_addr3_cast1_fu_524_p1(20);
    p_addr3_cast1_reg_766(21) <= p_addr3_cast1_fu_524_p1(21);
    p_addr3_cast1_reg_766(22) <= p_addr3_cast1_fu_524_p1(22);
    p_addr3_cast1_reg_766(23) <= p_addr3_cast1_fu_524_p1(23);
                p_addr_cast1_reg_755(7) <= p_addr_cast1_fu_518_p1(7);
    p_addr_cast1_reg_755(8) <= p_addr_cast1_fu_518_p1(8);
    p_addr_cast1_reg_755(9) <= p_addr_cast1_fu_518_p1(9);
    p_addr_cast1_reg_755(10) <= p_addr_cast1_fu_518_p1(10);
    p_addr_cast1_reg_755(11) <= p_addr_cast1_fu_518_p1(11);
    p_addr_cast1_reg_755(12) <= p_addr_cast1_fu_518_p1(12);
    p_addr_cast1_reg_755(13) <= p_addr_cast1_fu_518_p1(13);
    p_addr_cast1_reg_755(14) <= p_addr_cast1_fu_518_p1(14);
    p_addr_cast1_reg_755(15) <= p_addr_cast1_fu_518_p1(15);
    p_addr_cast1_reg_755(16) <= p_addr_cast1_fu_518_p1(16);
    p_addr_cast1_reg_755(17) <= p_addr_cast1_fu_518_p1(17);
    p_addr_cast1_reg_755(18) <= p_addr_cast1_fu_518_p1(18);
    p_addr_cast1_reg_755(19) <= p_addr_cast1_fu_518_p1(19);
    p_addr_cast1_reg_755(20) <= p_addr_cast1_fu_518_p1(20);
    p_addr_cast1_reg_755(21) <= p_addr_cast1_fu_518_p1(21);
    p_addr_cast1_reg_755(22) <= p_addr_cast1_fu_518_p1(22);
    p_addr_cast1_reg_755(23) <= p_addr_cast1_fu_518_p1(23);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (exitcond_fu_290_p2 = ap_const_lv1_0))) then
                p_addr2_reg_650(7) <= p_addr2_fu_359_p2(7);
    p_addr2_reg_650(8) <= p_addr2_fu_359_p2(8);
    p_addr2_reg_650(9) <= p_addr2_fu_359_p2(9);
    p_addr2_reg_650(10) <= p_addr2_fu_359_p2(10);
    p_addr2_reg_650(11) <= p_addr2_fu_359_p2(11);
    p_addr2_reg_650(12) <= p_addr2_fu_359_p2(12);
    p_addr2_reg_650(13) <= p_addr2_fu_359_p2(13);
    p_addr2_reg_650(14) <= p_addr2_fu_359_p2(14);
    p_addr2_reg_650(15) <= p_addr2_fu_359_p2(15);
    p_addr2_reg_650(16) <= p_addr2_fu_359_p2(16);
    p_addr2_reg_650(17) <= p_addr2_fu_359_p2(17);
    p_addr2_reg_650(18) <= p_addr2_fu_359_p2(18);
    p_addr2_reg_650(19) <= p_addr2_fu_359_p2(19);
    p_addr2_reg_650(20) <= p_addr2_fu_359_p2(20);
    p_addr2_reg_650(21) <= p_addr2_fu_359_p2(21);
    p_addr2_reg_650(22) <= p_addr2_fu_359_p2(22);
                p_addr_reg_640(7) <= p_addr_fu_320_p2(7);
    p_addr_reg_640(8) <= p_addr_fu_320_p2(8);
    p_addr_reg_640(9) <= p_addr_fu_320_p2(9);
    p_addr_reg_640(10) <= p_addr_fu_320_p2(10);
    p_addr_reg_640(11) <= p_addr_fu_320_p2(11);
    p_addr_reg_640(12) <= p_addr_fu_320_p2(12);
    p_addr_reg_640(13) <= p_addr_fu_320_p2(13);
    p_addr_reg_640(14) <= p_addr_fu_320_p2(14);
    p_addr_reg_640(15) <= p_addr_fu_320_p2(15);
    p_addr_reg_640(16) <= p_addr_fu_320_p2(16);
    p_addr_reg_640(17) <= p_addr_fu_320_p2(17);
    p_addr_reg_640(18) <= p_addr_fu_320_p2(18);
    p_addr_reg_640(19) <= p_addr_fu_320_p2(19);
    p_addr_reg_640(20) <= p_addr_fu_320_p2(20);
    p_addr_reg_640(21) <= p_addr_fu_320_p2(21);
    p_addr_reg_640(22) <= p_addr_fu_320_p2(22);
                tmp_45_reg_660 <= p_addr_fu_320_p2(22 downto 1);
                tmp_48_reg_665 <= p_addr2_fu_359_p2(22 downto 1);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then
                p_addr3_reg_710(7) <= p_addr3_fu_466_p2(7);
    p_addr3_reg_710(8) <= p_addr3_fu_466_p2(8);
    p_addr3_reg_710(9) <= p_addr3_fu_466_p2(9);
    p_addr3_reg_710(10) <= p_addr3_fu_466_p2(10);
    p_addr3_reg_710(11) <= p_addr3_fu_466_p2(11);
    p_addr3_reg_710(12) <= p_addr3_fu_466_p2(12);
    p_addr3_reg_710(13) <= p_addr3_fu_466_p2(13);
    p_addr3_reg_710(14) <= p_addr3_fu_466_p2(14);
    p_addr3_reg_710(15) <= p_addr3_fu_466_p2(15);
    p_addr3_reg_710(16) <= p_addr3_fu_466_p2(16);
    p_addr3_reg_710(17) <= p_addr3_fu_466_p2(17);
    p_addr3_reg_710(18) <= p_addr3_fu_466_p2(18);
    p_addr3_reg_710(19) <= p_addr3_fu_466_p2(19);
    p_addr3_reg_710(20) <= p_addr3_fu_466_p2(20);
    p_addr3_reg_710(21) <= p_addr3_fu_466_p2(21);
    p_addr3_reg_710(22) <= p_addr3_fu_466_p2(22);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st27_fsm_26 = ap_CS_fsm) or (ap_ST_st28_fsm_27 = ap_CS_fsm))) then
                reg_223 <= in_r_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) or (ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st27_fsm_26 = ap_CS_fsm))) then
                reg_227 <= in_r_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm))) then
                reg_231 <= grp_fu_211_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm))) then
                reg_236 <= grp_fu_214_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st29_fsm_28 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st51_fsm_50 = ap_CS_fsm))) then
                reg_241 <= grp_fu_185_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st29_fsm_28 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm))) then
                reg_247 <= grp_fu_190_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st24_fsm_23 = ap_CS_fsm))) then
                reg_253 <= grp_fu_177_p2;
                reg_259 <= grp_fu_181_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st56_fsm_55 = ap_CS_fsm))) then
                reg_265 <= grp_fu_177_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st47_fsm_46 = ap_CS_fsm))) then
                reg_271 <= grp_fu_177_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st26_fsm_25 = ap_CS_fsm)) then
                tmp6_reg_771 <= tmp6_fu_527_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then
                tmp_13_reg_730 <= grp_fu_217_p1;
                tmp_16_reg_735 <= grp_fu_220_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then
                tmp_14_reg_745 <= grp_fu_195_p2;
                tmp_17_reg_750 <= grp_fu_200_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st60_fsm_59 = ap_CS_fsm)) then
                tmp_58_reg_819 <= tmp_58_fu_614_p1;
            end if;
        end if;
    end process;
    p_addr_reg_640(6 downto 0) <= "0000000";
    p_addr2_reg_650(6 downto 0) <= "0000000";
    p_addr3_reg_710(6 downto 0) <= "0000000";
    p_addr_cast1_reg_755(6 downto 0) <= "0000000";
    p_addr2_cast1_reg_760(6 downto 0) <= "0000000";
    p_addr3_cast1_reg_766(6 downto 0) <= "0000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , exitcond_fu_290_p2 , exitcond1_fu_539_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond_fu_290_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                if ((ap_const_lv1_0 = exitcond1_fu_539_p2)) then
                    ap_NS_fsm <= ap_ST_st27_fsm_26;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st45_fsm_44;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st47_fsm_46 => 
                ap_NS_fsm <= ap_ST_st48_fsm_47;
            when ap_ST_st48_fsm_47 => 
                ap_NS_fsm <= ap_ST_st49_fsm_48;
            when ap_ST_st49_fsm_48 => 
                ap_NS_fsm <= ap_ST_st50_fsm_49;
            when ap_ST_st50_fsm_49 => 
                ap_NS_fsm <= ap_ST_st51_fsm_50;
            when ap_ST_st51_fsm_50 => 
                ap_NS_fsm <= ap_ST_st52_fsm_51;
            when ap_ST_st52_fsm_51 => 
                ap_NS_fsm <= ap_ST_st53_fsm_52;
            when ap_ST_st53_fsm_52 => 
                ap_NS_fsm <= ap_ST_st54_fsm_53;
            when ap_ST_st54_fsm_53 => 
                ap_NS_fsm <= ap_ST_st55_fsm_54;
            when ap_ST_st55_fsm_54 => 
                ap_NS_fsm <= ap_ST_st56_fsm_55;
            when ap_ST_st56_fsm_55 => 
                ap_NS_fsm <= ap_ST_st57_fsm_56;
            when ap_ST_st57_fsm_56 => 
                ap_NS_fsm <= ap_ST_st58_fsm_57;
            when ap_ST_st58_fsm_57 => 
                ap_NS_fsm <= ap_ST_st59_fsm_58;
            when ap_ST_st59_fsm_58 => 
                ap_NS_fsm <= ap_ST_st60_fsm_59;
            when ap_ST_st60_fsm_59 => 
                ap_NS_fsm <= ap_ST_st61_fsm_60;
            when ap_ST_st61_fsm_60 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_CS_fsm, exitcond_fu_290_p2)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm)) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((exitcond_fu_290_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond_fu_290_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((exitcond_fu_290_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_539_p2 <= "1" when (indvar_reg_144 = ap_const_lv11_77E) else "0";
    exitcond_fu_290_p2 <= "1" when (indvar1_reg_133 = ap_const_lv11_437) else "0";
    grp_fu_177_ce <= ap_const_logic_1;

    -- grp_fu_177_p0 assign process. --
    grp_fu_177_p0_assign_proc : process(ap_CS_fsm, reg_241, reg_253, reg_265, reg_271)
    begin
        if ((ap_ST_st52_fsm_51 = ap_CS_fsm)) then 
            grp_fu_177_p0 <= reg_265;
        elsif ((ap_ST_st43_fsm_42 = ap_CS_fsm)) then 
            grp_fu_177_p0 <= reg_271;
        elsif ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then 
            grp_fu_177_p0 <= reg_253;
        elsif (((ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st30_fsm_29 = ap_CS_fsm))) then 
            grp_fu_177_p0 <= reg_241;
        else 
            grp_fu_177_p0 <= reg_271;
        end if; 
    end process;


    -- grp_fu_177_p1 assign process. --
    grp_fu_177_p1_assign_proc : process(ap_CS_fsm, reg_241, reg_247)
    begin
        if (((ap_ST_st20_fsm_19 = ap_CS_fsm) or (ap_ST_st43_fsm_42 = ap_CS_fsm) or (ap_ST_st52_fsm_51 = ap_CS_fsm))) then 
            grp_fu_177_p1 <= reg_241;
        elsif (((ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st30_fsm_29 = ap_CS_fsm))) then 
            grp_fu_177_p1 <= reg_247;
        else 
            grp_fu_177_p1 <= reg_247;
        end if; 
    end process;

    grp_fu_181_ce <= ap_const_logic_1;

    -- grp_fu_181_p0 assign process. --
    grp_fu_181_p0_assign_proc : process(ap_CS_fsm, reg_259, tmp_14_reg_745)
    begin
        if ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then 
            grp_fu_181_p0 <= reg_259;
        elsif ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then 
            grp_fu_181_p0 <= tmp_14_reg_745;
        else 
            grp_fu_181_p0 <= tmp_14_reg_745;
        end if; 
    end process;


    -- grp_fu_181_p1 assign process. --
    grp_fu_181_p1_assign_proc : process(ap_CS_fsm, reg_247, tmp_17_reg_750)
    begin
        if ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then 
            grp_fu_181_p1 <= reg_247;
        elsif ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then 
            grp_fu_181_p1 <= tmp_17_reg_750;
        else 
            grp_fu_181_p1 <= tmp_17_reg_750;
        end if; 
    end process;


    -- grp_fu_185_ce assign process. --
    grp_fu_185_ce_assign_proc : process(ap_CS_fsm, exitcond1_fu_539_p2)
    begin
        if (((ap_ST_st27_fsm_26 = ap_CS_fsm) or (ap_ST_st28_fsm_27 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st29_fsm_28 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st51_fsm_50 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or ((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_539_p2)) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st48_fsm_47 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm) or (ap_ST_st40_fsm_39 = ap_CS_fsm) or (ap_ST_st41_fsm_40 = ap_CS_fsm) or (ap_ST_st49_fsm_48 = ap_CS_fsm) or (ap_ST_st50_fsm_49 = ap_CS_fsm))) then 
            grp_fu_185_ce <= ap_const_logic_1;
        else 
            grp_fu_185_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_185_p0 assign process. --
    grp_fu_185_p0_assign_proc : process(ap_CS_fsm, reg_231, reg_271, exitcond1_fu_539_p2, tmp0_1_reg_165)
    begin
        if ((ap_ST_st48_fsm_47 = ap_CS_fsm)) then 
            grp_fu_185_p0 <= reg_271;
        elsif (((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_539_p2))) then 
            grp_fu_185_p0 <= tmp0_1_reg_165;
        elsif (((ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm))) then 
            grp_fu_185_p0 <= reg_231;
        else 
            grp_fu_185_p0 <= tmp0_1_reg_165;
        end if; 
    end process;

    grp_fu_185_p1 <= ap_const_lv32_3E7C8F32;

    -- grp_fu_190_ce assign process. --
    grp_fu_190_ce_assign_proc : process(ap_CS_fsm, exitcond1_fu_539_p2)
    begin
        if (((ap_ST_st27_fsm_26 = ap_CS_fsm) or (ap_ST_st28_fsm_27 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st19_fsm_18 = ap_CS_fsm) or (ap_ST_st29_fsm_28 = ap_CS_fsm) or (ap_ST_st37_fsm_36 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or ((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_539_p2)) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st12_fsm_11 = ap_CS_fsm) or (ap_ST_st13_fsm_12 = ap_CS_fsm) or (ap_ST_st17_fsm_16 = ap_CS_fsm) or (ap_ST_st18_fsm_17 = ap_CS_fsm) or (ap_ST_st35_fsm_34 = ap_CS_fsm) or (ap_ST_st36_fsm_35 = ap_CS_fsm))) then 
            grp_fu_190_ce <= ap_const_logic_1;
        else 
            grp_fu_190_ce <= ap_const_logic_0;
        end if; 
    end process;


    -- grp_fu_190_p0 assign process. --
    grp_fu_190_p0_assign_proc : process(ap_CS_fsm, reg_236, exitcond1_fu_539_p2, tmp0_2_reg_155)
    begin
        if (((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_539_p2))) then 
            grp_fu_190_p0 <= tmp0_2_reg_155;
        elsif (((ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or (ap_ST_st16_fsm_15 = ap_CS_fsm))) then 
            grp_fu_190_p0 <= reg_236;
        else 
            grp_fu_190_p0 <= tmp0_2_reg_155;
        end if; 
    end process;


    -- grp_fu_190_p1 assign process. --
    grp_fu_190_p1_assign_proc : process(ap_CS_fsm, exitcond1_fu_539_p2)
    begin
        if ((ap_ST_st16_fsm_15 = ap_CS_fsm)) then 
            grp_fu_190_p1 <= ap_const_lv32_3E7C8F32;
        elsif (((ap_ST_st34_fsm_33 = ap_CS_fsm) or ((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_539_p2)) or (ap_ST_st11_fsm_10 = ap_CS_fsm))) then 
            grp_fu_190_p1 <= ap_const_lv32_3F1B5159;
        else 
            grp_fu_190_p1 <= ap_const_lv32_3F1B5159;
        end if; 
    end process;

    grp_fu_195_ce <= ap_const_logic_1;
    grp_fu_195_p0 <= tmp_13_reg_730;
    grp_fu_195_p1 <= ap_const_lv32_3E7C8F32;
    grp_fu_200_ce <= ap_const_logic_1;
    grp_fu_200_p0 <= tmp_16_reg_735;
    grp_fu_200_p1 <= ap_const_lv32_3F1B5159;
    grp_fu_208_ce <= ap_const_logic_1;
    grp_fu_208_p0 <= reg_265;
    grp_fu_211_ce <= ap_const_logic_1;

    -- grp_fu_211_p0 assign process. --
    grp_fu_211_p0_assign_proc : process(ap_CS_fsm, tmp_2_fu_426_p1, tmp_s_fu_508_p1, tmp_22_fu_599_p1, tmp_30_fu_609_p1)
    begin
        if ((ap_ST_st33_fsm_32 = ap_CS_fsm)) then 
            grp_fu_211_p0 <= tmp_30_fu_609_p1;
        elsif ((ap_ST_st28_fsm_27 = ap_CS_fsm)) then 
            grp_fu_211_p0 <= tmp_22_fu_599_p1;
        elsif ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            grp_fu_211_p0 <= tmp_s_fu_508_p1;
        elsif ((ap_ST_st5_fsm_4 = ap_CS_fsm)) then 
            grp_fu_211_p0 <= tmp_2_fu_426_p1;
        else 
            grp_fu_211_p0 <= tmp_30_fu_609_p1;
        end if; 
    end process;

    grp_fu_214_ce <= ap_const_logic_1;

    -- grp_fu_214_p0 assign process. --
    grp_fu_214_p0_assign_proc : process(ap_CS_fsm, tmp_6_fu_431_p1, tmp_19_fu_513_p1, tmp_26_fu_604_p1)
    begin
        if ((ap_ST_st28_fsm_27 = ap_CS_fsm)) then 
            grp_fu_214_p0 <= tmp_26_fu_604_p1;
        elsif ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            grp_fu_214_p0 <= tmp_19_fu_513_p1;
        elsif ((ap_ST_st5_fsm_4 = ap_CS_fsm)) then 
            grp_fu_214_p0 <= tmp_6_fu_431_p1;
        else 
            grp_fu_214_p0 <= tmp_26_fu_604_p1;
        end if; 
    end process;

    grp_fu_217_ce <= ap_const_logic_1;
    grp_fu_217_p0 <= std_logic_vector(resize(unsigned(in_load_3_reg_680),64));
    grp_fu_220_ce <= ap_const_logic_1;
    grp_fu_220_p0 <= std_logic_vector(resize(unsigned(in_load_4_reg_685),64));
    i_fu_284_p2 <= std_logic_vector(unsigned(indvar1_reg_133) + unsigned(ap_const_lv11_1));

    -- in_r_address0 assign process. --
    in_r_address0_assign_proc : process(ap_CS_fsm, tmp_23_fu_330_p1, tmp_47_fu_405_p1, tmp_44_fu_476_p1, tmp_53_fu_558_p1, tmp_55_fu_594_p1)
    begin
        if ((ap_ST_st27_fsm_26 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_55_fu_594_p1(21 - 1 downto 0);
        elsif ((ap_ST_st26_fsm_25 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_53_fu_558_p1(21 - 1 downto 0);
        elsif ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_44_fu_476_p1(21 - 1 downto 0);
        elsif ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_47_fu_405_p1(21 - 1 downto 0);
        elsif ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_23_fu_330_p1(21 - 1 downto 0);
        else 
            in_r_address0 <= tmp_55_fu_594_p1(21 - 1 downto 0);
        end if; 
    end process;


    -- in_r_address1 assign process. --
    in_r_address1_assign_proc : process(ap_CS_fsm, tmp_41_fu_369_p1, tmp_50_fu_421_p1, tmp_52_fu_503_p1, tmp_54_fu_572_p1)
    begin
        if ((ap_ST_st26_fsm_25 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_54_fu_572_p1(21 - 1 downto 0);
        elsif ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_52_fu_503_p1(21 - 1 downto 0);
        elsif ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_50_fu_421_p1(21 - 1 downto 0);
        elsif ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_41_fu_369_p1(21 - 1 downto 0);
        else 
            in_r_address1 <= tmp_54_fu_572_p1(21 - 1 downto 0);
        end if; 
    end process;


    -- in_r_ce0 assign process. --
    in_r_ce0_assign_proc : process(ap_CS_fsm, exitcond_fu_290_p2, exitcond1_fu_539_p2)
    begin
        if (((ap_ST_st3_fsm_2 = ap_CS_fsm) or (ap_ST_st27_fsm_26 = ap_CS_fsm) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and (exitcond_fu_290_p2 = ap_const_lv1_0)) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or ((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_539_p2)))) then 
            in_r_ce0 <= ap_const_logic_1;
        else 
            in_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- in_r_ce1 assign process. --
    in_r_ce1_assign_proc : process(ap_CS_fsm, exitcond_fu_290_p2, exitcond1_fu_539_p2)
    begin
        if (((ap_ST_st3_fsm_2 = ap_CS_fsm) or ((ap_ST_st2_fsm_1 = ap_CS_fsm) and (exitcond_fu_290_p2 = ap_const_lv1_0)) or (ap_ST_st8_fsm_7 = ap_CS_fsm) or ((ap_ST_st26_fsm_25 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond1_fu_539_p2)))) then 
            in_r_ce1 <= ap_const_logic_1;
        else 
            in_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_533_p2 <= std_logic_vector(unsigned(indvar_reg_144) + unsigned(ap_const_lv11_2));
    out_r_address0 <= tmp_56_fu_621_p1(21 - 1 downto 0);

    -- out_r_ce0 assign process. --
    out_r_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st61_fsm_60 = ap_CS_fsm)) then 
            out_r_ce0 <= ap_const_logic_1;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_r_d0 <= tmp_58_reg_819;

    -- out_r_we0 assign process. --
    out_r_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st61_fsm_60 = ap_CS_fsm))) then 
            out_r_we0 <= ap_const_logic_1;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_addr1_fu_577_p2 <= std_logic_vector(unsigned(p_addr3_cast1_reg_766) + unsigned(tmp_23_trn5_cast_fu_545_p1));
    
    p_addr2_reg_650_temp <= signed(p_addr2_reg_650);
    p_addr2_cast1_fu_521_p1 <= std_logic_vector(resize(p_addr2_reg_650_temp,24));

    p_addr2_fu_359_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_343_p1) - unsigned(p_shl3_cast_fu_355_p1));
    
    p_addr3_reg_710_temp <= signed(p_addr3_reg_710);
    p_addr3_cast1_fu_524_p1 <= std_logic_vector(resize(p_addr3_reg_710_temp,24));

    p_addr3_fu_466_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_451_p1) - unsigned(p_shl5_cast_fu_462_p1));
    p_addr4_fu_563_p2 <= std_logic_vector(unsigned(p_addr2_cast1_reg_760) + unsigned(tmp_23_trn5_cast_fu_545_p1));
    p_addr7_fu_549_p2 <= std_logic_vector(unsigned(p_addr_cast1_reg_755) + unsigned(tmp_23_trn5_cast_fu_545_p1));
    p_addr9_fu_586_p2 <= std_logic_vector(unsigned(p_addr2_cast1_reg_760) + unsigned(tmp_40_trn_cast_fu_582_p1));
    
    p_addr_reg_640_temp <= signed(p_addr_reg_640);
    p_addr_cast1_fu_518_p1 <= std_logic_vector(resize(p_addr_reg_640_temp,24));

    p_addr_fu_320_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_304_p1) - unsigned(p_shl1_cast_fu_316_p1));
    p_shl1_cast_fu_316_p1 <= std_logic_vector(resize(unsigned(tmp_5_fu_308_p3),23));
    p_shl2_cast_fu_343_p1 <= std_logic_vector(resize(unsigned(tmp_39_fu_335_p3),23));
    p_shl3_cast_fu_355_p1 <= std_logic_vector(resize(unsigned(tmp_40_fu_347_p3),23));
    p_shl4_cast_fu_451_p1 <= std_logic_vector(resize(unsigned(tmp_42_fu_444_p3),23));
    p_shl5_cast_fu_462_p1 <= std_logic_vector(resize(unsigned(tmp_43_fu_455_p3),23));
    p_shl_cast_fu_304_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_296_p3),23));
    tmp6_fu_527_p2 <= std_logic_vector(unsigned(indvar_reg_144) + unsigned(ap_const_lv11_1));
    tmp_19_fu_513_p1 <= std_logic_vector(resize(unsigned(reg_227),64));
    tmp_1_fu_296_p3 <= (indvar1_reg_133 & ap_const_lv11_0);
    tmp_22_fu_599_p1 <= std_logic_vector(resize(unsigned(reg_223),64));
    
    p_addr_fu_320_p2_temp <= signed(p_addr_fu_320_p2);
    tmp_23_fu_330_p0 <= std_logic_vector(resize(p_addr_fu_320_p2_temp,32));

    tmp_23_fu_330_p1 <= std_logic_vector(resize(unsigned(tmp_23_fu_330_p0),64));
    tmp_23_trn5_cast_fu_545_p1 <= std_logic_vector(resize(unsigned(j_fu_533_p2),24));
    tmp_26_fu_604_p1 <= std_logic_vector(resize(unsigned(reg_227),64));
    tmp_2_fu_426_p1 <= std_logic_vector(resize(unsigned(reg_223),64));
    tmp_30_fu_609_p1 <= std_logic_vector(resize(unsigned(reg_223),64));
    tmp_39_fu_335_p3 <= (i_fu_284_p2 & ap_const_lv11_0);
    tmp_40_fu_347_p3 <= (i_fu_284_p2 & ap_const_lv7_0);
    tmp_40_trn_cast_fu_582_p1 <= std_logic_vector(resize(unsigned(tmp6_fu_527_p2),24));
    
    p_addr2_fu_359_p2_temp <= signed(p_addr2_fu_359_p2);
    tmp_41_fu_369_p0 <= std_logic_vector(resize(p_addr2_fu_359_p2_temp,32));

    tmp_41_fu_369_p1 <= std_logic_vector(resize(unsigned(tmp_41_fu_369_p0),64));
    tmp_42_fu_444_p3 <= (tmp_reg_626 & ap_const_lv11_0);
    tmp_43_fu_455_p3 <= (tmp_reg_626 & ap_const_lv7_0);
    
    p_addr3_fu_466_p2_temp <= signed(p_addr3_fu_466_p2);
    tmp_44_fu_476_p0 <= std_logic_vector(resize(p_addr3_fu_466_p2_temp,32));

    tmp_44_fu_476_p1 <= std_logic_vector(resize(unsigned(tmp_44_fu_476_p0),64));
    tmp_46_fu_394_p3 <= (tmp_45_reg_660 & ap_const_lv1_1);
    
    tmp_46_fu_394_p3_temp <= signed(tmp_46_fu_394_p3);
    tmp_47_fu_405_p0 <= std_logic_vector(resize(tmp_46_fu_394_p3_temp,32));

    tmp_47_fu_405_p1 <= std_logic_vector(resize(unsigned(tmp_47_fu_405_p0),64));
    tmp_49_fu_410_p3 <= (tmp_48_reg_665 & ap_const_lv1_1);
    
    tmp_49_fu_410_p3_temp <= signed(tmp_49_fu_410_p3);
    tmp_50_fu_421_p0 <= std_logic_vector(resize(tmp_49_fu_410_p3_temp,32));

    tmp_50_fu_421_p1 <= std_logic_vector(resize(unsigned(tmp_50_fu_421_p0),64));
    tmp_51_fu_481_p4 <= p_addr3_fu_466_p2(22 downto 1);
    
    tmp_57_fu_491_p3_temp <= signed(tmp_57_fu_491_p3);
    tmp_52_fu_503_p0 <= std_logic_vector(resize(tmp_57_fu_491_p3_temp,32));

    tmp_52_fu_503_p1 <= std_logic_vector(resize(unsigned(tmp_52_fu_503_p0),64));
    
    p_addr7_fu_549_p2_temp <= signed(p_addr7_fu_549_p2);
    tmp_53_fu_558_p0 <= std_logic_vector(resize(p_addr7_fu_549_p2_temp,32));

    tmp_53_fu_558_p1 <= std_logic_vector(resize(unsigned(tmp_53_fu_558_p0),64));
    
    p_addr4_fu_563_p2_temp <= signed(p_addr4_fu_563_p2);
    tmp_54_fu_572_p0 <= std_logic_vector(resize(p_addr4_fu_563_p2_temp,32));

    tmp_54_fu_572_p1 <= std_logic_vector(resize(unsigned(tmp_54_fu_572_p0),64));
    
    p_addr1_reg_789_temp <= signed(p_addr1_reg_789);
    tmp_55_fu_594_p0 <= std_logic_vector(resize(p_addr1_reg_789_temp,32));

    tmp_55_fu_594_p1 <= std_logic_vector(resize(unsigned(tmp_55_fu_594_p0),64));
    
    p_addr9_reg_794_temp <= signed(p_addr9_reg_794);
    tmp_56_fu_621_p0 <= std_logic_vector(resize(p_addr9_reg_794_temp,32));

    tmp_56_fu_621_p1 <= std_logic_vector(resize(unsigned(tmp_56_fu_621_p0),64));
    tmp_57_fu_491_p3 <= (tmp_51_fu_481_p4 & ap_const_lv1_1);
    tmp_58_fu_614_p1 <= grp_fu_208_p1(16 - 1 downto 0);
    tmp_5_fu_308_p3 <= (indvar1_reg_133 & ap_const_lv7_0);
    tmp_6_fu_431_p1 <= std_logic_vector(resize(unsigned(reg_227),64));
    tmp_fu_278_p2 <= std_logic_vector(unsigned(indvar1_reg_133) + unsigned(ap_const_lv11_2));
    tmp_s_fu_508_p1 <= std_logic_vector(resize(unsigned(reg_223),64));
end behav;
