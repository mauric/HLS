// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "gaussian.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gaussian::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gaussian::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> gaussian::ap_ST_st1_fsm_0 = "0000000";
const sc_lv<7> gaussian::ap_ST_st2_fsm_1 = "1";
const sc_lv<7> gaussian::ap_ST_st3_fsm_2 = "10";
const sc_lv<7> gaussian::ap_ST_st4_fsm_3 = "11";
const sc_lv<7> gaussian::ap_ST_st5_fsm_4 = "100";
const sc_lv<7> gaussian::ap_ST_st6_fsm_5 = "101";
const sc_lv<7> gaussian::ap_ST_st7_fsm_6 = "110";
const sc_lv<7> gaussian::ap_ST_st8_fsm_7 = "111";
const sc_lv<7> gaussian::ap_ST_st9_fsm_8 = "1000";
const sc_lv<7> gaussian::ap_ST_st10_fsm_9 = "1001";
const sc_lv<7> gaussian::ap_ST_st11_fsm_10 = "1010";
const sc_lv<7> gaussian::ap_ST_st12_fsm_11 = "1011";
const sc_lv<7> gaussian::ap_ST_st13_fsm_12 = "1100";
const sc_lv<7> gaussian::ap_ST_st14_fsm_13 = "1101";
const sc_lv<7> gaussian::ap_ST_st15_fsm_14 = "1110";
const sc_lv<7> gaussian::ap_ST_st16_fsm_15 = "1111";
const sc_lv<7> gaussian::ap_ST_st17_fsm_16 = "10000";
const sc_lv<7> gaussian::ap_ST_st18_fsm_17 = "10001";
const sc_lv<7> gaussian::ap_ST_st19_fsm_18 = "10010";
const sc_lv<7> gaussian::ap_ST_st20_fsm_19 = "10011";
const sc_lv<7> gaussian::ap_ST_st21_fsm_20 = "10100";
const sc_lv<7> gaussian::ap_ST_st22_fsm_21 = "10101";
const sc_lv<7> gaussian::ap_ST_st23_fsm_22 = "10110";
const sc_lv<7> gaussian::ap_ST_st24_fsm_23 = "10111";
const sc_lv<7> gaussian::ap_ST_st25_fsm_24 = "11000";
const sc_lv<7> gaussian::ap_ST_st26_fsm_25 = "11001";
const sc_lv<7> gaussian::ap_ST_st27_fsm_26 = "11010";
const sc_lv<7> gaussian::ap_ST_st28_fsm_27 = "11011";
const sc_lv<7> gaussian::ap_ST_st29_fsm_28 = "11100";
const sc_lv<7> gaussian::ap_ST_st30_fsm_29 = "11101";
const sc_lv<7> gaussian::ap_ST_st31_fsm_30 = "11110";
const sc_lv<7> gaussian::ap_ST_st32_fsm_31 = "11111";
const sc_lv<7> gaussian::ap_ST_st33_fsm_32 = "100000";
const sc_lv<7> gaussian::ap_ST_st34_fsm_33 = "100001";
const sc_lv<7> gaussian::ap_ST_st35_fsm_34 = "100010";
const sc_lv<7> gaussian::ap_ST_st36_fsm_35 = "100011";
const sc_lv<7> gaussian::ap_ST_st37_fsm_36 = "100100";
const sc_lv<7> gaussian::ap_ST_st38_fsm_37 = "100101";
const sc_lv<7> gaussian::ap_ST_st39_fsm_38 = "100110";
const sc_lv<7> gaussian::ap_ST_st40_fsm_39 = "100111";
const sc_lv<7> gaussian::ap_ST_st41_fsm_40 = "101000";
const sc_lv<7> gaussian::ap_ST_st42_fsm_41 = "101001";
const sc_lv<7> gaussian::ap_ST_st43_fsm_42 = "101010";
const sc_lv<7> gaussian::ap_ST_st44_fsm_43 = "101011";
const sc_lv<7> gaussian::ap_ST_st45_fsm_44 = "101100";
const sc_lv<7> gaussian::ap_ST_st46_fsm_45 = "101101";
const sc_lv<7> gaussian::ap_ST_st47_fsm_46 = "101110";
const sc_lv<7> gaussian::ap_ST_st48_fsm_47 = "101111";
const sc_lv<7> gaussian::ap_ST_st49_fsm_48 = "110000";
const sc_lv<7> gaussian::ap_ST_st50_fsm_49 = "110001";
const sc_lv<7> gaussian::ap_ST_st51_fsm_50 = "110010";
const sc_lv<7> gaussian::ap_ST_st52_fsm_51 = "110011";
const sc_lv<7> gaussian::ap_ST_st53_fsm_52 = "110100";
const sc_lv<7> gaussian::ap_ST_st54_fsm_53 = "110101";
const sc_lv<7> gaussian::ap_ST_st55_fsm_54 = "110110";
const sc_lv<7> gaussian::ap_ST_st56_fsm_55 = "110111";
const sc_lv<7> gaussian::ap_ST_st57_fsm_56 = "111000";
const sc_lv<7> gaussian::ap_ST_st58_fsm_57 = "111001";
const sc_lv<7> gaussian::ap_ST_st59_fsm_58 = "111010";
const sc_lv<7> gaussian::ap_ST_st60_fsm_59 = "111011";
const sc_lv<7> gaussian::ap_ST_st61_fsm_60 = "111100";
const sc_lv<7> gaussian::ap_ST_st62_fsm_61 = "111101";
const sc_lv<7> gaussian::ap_ST_st63_fsm_62 = "111110";
const sc_lv<7> gaussian::ap_ST_st64_fsm_63 = "111111";
const sc_lv<7> gaussian::ap_ST_st65_fsm_64 = "1000000";
const sc_lv<7> gaussian::ap_ST_st66_fsm_65 = "1000001";
const sc_lv<7> gaussian::ap_ST_st67_fsm_66 = "1000010";
const sc_lv<7> gaussian::ap_ST_st68_fsm_67 = "1000011";
const sc_lv<7> gaussian::ap_ST_st69_fsm_68 = "1000100";
const sc_lv<7> gaussian::ap_ST_st70_fsm_69 = "1000101";
const sc_lv<7> gaussian::ap_ST_st71_fsm_70 = "1000110";
const sc_lv<7> gaussian::ap_ST_st72_fsm_71 = "1000111";
const sc_lv<7> gaussian::ap_ST_st73_fsm_72 = "1001000";
const sc_lv<7> gaussian::ap_ST_st74_fsm_73 = "1001001";
const sc_lv<7> gaussian::ap_ST_st75_fsm_74 = "1001010";
const sc_lv<7> gaussian::ap_ST_st76_fsm_75 = "1001011";
const sc_lv<7> gaussian::ap_ST_st77_fsm_76 = "1001100";
const sc_lv<7> gaussian::ap_ST_st78_fsm_77 = "1001101";
const sc_lv<7> gaussian::ap_ST_st79_fsm_78 = "1001110";
const sc_lv<7> gaussian::ap_ST_st80_fsm_79 = "1001111";
const sc_lv<7> gaussian::ap_ST_st81_fsm_80 = "1010000";
const sc_lv<7> gaussian::ap_ST_st82_fsm_81 = "1010001";
const sc_lv<7> gaussian::ap_ST_st83_fsm_82 = "1010010";
const sc_lv<7> gaussian::ap_ST_st84_fsm_83 = "1010011";
const sc_lv<7> gaussian::ap_ST_st85_fsm_84 = "1010100";
const sc_lv<7> gaussian::ap_ST_st86_fsm_85 = "1010101";
const sc_lv<7> gaussian::ap_ST_st87_fsm_86 = "1010110";
const sc_lv<7> gaussian::ap_ST_st88_fsm_87 = "1010111";
const sc_lv<7> gaussian::ap_ST_st89_fsm_88 = "1011000";
const sc_lv<7> gaussian::ap_ST_st90_fsm_89 = "1011001";
const sc_lv<7> gaussian::ap_ST_st91_fsm_90 = "1011010";
const sc_lv<7> gaussian::ap_ST_st92_fsm_91 = "1011011";
const sc_lv<7> gaussian::ap_ST_st93_fsm_92 = "1011100";
const sc_lv<7> gaussian::ap_ST_st94_fsm_93 = "1011101";
const sc_lv<7> gaussian::ap_ST_st95_fsm_94 = "1011110";
const sc_lv<7> gaussian::ap_ST_st96_fsm_95 = "1011111";
const sc_lv<7> gaussian::ap_ST_st97_fsm_96 = "1100000";
const sc_lv<7> gaussian::ap_ST_st98_fsm_97 = "1100001";
const sc_lv<7> gaussian::ap_ST_st99_fsm_98 = "1100010";
const sc_lv<1> gaussian::ap_const_lv1_0 = "0";
const sc_lv<11> gaussian::ap_const_lv11_0 = "00000000000";
const sc_lv<32> gaussian::ap_const_lv32_3D7929ED = "111101011110010010100111101101";
const sc_lv<32> gaussian::ap_const_lv32_3E193AF7 = "111110000110010011101011110111";
const sc_lv<32> gaussian::ap_const_lv32_3EBC7736 = "111110101111000111011100110110";
const sc_lv<32> gaussian::ap_const_lv32_3E19389B = "111110000110010011100010011011";
const sc_lv<11> gaussian::ap_const_lv11_2 = "10";
const sc_lv<11> gaussian::ap_const_lv11_1 = "1";
const sc_lv<11> gaussian::ap_const_lv11_436 = "10000110110";
const sc_lv<11> gaussian::ap_const_lv11_77E = "11101111110";
const sc_lv<7> gaussian::ap_const_lv7_0 = "0000000";

gaussian::gaussian(sc_module_name name) : sc_module(name), mVcdFile(0) {
    gaussian_fadd_32ns_32ns_32_9_full_dsp_U1 = new gaussian_fadd_32ns_32ns_32_9_full_dsp<1,9,32,32,32>("gaussian_fadd_32ns_32ns_32_9_full_dsp_U1");
    gaussian_fadd_32ns_32ns_32_9_full_dsp_U1->clk(ap_clk);
    gaussian_fadd_32ns_32ns_32_9_full_dsp_U1->reset(ap_rst);
    gaussian_fadd_32ns_32ns_32_9_full_dsp_U1->din0(grp_fu_160_p0);
    gaussian_fadd_32ns_32ns_32_9_full_dsp_U1->din1(grp_fu_160_p1);
    gaussian_fadd_32ns_32ns_32_9_full_dsp_U1->ce(grp_fu_160_ce);
    gaussian_fadd_32ns_32ns_32_9_full_dsp_U1->dout(grp_fu_160_p2);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U2 = new gaussian_fmul_32ns_32ns_32_5_max_dsp<2,5,32,32,32>("gaussian_fmul_32ns_32ns_32_5_max_dsp_U2");
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U2->clk(ap_clk);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U2->reset(ap_rst);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U2->din0(grp_fu_164_p0);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U2->din1(grp_fu_164_p1);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U2->ce(grp_fu_164_ce);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U2->dout(grp_fu_164_p2);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U3 = new gaussian_fmul_32ns_32ns_32_5_max_dsp<3,5,32,32,32>("gaussian_fmul_32ns_32ns_32_5_max_dsp_U3");
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U3->clk(ap_clk);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U3->reset(ap_rst);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U3->din0(grp_fu_169_p0);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U3->din1(grp_fu_169_p1);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U3->ce(grp_fu_169_ce);
    gaussian_fmul_32ns_32ns_32_5_max_dsp_U3->dout(grp_fu_169_p2);
    gaussian_fptoui_32ns_64_6_U4 = new gaussian_fptoui_32ns_64_6<4,6,32,64>("gaussian_fptoui_32ns_64_6_U4");
    gaussian_fptoui_32ns_64_6_U4->clk(ap_clk);
    gaussian_fptoui_32ns_64_6_U4->reset(ap_rst);
    gaussian_fptoui_32ns_64_6_U4->din0(grp_fu_177_p0);
    gaussian_fptoui_32ns_64_6_U4->ce(grp_fu_177_ce);
    gaussian_fptoui_32ns_64_6_U4->dout(grp_fu_177_p1);
    gaussian_sitofp_64ns_32_9_U5 = new gaussian_sitofp_64ns_32_9<5,9,64,32>("gaussian_sitofp_64ns_32_9_U5");
    gaussian_sitofp_64ns_32_9_U5->clk(ap_clk);
    gaussian_sitofp_64ns_32_9_U5->reset(ap_rst);
    gaussian_sitofp_64ns_32_9_U5->din0(grp_fu_180_p0);
    gaussian_sitofp_64ns_32_9_U5->ce(grp_fu_180_ce);
    gaussian_sitofp_64ns_32_9_U5->dout(grp_fu_180_p1);
    gaussian_sitofp_64ns_32_9_U6 = new gaussian_sitofp_64ns_32_9<6,9,64,32>("gaussian_sitofp_64ns_32_9_U6");
    gaussian_sitofp_64ns_32_9_U6->clk(ap_clk);
    gaussian_sitofp_64ns_32_9_U6->reset(ap_rst);
    gaussian_sitofp_64ns_32_9_U6->din0(grp_fu_183_p0);
    gaussian_sitofp_64ns_32_9_U6->ce(grp_fu_183_ce);
    gaussian_sitofp_64ns_32_9_U6->dout(grp_fu_183_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_223_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_223_p2 );

    SC_METHOD(thread_exitcond1_fu_241_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indvar_i_reg_147 );

    SC_METHOD(thread_exitcond_fu_223_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( indvar1_i_reg_135 );

    SC_METHOD(thread_grp_fu_160_ce);

    SC_METHOD(thread_grp_fu_160_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_199 );
    sensitive << ( reg_205 );

    SC_METHOD(thread_grp_fu_160_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_199 );
    sensitive << ( tmp_10_i_reg_624 );

    SC_METHOD(thread_grp_fu_164_ce);

    SC_METHOD(thread_grp_fu_164_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_194 );

    SC_METHOD(thread_grp_fu_164_p1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_fu_169_ce);

    SC_METHOD(thread_grp_fu_169_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i_reg_614 );

    SC_METHOD(thread_grp_fu_169_p1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_fu_177_ce);

    SC_METHOD(thread_grp_fu_177_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_205 );

    SC_METHOD(thread_grp_fu_180_ce);

    SC_METHOD(thread_grp_fu_180_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_6_i3_fu_315_p1 );
    sensitive << ( tmp_14_i5_fu_341_p1 );
    sensitive << ( tmp_18_i6_fu_390_p1 );
    sensitive << ( tmp_22_i7_fu_481_p1 );
    sensitive << ( tmp_26_i8_fu_494_p1 );
    sensitive << ( tmp_30_i9_fu_499_p1 );
    sensitive << ( tmp_34_i1_fu_504_p1 );
    sensitive << ( tmp_38_i1_fu_508_p1 );

    SC_METHOD(thread_grp_fu_183_ce);

    SC_METHOD(thread_grp_fu_183_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( reg_190 );

    SC_METHOD(thread_i_fu_217_p2);
    sensitive << ( indvar1_i_reg_135 );

    SC_METHOD(thread_in_r_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_8_fu_452_p1 );
    sensitive << ( tmp_2_fu_302_p1 );
    sensitive << ( tmp_4_fu_336_p1 );
    sensitive << ( tmp_7_fu_385_p1 );
    sensitive << ( tmp_11_fu_468_p1 );
    sensitive << ( tmp_13_fu_489_p1 );

    SC_METHOD(thread_in_r_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_310_p1 );
    sensitive << ( tmp_9_fu_460_p1 );
    sensitive << ( tmp_12_fu_476_p1 );

    SC_METHOD(thread_in_r_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_in_r_ce1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_j_fu_235_p2);
    sensitive << ( indvar_i_reg_147 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_8_reg_685 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_14_reg_750 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_p_addr10_fu_427_p2);
    sensitive << ( tmp_12_i_trn_cast_reg_598 );
    sensitive << ( p_addr8_cast_reg_634 );

    SC_METHOD(thread_p_addr11_fu_423_p2);
    sensitive << ( tmp_8_i_trn_cast_reg_567 );
    sensitive << ( p_addr8_cast_reg_634 );

    SC_METHOD(thread_p_addr1_fu_444_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr6_cast_fu_431_p1 );

    SC_METHOD(thread_p_addr1_fu_444_p2);
    sensitive << ( tmp_12_i_trn_cast_reg_598 );
    sensitive << ( p_addr1_fu_444_p0 );

    SC_METHOD(thread_p_addr2_fu_284_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr_cast_fu_281_p1 );

    SC_METHOD(thread_p_addr2_fu_284_p2);
    sensitive << ( tmp_4_i_trn_cast_fu_277_p1 );
    sensitive << ( p_addr2_fu_284_p0 );

    SC_METHOD(thread_p_addr3_fu_293_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr_cast_fu_281_p1 );

    SC_METHOD(thread_p_addr3_fu_293_p2);
    sensitive << ( tmp_8_i_trn_cast_fu_290_p1 );
    sensitive << ( p_addr3_fu_293_p0 );

    SC_METHOD(thread_p_addr4_fu_439_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr6_cast_fu_431_p1 );

    SC_METHOD(thread_p_addr4_fu_439_p2);
    sensitive << ( tmp_8_i_trn_cast_reg_567 );
    sensitive << ( p_addr4_fu_439_p0 );

    SC_METHOD(thread_p_addr5_fu_328_p2);
    sensitive << ( p_addr_cast_reg_557 );
    sensitive << ( tmp_12_i_trn_cast_fu_325_p1 );

    SC_METHOD(thread_p_addr6_cast_fu_431_p1);
    sensitive << ( p_addr6_reg_655 );

    SC_METHOD(thread_p_addr6_fu_417_p2);
    sensitive << ( p_shl4_cast_fu_402_p1 );
    sensitive << ( p_shl5_cast_fu_413_p1 );

    SC_METHOD(thread_p_addr7_fu_434_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr6_cast_fu_431_p1 );

    SC_METHOD(thread_p_addr7_fu_434_p2);
    sensitive << ( tmp_4_i_trn_cast_reg_551 );
    sensitive << ( p_addr7_fu_434_p0 );

    SC_METHOD(thread_p_addr8_cast_fu_374_p1);
    sensitive << ( p_addr8_reg_629 );

    SC_METHOD(thread_p_addr8_fu_368_p2);
    sensitive << ( p_shl2_cast_fu_353_p1 );
    sensitive << ( p_shl3_cast_fu_364_p1 );

    SC_METHOD(thread_p_addr9_fu_377_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr8_reg_629 );

    SC_METHOD(thread_p_addr9_fu_377_p2);
    sensitive << ( tmp_4_i_trn_cast_reg_551 );
    sensitive << ( p_addr9_fu_377_p0 );

    SC_METHOD(thread_p_addr_cast_fu_281_p1);
    sensitive << ( p_addr_reg_546 );

    SC_METHOD(thread_p_addr_fu_271_p2);
    sensitive << ( p_shl_cast_fu_255_p1 );
    sensitive << ( p_shl1_cast_fu_267_p1 );

    SC_METHOD(thread_p_shl1_cast_fu_267_p1);
    sensitive << ( tmp_1_fu_259_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_353_p1);
    sensitive << ( tmp_5_fu_346_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_364_p1);
    sensitive << ( tmp_6_fu_357_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_402_p1);
    sensitive << ( tmp_s_fu_395_p3 );

    SC_METHOD(thread_p_shl5_cast_fu_413_p1);
    sensitive << ( tmp_10_fu_406_p3 );

    SC_METHOD(thread_p_shl_cast_fu_255_p1);
    sensitive << ( tmp_fu_247_p3 );

    SC_METHOD(thread_tmp6_i_fu_229_p2);
    sensitive << ( indvar_i_reg_147 );

    SC_METHOD(thread_tmp_10_fu_406_p3);
    sensitive << ( tmp_i_12_reg_516 );

    SC_METHOD(thread_tmp_11_fu_468_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr7_reg_670 );

    SC_METHOD(thread_tmp_11_fu_468_p1);
    sensitive << ( tmp_11_fu_468_p0 );

    SC_METHOD(thread_tmp_12_fu_476_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr4_reg_675 );

    SC_METHOD(thread_tmp_12_fu_476_p1);
    sensitive << ( tmp_12_fu_476_p0 );

    SC_METHOD(thread_tmp_12_i_trn_cast_fu_325_p1);
    sensitive << ( tmp6_i_reg_532 );

    SC_METHOD(thread_tmp_13_fu_489_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr1_reg_680 );

    SC_METHOD(thread_tmp_13_fu_489_p1);
    sensitive << ( tmp_13_fu_489_p0 );

    SC_METHOD(thread_tmp_14_fu_512_p1);
    sensitive << ( grp_fu_177_p1 );

    SC_METHOD(thread_tmp_14_i5_fu_341_p1);
    sensitive << ( reg_186 );

    SC_METHOD(thread_tmp_18_i6_fu_390_p1);
    sensitive << ( reg_186 );

    SC_METHOD(thread_tmp_1_fu_259_p3);
    sensitive << ( indvar1_i_reg_135 );

    SC_METHOD(thread_tmp_22_i7_fu_481_p1);
    sensitive << ( reg_186 );

    SC_METHOD(thread_tmp_26_i8_fu_494_p1);
    sensitive << ( reg_190 );

    SC_METHOD(thread_tmp_2_fu_302_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr2_reg_562 );

    SC_METHOD(thread_tmp_2_fu_302_p1);
    sensitive << ( tmp_2_fu_302_p0 );

    SC_METHOD(thread_tmp_30_i9_fu_499_p1);
    sensitive << ( reg_186 );

    SC_METHOD(thread_tmp_34_i1_fu_504_p1);
    sensitive << ( in_load_7_reg_715 );

    SC_METHOD(thread_tmp_38_i1_fu_508_p1);
    sensitive << ( in_load_8_reg_725 );

    SC_METHOD(thread_tmp_3_fu_310_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr3_reg_573 );

    SC_METHOD(thread_tmp_3_fu_310_p1);
    sensitive << ( tmp_3_fu_310_p0 );

    SC_METHOD(thread_tmp_4_fu_336_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr5_reg_604 );

    SC_METHOD(thread_tmp_4_fu_336_p1);
    sensitive << ( tmp_4_fu_336_p0 );

    SC_METHOD(thread_tmp_4_i_trn_cast_fu_277_p1);
    sensitive << ( indvar_i_reg_147 );

    SC_METHOD(thread_tmp_5_fu_346_p3);
    sensitive << ( i_reg_522 );

    SC_METHOD(thread_tmp_6_fu_357_p3);
    sensitive << ( i_reg_522 );

    SC_METHOD(thread_tmp_6_i3_fu_315_p1);
    sensitive << ( reg_186 );

    SC_METHOD(thread_tmp_7_fu_385_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr9_reg_640 );

    SC_METHOD(thread_tmp_7_fu_385_p1);
    sensitive << ( tmp_7_fu_385_p0 );

    SC_METHOD(thread_tmp_8_fu_452_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr11_reg_660 );

    SC_METHOD(thread_tmp_8_fu_452_p1);
    sensitive << ( tmp_8_fu_452_p0 );

    SC_METHOD(thread_tmp_8_i_trn_cast_fu_290_p1);
    sensitive << ( j_reg_537 );

    SC_METHOD(thread_tmp_9_fu_460_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_addr10_reg_665 );

    SC_METHOD(thread_tmp_9_fu_460_p1);
    sensitive << ( tmp_9_fu_460_p0 );

    SC_METHOD(thread_tmp_fu_247_p3);
    sensitive << ( indvar1_i_reg_135 );

    SC_METHOD(thread_tmp_i_12_fu_211_p2);
    sensitive << ( indvar1_i_reg_135 );

    SC_METHOD(thread_tmp_s_fu_395_p3);
    sensitive << ( tmp_i_12_reg_516 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_241_p2 );
    sensitive << ( exitcond_fu_223_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gaussian_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    const char* dump_vcd = std::getenv("AP_WRITE_VCD");
    if (dump_vcd && string(dump_vcd) == "1" ) {
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_r_address0, "(port)in_r_address0");
    sc_trace(mVcdFile, in_r_ce0, "(port)in_r_ce0");
    sc_trace(mVcdFile, in_r_q0, "(port)in_r_q0");
    sc_trace(mVcdFile, in_r_address1, "(port)in_r_address1");
    sc_trace(mVcdFile, in_r_ce1, "(port)in_r_ce1");
    sc_trace(mVcdFile, in_r_q1, "(port)in_r_q1");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, reg_186, "reg_186");
    sc_trace(mVcdFile, reg_190, "reg_190");
    sc_trace(mVcdFile, grp_fu_180_p1, "grp_fu_180_p1");
    sc_trace(mVcdFile, reg_194, "reg_194");
    sc_trace(mVcdFile, grp_fu_164_p2, "grp_fu_164_p2");
    sc_trace(mVcdFile, reg_199, "reg_199");
    sc_trace(mVcdFile, grp_fu_160_p2, "grp_fu_160_p2");
    sc_trace(mVcdFile, reg_205, "reg_205");
    sc_trace(mVcdFile, tmp_i_12_fu_211_p2, "tmp_i_12_fu_211_p2");
    sc_trace(mVcdFile, tmp_i_12_reg_516, "tmp_i_12_reg_516");
    sc_trace(mVcdFile, i_fu_217_p2, "i_fu_217_p2");
    sc_trace(mVcdFile, i_reg_522, "i_reg_522");
    sc_trace(mVcdFile, tmp6_i_fu_229_p2, "tmp6_i_fu_229_p2");
    sc_trace(mVcdFile, tmp6_i_reg_532, "tmp6_i_reg_532");
    sc_trace(mVcdFile, j_fu_235_p2, "j_fu_235_p2");
    sc_trace(mVcdFile, j_reg_537, "j_reg_537");
    sc_trace(mVcdFile, p_addr_fu_271_p2, "p_addr_fu_271_p2");
    sc_trace(mVcdFile, p_addr_reg_546, "p_addr_reg_546");
    sc_trace(mVcdFile, exitcond1_fu_241_p2, "exitcond1_fu_241_p2");
    sc_trace(mVcdFile, tmp_4_i_trn_cast_fu_277_p1, "tmp_4_i_trn_cast_fu_277_p1");
    sc_trace(mVcdFile, tmp_4_i_trn_cast_reg_551, "tmp_4_i_trn_cast_reg_551");
    sc_trace(mVcdFile, p_addr_cast_fu_281_p1, "p_addr_cast_fu_281_p1");
    sc_trace(mVcdFile, p_addr_cast_reg_557, "p_addr_cast_reg_557");
    sc_trace(mVcdFile, p_addr2_fu_284_p2, "p_addr2_fu_284_p2");
    sc_trace(mVcdFile, p_addr2_reg_562, "p_addr2_reg_562");
    sc_trace(mVcdFile, tmp_8_i_trn_cast_fu_290_p1, "tmp_8_i_trn_cast_fu_290_p1");
    sc_trace(mVcdFile, tmp_8_i_trn_cast_reg_567, "tmp_8_i_trn_cast_reg_567");
    sc_trace(mVcdFile, p_addr3_fu_293_p2, "p_addr3_fu_293_p2");
    sc_trace(mVcdFile, p_addr3_reg_573, "p_addr3_reg_573");
    sc_trace(mVcdFile, tmp_6_i3_fu_315_p1, "tmp_6_i3_fu_315_p1");
    sc_trace(mVcdFile, tmp_12_i_trn_cast_fu_325_p1, "tmp_12_i_trn_cast_fu_325_p1");
    sc_trace(mVcdFile, tmp_12_i_trn_cast_reg_598, "tmp_12_i_trn_cast_reg_598");
    sc_trace(mVcdFile, p_addr5_fu_328_p2, "p_addr5_fu_328_p2");
    sc_trace(mVcdFile, p_addr5_reg_604, "p_addr5_reg_604");
    sc_trace(mVcdFile, grp_fu_183_p1, "grp_fu_183_p1");
    sc_trace(mVcdFile, tmp_i_reg_614, "tmp_i_reg_614");
    sc_trace(mVcdFile, tmp_14_i5_fu_341_p1, "tmp_14_i5_fu_341_p1");
    sc_trace(mVcdFile, grp_fu_169_p2, "grp_fu_169_p2");
    sc_trace(mVcdFile, tmp_10_i_reg_624, "tmp_10_i_reg_624");
    sc_trace(mVcdFile, p_addr8_fu_368_p2, "p_addr8_fu_368_p2");
    sc_trace(mVcdFile, p_addr8_reg_629, "p_addr8_reg_629");
    sc_trace(mVcdFile, p_addr8_cast_fu_374_p1, "p_addr8_cast_fu_374_p1");
    sc_trace(mVcdFile, p_addr8_cast_reg_634, "p_addr8_cast_reg_634");
    sc_trace(mVcdFile, p_addr9_fu_377_p2, "p_addr9_fu_377_p2");
    sc_trace(mVcdFile, p_addr9_reg_640, "p_addr9_reg_640");
    sc_trace(mVcdFile, tmp_18_i6_fu_390_p1, "tmp_18_i6_fu_390_p1");
    sc_trace(mVcdFile, p_addr6_fu_417_p2, "p_addr6_fu_417_p2");
    sc_trace(mVcdFile, p_addr6_reg_655, "p_addr6_reg_655");
    sc_trace(mVcdFile, p_addr11_fu_423_p2, "p_addr11_fu_423_p2");
    sc_trace(mVcdFile, p_addr11_reg_660, "p_addr11_reg_660");
    sc_trace(mVcdFile, p_addr10_fu_427_p2, "p_addr10_fu_427_p2");
    sc_trace(mVcdFile, p_addr10_reg_665, "p_addr10_reg_665");
    sc_trace(mVcdFile, p_addr7_fu_434_p2, "p_addr7_fu_434_p2");
    sc_trace(mVcdFile, p_addr7_reg_670, "p_addr7_reg_670");
    sc_trace(mVcdFile, p_addr4_fu_439_p2, "p_addr4_fu_439_p2");
    sc_trace(mVcdFile, p_addr4_reg_675, "p_addr4_reg_675");
    sc_trace(mVcdFile, p_addr1_fu_444_p2, "p_addr1_fu_444_p2");
    sc_trace(mVcdFile, p_addr1_reg_680, "p_addr1_reg_680");
    sc_trace(mVcdFile, tmp_8_fu_452_p1, "tmp_8_fu_452_p1");
    sc_trace(mVcdFile, tmp_8_reg_685, "tmp_8_reg_685");
    sc_trace(mVcdFile, tmp_22_i7_fu_481_p1, "tmp_22_i7_fu_481_p1");
    sc_trace(mVcdFile, in_load_7_reg_715, "in_load_7_reg_715");
    sc_trace(mVcdFile, in_load_8_reg_725, "in_load_8_reg_725");
    sc_trace(mVcdFile, tmp_26_i8_fu_494_p1, "tmp_26_i8_fu_494_p1");
    sc_trace(mVcdFile, tmp_30_i9_fu_499_p1, "tmp_30_i9_fu_499_p1");
    sc_trace(mVcdFile, tmp_34_i1_fu_504_p1, "tmp_34_i1_fu_504_p1");
    sc_trace(mVcdFile, tmp_38_i1_fu_508_p1, "tmp_38_i1_fu_508_p1");
    sc_trace(mVcdFile, tmp_14_fu_512_p1, "tmp_14_fu_512_p1");
    sc_trace(mVcdFile, tmp_14_reg_750, "tmp_14_reg_750");
    sc_trace(mVcdFile, indvar1_i_reg_135, "indvar1_i_reg_135");
    sc_trace(mVcdFile, indvar_i_reg_147, "indvar_i_reg_147");
    sc_trace(mVcdFile, exitcond_fu_223_p2, "exitcond_fu_223_p2");
    sc_trace(mVcdFile, tmp_2_fu_302_p1, "tmp_2_fu_302_p1");
    sc_trace(mVcdFile, tmp_3_fu_310_p1, "tmp_3_fu_310_p1");
    sc_trace(mVcdFile, tmp_4_fu_336_p1, "tmp_4_fu_336_p1");
    sc_trace(mVcdFile, tmp_7_fu_385_p1, "tmp_7_fu_385_p1");
    sc_trace(mVcdFile, tmp_9_fu_460_p1, "tmp_9_fu_460_p1");
    sc_trace(mVcdFile, tmp_11_fu_468_p1, "tmp_11_fu_468_p1");
    sc_trace(mVcdFile, tmp_12_fu_476_p1, "tmp_12_fu_476_p1");
    sc_trace(mVcdFile, tmp_13_fu_489_p1, "tmp_13_fu_489_p1");
    sc_trace(mVcdFile, grp_fu_160_p0, "grp_fu_160_p0");
    sc_trace(mVcdFile, grp_fu_160_p1, "grp_fu_160_p1");
    sc_trace(mVcdFile, grp_fu_164_p0, "grp_fu_164_p0");
    sc_trace(mVcdFile, grp_fu_164_p1, "grp_fu_164_p1");
    sc_trace(mVcdFile, grp_fu_169_p0, "grp_fu_169_p0");
    sc_trace(mVcdFile, grp_fu_169_p1, "grp_fu_169_p1");
    sc_trace(mVcdFile, grp_fu_177_p0, "grp_fu_177_p0");
    sc_trace(mVcdFile, grp_fu_180_p0, "grp_fu_180_p0");
    sc_trace(mVcdFile, grp_fu_183_p0, "grp_fu_183_p0");
    sc_trace(mVcdFile, tmp_fu_247_p3, "tmp_fu_247_p3");
    sc_trace(mVcdFile, tmp_1_fu_259_p3, "tmp_1_fu_259_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_255_p1, "p_shl_cast_fu_255_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_267_p1, "p_shl1_cast_fu_267_p1");
    sc_trace(mVcdFile, p_addr2_fu_284_p0, "p_addr2_fu_284_p0");
    sc_trace(mVcdFile, p_addr3_fu_293_p0, "p_addr3_fu_293_p0");
    sc_trace(mVcdFile, tmp_2_fu_302_p0, "tmp_2_fu_302_p0");
    sc_trace(mVcdFile, tmp_3_fu_310_p0, "tmp_3_fu_310_p0");
    sc_trace(mVcdFile, tmp_4_fu_336_p0, "tmp_4_fu_336_p0");
    sc_trace(mVcdFile, tmp_5_fu_346_p3, "tmp_5_fu_346_p3");
    sc_trace(mVcdFile, tmp_6_fu_357_p3, "tmp_6_fu_357_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_353_p1, "p_shl2_cast_fu_353_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_364_p1, "p_shl3_cast_fu_364_p1");
    sc_trace(mVcdFile, p_addr9_fu_377_p0, "p_addr9_fu_377_p0");
    sc_trace(mVcdFile, tmp_7_fu_385_p0, "tmp_7_fu_385_p0");
    sc_trace(mVcdFile, tmp_s_fu_395_p3, "tmp_s_fu_395_p3");
    sc_trace(mVcdFile, tmp_10_fu_406_p3, "tmp_10_fu_406_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_402_p1, "p_shl4_cast_fu_402_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_413_p1, "p_shl5_cast_fu_413_p1");
    sc_trace(mVcdFile, p_addr7_fu_434_p0, "p_addr7_fu_434_p0");
    sc_trace(mVcdFile, p_addr6_cast_fu_431_p1, "p_addr6_cast_fu_431_p1");
    sc_trace(mVcdFile, p_addr4_fu_439_p0, "p_addr4_fu_439_p0");
    sc_trace(mVcdFile, p_addr1_fu_444_p0, "p_addr1_fu_444_p0");
    sc_trace(mVcdFile, tmp_8_fu_452_p0, "tmp_8_fu_452_p0");
    sc_trace(mVcdFile, tmp_9_fu_460_p0, "tmp_9_fu_460_p0");
    sc_trace(mVcdFile, tmp_11_fu_468_p0, "tmp_11_fu_468_p0");
    sc_trace(mVcdFile, tmp_12_fu_476_p0, "tmp_12_fu_476_p0");
    sc_trace(mVcdFile, tmp_13_fu_489_p0, "tmp_13_fu_489_p0");
    sc_trace(mVcdFile, grp_fu_177_p1, "grp_fu_177_p1");
    sc_trace(mVcdFile, grp_fu_160_ce, "grp_fu_160_ce");
    sc_trace(mVcdFile, grp_fu_164_ce, "grp_fu_164_ce");
    sc_trace(mVcdFile, grp_fu_169_ce, "grp_fu_169_ce");
    sc_trace(mVcdFile, grp_fu_177_ce, "grp_fu_177_ce");
    sc_trace(mVcdFile, grp_fu_180_ce, "grp_fu_180_ce");
    sc_trace(mVcdFile, grp_fu_183_ce, "grp_fu_183_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");

    }
    mHdltvinHandle.open("gaussian.hdltvin.dat");
    mHdltvoutHandle.open("gaussian.hdltvout.dat");
}

gaussian::~gaussian() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete gaussian_fadd_32ns_32ns_32_9_full_dsp_U1;
    delete gaussian_fmul_32ns_32ns_32_5_max_dsp_U2;
    delete gaussian_fmul_32ns_32ns_32_5_max_dsp_U3;
    delete gaussian_fptoui_32ns_64_6_U4;
    delete gaussian_sitofp_64ns_32_9_U5;
    delete gaussian_sitofp_64ns_32_9_U6;
}

void gaussian::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,7,7>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_241_p2.read(), ap_const_lv1_0))) {
        indvar1_i_reg_135 = i_reg_522.read();
    } else if ((esl_seteq<1,7,7>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar1_i_reg_135 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,7,7>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_223_p2.read()))) {
        indvar_i_reg_147 = ap_const_lv11_0;
    } else if (esl_seteq<1,7,7>(ap_ST_st99_fsm_98, ap_CS_fsm.read())) {
        indvar_i_reg_147 = j_reg_537.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st2_fsm_1, ap_CS_fsm.read())) {
        i_reg_522 = i_fu_217_p2.read();
        tmp_i_12_reg_516 = tmp_i_12_fu_211_p2.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st34_fsm_33, ap_CS_fsm.read())) {
        in_load_7_reg_715 = in_r_q1.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st35_fsm_34, ap_CS_fsm.read())) {
        in_load_8_reg_725 = in_r_q0.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        j_reg_537 = j_fu_235_p2.read();
        tmp6_i_reg_532 = tmp6_i_fu_229_p2.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st31_fsm_30, ap_CS_fsm.read())) {
        p_addr10_reg_665 = p_addr10_fu_427_p2.read();
        p_addr11_reg_660 = p_addr11_fu_423_p2.read();
        p_addr1_reg_680 = p_addr1_fu_444_p2.read();
        p_addr4_reg_675 = p_addr4_fu_439_p2.read();
        p_addr7_reg_670 = p_addr7_fu_434_p2.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        p_addr2_reg_562 = p_addr2_fu_284_p2.read();
        p_addr3_reg_573 = p_addr3_fu_293_p2.read();
        p_addr_cast_reg_557 = p_addr_cast_fu_281_p1.read();
        tmp_4_i_trn_cast_reg_551 = tmp_4_i_trn_cast_fu_277_p1.read();
        tmp_8_i_trn_cast_reg_567 = tmp_8_i_trn_cast_fu_290_p1.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st13_fsm_12, ap_CS_fsm.read())) {
        p_addr5_reg_604 = p_addr5_fu_328_p2.read();
        tmp_12_i_trn_cast_reg_598 = tmp_12_i_trn_cast_fu_325_p1.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st30_fsm_29, ap_CS_fsm.read())) {
        p_addr6_reg_655 = p_addr6_fu_417_p2.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st22_fsm_21, ap_CS_fsm.read())) {
        p_addr8_cast_reg_634 = p_addr8_cast_fu_374_p1.read();
        p_addr9_reg_640 = p_addr9_fu_377_p2.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st21_fsm_20, ap_CS_fsm.read())) {
        p_addr8_reg_629 = p_addr8_fu_368_p2.read();
    }
    if ((esl_seteq<1,7,7>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && esl_seteq<1,1,1>(exitcond1_fu_241_p2.read(), ap_const_lv1_0))) {
        p_addr_reg_546 = p_addr_fu_271_p2.read();
    }
    if ((esl_seteq<1,7,7>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st24_fsm_23, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st33_fsm_32, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st34_fsm_33, ap_CS_fsm.read()))) {
        reg_186 = in_r_q0.read();
    }
    if ((esl_seteq<1,7,7>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st33_fsm_32, ap_CS_fsm.read()))) {
        reg_190 = in_r_q1.read();
    }
    if ((esl_seteq<1,7,7>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st24_fsm_23, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st33_fsm_32, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st42_fsm_41, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st51_fsm_50, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st60_fsm_59, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st69_fsm_68, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st78_fsm_77, ap_CS_fsm.read()))) {
        reg_194 = grp_fu_180_p1.read();
    }
    if ((esl_seteq<1,7,7>(ap_ST_st20_fsm_19, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st29_fsm_28, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st38_fsm_37, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st47_fsm_46, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st56_fsm_55, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st65_fsm_64, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st74_fsm_73, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st83_fsm_82, ap_CS_fsm.read()))) {
        reg_199 = grp_fu_164_p2.read();
    }
    if ((esl_seteq<1,7,7>(ap_ST_st29_fsm_28, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st38_fsm_37, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st47_fsm_46, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st56_fsm_55, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st65_fsm_64, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st74_fsm_73, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st83_fsm_82, ap_CS_fsm.read()) || esl_seteq<1,7,7>(ap_ST_st92_fsm_91, ap_CS_fsm.read()))) {
        reg_205 = grp_fu_160_p2.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st20_fsm_19, ap_CS_fsm.read())) {
        tmp_10_i_reg_624 = grp_fu_169_p2.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st98_fsm_97, ap_CS_fsm.read())) {
        tmp_14_reg_750 = tmp_14_fu_512_p1.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st32_fsm_31, ap_CS_fsm.read())) {
        tmp_8_reg_685 = tmp_8_fu_452_p1.read();
    }
    if (esl_seteq<1,7,7>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        tmp_i_reg_614 = grp_fu_183_p1.read();
    }
}

void gaussian::thread_ap_done() {
    if ((esl_seteq<1,7,7>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_223_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gaussian::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,7,7>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gaussian::thread_ap_ready() {
    if ((esl_seteq<1,7,7>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_223_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gaussian::thread_exitcond1_fu_241_p2() {
    exitcond1_fu_241_p2 = (!indvar_i_reg_147.read().is_01() || !ap_const_lv11_77E.is_01())? sc_lv<1>(): sc_lv<1>(indvar_i_reg_147.read() == ap_const_lv11_77E);
}

void gaussian::thread_exitcond_fu_223_p2() {
    exitcond_fu_223_p2 = (!indvar1_i_reg_135.read().is_01() || !ap_const_lv11_436.is_01())? sc_lv<1>(): sc_lv<1>(indvar1_i_reg_135.read() == ap_const_lv11_436);
}

void gaussian::thread_grp_fu_160_ce() {
    grp_fu_160_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_160_p0() {
    if ((esl_seteq<1,7,7>(ap_ST_st30_fsm_29, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st39_fsm_38, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st48_fsm_47, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st57_fsm_56, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st66_fsm_65, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st75_fsm_74, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st84_fsm_83, ap_CS_fsm.read()))) {
        grp_fu_160_p0 = reg_205.read();
    } else if (esl_seteq<1,7,7>(ap_ST_st21_fsm_20, ap_CS_fsm.read())) {
        grp_fu_160_p0 = reg_199.read();
    } else {
        grp_fu_160_p0 = reg_205.read();
    }
}

void gaussian::thread_grp_fu_160_p1() {
    if ((esl_seteq<1,7,7>(ap_ST_st30_fsm_29, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st39_fsm_38, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st48_fsm_47, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st57_fsm_56, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st66_fsm_65, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st75_fsm_74, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st84_fsm_83, ap_CS_fsm.read()))) {
        grp_fu_160_p1 = reg_199.read();
    } else if (esl_seteq<1,7,7>(ap_ST_st21_fsm_20, ap_CS_fsm.read())) {
        grp_fu_160_p1 = tmp_10_i_reg_624.read();
    } else {
        grp_fu_160_p1 = tmp_10_i_reg_624.read();
    }
}

void gaussian::thread_grp_fu_164_ce() {
    grp_fu_164_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_164_p0() {
    grp_fu_164_p0 = reg_194.read();
}

void gaussian::thread_grp_fu_164_p1() {
    if (esl_seteq<1,7,7>(ap_ST_st52_fsm_51, ap_CS_fsm.read())) {
        grp_fu_164_p1 = ap_const_lv32_3E19389B;
    } else if (esl_seteq<1,7,7>(ap_ST_st43_fsm_42, ap_CS_fsm.read())) {
        grp_fu_164_p1 = ap_const_lv32_3EBC7736;
    } else if ((esl_seteq<1,7,7>(ap_ST_st34_fsm_33, ap_CS_fsm.read()) || 
                esl_seteq<1,7,7>(ap_ST_st70_fsm_69, ap_CS_fsm.read()))) {
        grp_fu_164_p1 = ap_const_lv32_3E193AF7;
    } else if ((esl_seteq<1,7,7>(ap_ST_st16_fsm_15, ap_CS_fsm.read()) || 
                esl_seteq<1,7,7>(ap_ST_st25_fsm_24, ap_CS_fsm.read()) || 
                esl_seteq<1,7,7>(ap_ST_st61_fsm_60, ap_CS_fsm.read()) || 
                esl_seteq<1,7,7>(ap_ST_st79_fsm_78, ap_CS_fsm.read()))) {
        grp_fu_164_p1 = ap_const_lv32_3D7929ED;
    } else {
        grp_fu_164_p1 = ap_const_lv32_3E19389B;
    }
}

void gaussian::thread_grp_fu_169_ce() {
    grp_fu_169_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_169_p0() {
    grp_fu_169_p0 = tmp_i_reg_614.read();
}

void gaussian::thread_grp_fu_169_p1() {
    grp_fu_169_p1 = ap_const_lv32_3E193AF7;
}

void gaussian::thread_grp_fu_177_ce() {
    grp_fu_177_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_177_p0() {
    grp_fu_177_p0 = reg_205.read();
}

void gaussian::thread_grp_fu_180_ce() {
    grp_fu_180_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_180_p0() {
    if (esl_seteq<1,7,7>(ap_ST_st70_fsm_69, ap_CS_fsm.read())) {
        grp_fu_180_p0 = tmp_38_i1_fu_508_p1.read();
    } else if (esl_seteq<1,7,7>(ap_ST_st61_fsm_60, ap_CS_fsm.read())) {
        grp_fu_180_p0 = tmp_34_i1_fu_504_p1.read();
    } else if (esl_seteq<1,7,7>(ap_ST_st52_fsm_51, ap_CS_fsm.read())) {
        grp_fu_180_p0 = tmp_30_i9_fu_499_p1.read();
    } else if (esl_seteq<1,7,7>(ap_ST_st43_fsm_42, ap_CS_fsm.read())) {
        grp_fu_180_p0 = tmp_26_i8_fu_494_p1.read();
    } else if (esl_seteq<1,7,7>(ap_ST_st34_fsm_33, ap_CS_fsm.read())) {
        grp_fu_180_p0 = tmp_22_i7_fu_481_p1.read();
    } else if (esl_seteq<1,7,7>(ap_ST_st25_fsm_24, ap_CS_fsm.read())) {
        grp_fu_180_p0 = tmp_18_i6_fu_390_p1.read();
    } else if (esl_seteq<1,7,7>(ap_ST_st16_fsm_15, ap_CS_fsm.read())) {
        grp_fu_180_p0 = tmp_14_i5_fu_341_p1.read();
    } else if (esl_seteq<1,7,7>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        grp_fu_180_p0 = tmp_6_i3_fu_315_p1.read();
    } else {
        grp_fu_180_p0 = tmp_38_i1_fu_508_p1.read();
    }
}

void gaussian::thread_grp_fu_183_ce() {
    grp_fu_183_ce = ap_const_logic_1;
}

void gaussian::thread_grp_fu_183_p0() {
    grp_fu_183_p0 = esl_zext<64,16>(reg_190.read());
}

void gaussian::thread_i_fu_217_p2() {
    i_fu_217_p2 = (!indvar1_i_reg_135.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_bigint<11>(indvar1_i_reg_135.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void gaussian::thread_in_r_address0() {
    if (esl_seteq<1,7,7>(ap_ST_st34_fsm_33, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_13_fu_489_p1.read());
    } else if (esl_seteq<1,7,7>(ap_ST_st33_fsm_32, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_11_fu_468_p1.read());
    } else if (esl_seteq<1,7,7>(ap_ST_st32_fsm_31, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_8_fu_452_p1.read());
    } else if (esl_seteq<1,7,7>(ap_ST_st23_fsm_22, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_7_fu_385_p1.read());
    } else if (esl_seteq<1,7,7>(ap_ST_st14_fsm_13, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_4_fu_336_p1.read());
    } else if (esl_seteq<1,7,7>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
        in_r_address0 =  (sc_lv<21>) (tmp_2_fu_302_p1.read());
    } else {
        in_r_address0 =  (sc_lv<21>) (tmp_13_fu_489_p1.read());
    }
}

void gaussian::thread_in_r_address1() {
    if (esl_seteq<1,7,7>(ap_ST_st33_fsm_32, ap_CS_fsm.read())) {
        in_r_address1 =  (sc_lv<21>) (tmp_12_fu_476_p1.read());
    } else if (esl_seteq<1,7,7>(ap_ST_st32_fsm_31, ap_CS_fsm.read())) {
        in_r_address1 =  (sc_lv<21>) (tmp_9_fu_460_p1.read());
    } else if (esl_seteq<1,7,7>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
        in_r_address1 =  (sc_lv<21>) (tmp_3_fu_310_p1.read());
    } else {
        in_r_address1 =  (sc_lv<21>) (tmp_12_fu_476_p1.read());
    }
}

void gaussian::thread_in_r_ce0() {
    if ((esl_seteq<1,7,7>(ap_ST_st33_fsm_32, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st34_fsm_33, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st23_fsm_22, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st32_fsm_31, ap_CS_fsm.read()))) {
        in_r_ce0 = ap_const_logic_1;
    } else {
        in_r_ce0 = ap_const_logic_0;
    }
}

void gaussian::thread_in_r_ce1() {
    if ((esl_seteq<1,7,7>(ap_ST_st33_fsm_32, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) || 
         esl_seteq<1,7,7>(ap_ST_st32_fsm_31, ap_CS_fsm.read()))) {
        in_r_ce1 = ap_const_logic_1;
    } else {
        in_r_ce1 = ap_const_logic_0;
    }
}

void gaussian::thread_j_fu_235_p2() {
    j_fu_235_p2 = (!indvar_i_reg_147.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_bigint<11>(indvar_i_reg_147.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void gaussian::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<21>) (tmp_8_reg_685.read());
}

void gaussian::thread_out_r_ce0() {
    if (esl_seteq<1,7,7>(ap_ST_st99_fsm_98, ap_CS_fsm.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void gaussian::thread_out_r_d0() {
    out_r_d0 = tmp_14_reg_750.read();
}

void gaussian::thread_out_r_we0() {
    if ((esl_seteq<1,7,7>(ap_ST_st99_fsm_98, ap_CS_fsm.read()))) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void gaussian::thread_p_addr10_fu_427_p2() {
    p_addr10_fu_427_p2 = (!p_addr8_cast_reg_634.read().is_01() || !tmp_12_i_trn_cast_reg_598.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr8_cast_reg_634.read()) + sc_biguint<24>(tmp_12_i_trn_cast_reg_598.read()));
}

void gaussian::thread_p_addr11_fu_423_p2() {
    p_addr11_fu_423_p2 = (!p_addr8_cast_reg_634.read().is_01() || !tmp_8_i_trn_cast_reg_567.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr8_cast_reg_634.read()) + sc_biguint<24>(tmp_8_i_trn_cast_reg_567.read()));
}

void gaussian::thread_p_addr1_fu_444_p0() {
    p_addr1_fu_444_p0 = p_addr6_cast_fu_431_p1.read();
}

void gaussian::thread_p_addr1_fu_444_p2() {
    p_addr1_fu_444_p2 = (!p_addr1_fu_444_p0.read().is_01() || !tmp_12_i_trn_cast_reg_598.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr1_fu_444_p0.read()) + sc_biguint<24>(tmp_12_i_trn_cast_reg_598.read()));
}

void gaussian::thread_p_addr2_fu_284_p0() {
    p_addr2_fu_284_p0 = p_addr_cast_fu_281_p1.read();
}

void gaussian::thread_p_addr2_fu_284_p2() {
    p_addr2_fu_284_p2 = (!p_addr2_fu_284_p0.read().is_01() || !tmp_4_i_trn_cast_fu_277_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr2_fu_284_p0.read()) + sc_biguint<24>(tmp_4_i_trn_cast_fu_277_p1.read()));
}

void gaussian::thread_p_addr3_fu_293_p0() {
    p_addr3_fu_293_p0 = p_addr_cast_fu_281_p1.read();
}

void gaussian::thread_p_addr3_fu_293_p2() {
    p_addr3_fu_293_p2 = (!p_addr3_fu_293_p0.read().is_01() || !tmp_8_i_trn_cast_fu_290_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr3_fu_293_p0.read()) + sc_biguint<24>(tmp_8_i_trn_cast_fu_290_p1.read()));
}

void gaussian::thread_p_addr4_fu_439_p0() {
    p_addr4_fu_439_p0 = p_addr6_cast_fu_431_p1.read();
}

void gaussian::thread_p_addr4_fu_439_p2() {
    p_addr4_fu_439_p2 = (!p_addr4_fu_439_p0.read().is_01() || !tmp_8_i_trn_cast_reg_567.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr4_fu_439_p0.read()) + sc_biguint<24>(tmp_8_i_trn_cast_reg_567.read()));
}

void gaussian::thread_p_addr5_fu_328_p2() {
    p_addr5_fu_328_p2 = (!p_addr_cast_reg_557.read().is_01() || !tmp_12_i_trn_cast_fu_325_p1.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr_cast_reg_557.read()) + sc_biguint<24>(tmp_12_i_trn_cast_fu_325_p1.read()));
}

void gaussian::thread_p_addr6_cast_fu_431_p1() {
    p_addr6_cast_fu_431_p1 = esl_sext<24,23>(p_addr6_reg_655.read());
}

void gaussian::thread_p_addr6_fu_417_p2() {
    p_addr6_fu_417_p2 = (!p_shl4_cast_fu_402_p1.read().is_01() || !p_shl5_cast_fu_413_p1.read().is_01())? sc_lv<23>(): (sc_bigint<23>(p_shl4_cast_fu_402_p1.read()) - sc_biguint<23>(p_shl5_cast_fu_413_p1.read()));
}

void gaussian::thread_p_addr7_fu_434_p0() {
    p_addr7_fu_434_p0 = p_addr6_cast_fu_431_p1.read();
}

void gaussian::thread_p_addr7_fu_434_p2() {
    p_addr7_fu_434_p2 = (!p_addr7_fu_434_p0.read().is_01() || !tmp_4_i_trn_cast_reg_551.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr7_fu_434_p0.read()) + sc_biguint<24>(tmp_4_i_trn_cast_reg_551.read()));
}

void gaussian::thread_p_addr8_cast_fu_374_p1() {
    p_addr8_cast_fu_374_p1 = esl_sext<24,23>(p_addr8_reg_629.read());
}

void gaussian::thread_p_addr8_fu_368_p2() {
    p_addr8_fu_368_p2 = (!p_shl2_cast_fu_353_p1.read().is_01() || !p_shl3_cast_fu_364_p1.read().is_01())? sc_lv<23>(): (sc_bigint<23>(p_shl2_cast_fu_353_p1.read()) - sc_biguint<23>(p_shl3_cast_fu_364_p1.read()));
}

void gaussian::thread_p_addr9_fu_377_p0() {
    p_addr9_fu_377_p0 = esl_sext<24,23>(p_addr8_reg_629.read());
}

void gaussian::thread_p_addr9_fu_377_p2() {
    p_addr9_fu_377_p2 = (!p_addr9_fu_377_p0.read().is_01() || !tmp_4_i_trn_cast_reg_551.read().is_01())? sc_lv<24>(): (sc_bigint<24>(p_addr9_fu_377_p0.read()) + sc_biguint<24>(tmp_4_i_trn_cast_reg_551.read()));
}

void gaussian::thread_p_addr_cast_fu_281_p1() {
    p_addr_cast_fu_281_p1 = esl_sext<24,23>(p_addr_reg_546.read());
}

void gaussian::thread_p_addr_fu_271_p2() {
    p_addr_fu_271_p2 = (!p_shl_cast_fu_255_p1.read().is_01() || !p_shl1_cast_fu_267_p1.read().is_01())? sc_lv<23>(): (sc_bigint<23>(p_shl_cast_fu_255_p1.read()) - sc_biguint<23>(p_shl1_cast_fu_267_p1.read()));
}

void gaussian::thread_p_shl1_cast_fu_267_p1() {
    p_shl1_cast_fu_267_p1 = esl_zext<23,18>(tmp_1_fu_259_p3.read());
}

void gaussian::thread_p_shl2_cast_fu_353_p1() {
    p_shl2_cast_fu_353_p1 = esl_zext<23,22>(tmp_5_fu_346_p3.read());
}

void gaussian::thread_p_shl3_cast_fu_364_p1() {
    p_shl3_cast_fu_364_p1 = esl_zext<23,18>(tmp_6_fu_357_p3.read());
}

void gaussian::thread_p_shl4_cast_fu_402_p1() {
    p_shl4_cast_fu_402_p1 = esl_zext<23,22>(tmp_s_fu_395_p3.read());
}

void gaussian::thread_p_shl5_cast_fu_413_p1() {
    p_shl5_cast_fu_413_p1 = esl_zext<23,18>(tmp_10_fu_406_p3.read());
}

void gaussian::thread_p_shl_cast_fu_255_p1() {
    p_shl_cast_fu_255_p1 = esl_zext<23,22>(tmp_fu_247_p3.read());
}

void gaussian::thread_tmp6_i_fu_229_p2() {
    tmp6_i_fu_229_p2 = (!indvar_i_reg_147.read().is_01() || !ap_const_lv11_2.is_01())? sc_lv<11>(): (sc_bigint<11>(indvar_i_reg_147.read()) + sc_biguint<11>(ap_const_lv11_2));
}

void gaussian::thread_tmp_10_fu_406_p3() {
    tmp_10_fu_406_p3 = esl_concat<11,7>(tmp_i_12_reg_516.read(), ap_const_lv7_0);
}

void gaussian::thread_tmp_11_fu_468_p0() {
    tmp_11_fu_468_p0 = esl_sext<32,24>(p_addr7_reg_670.read());
}

void gaussian::thread_tmp_11_fu_468_p1() {
    tmp_11_fu_468_p1 = esl_zext<64,32>(tmp_11_fu_468_p0.read());
}

void gaussian::thread_tmp_12_fu_476_p0() {
    tmp_12_fu_476_p0 = esl_sext<32,24>(p_addr4_reg_675.read());
}

void gaussian::thread_tmp_12_fu_476_p1() {
    tmp_12_fu_476_p1 = esl_zext<64,32>(tmp_12_fu_476_p0.read());
}

void gaussian::thread_tmp_12_i_trn_cast_fu_325_p1() {
    tmp_12_i_trn_cast_fu_325_p1 = esl_zext<24,11>(tmp6_i_reg_532.read());
}

void gaussian::thread_tmp_13_fu_489_p0() {
    tmp_13_fu_489_p0 = esl_sext<32,24>(p_addr1_reg_680.read());
}

void gaussian::thread_tmp_13_fu_489_p1() {
    tmp_13_fu_489_p1 = esl_zext<64,32>(tmp_13_fu_489_p0.read());
}

void gaussian::thread_tmp_14_fu_512_p1() {
    tmp_14_fu_512_p1 = grp_fu_177_p1.read().range(16-1, 0);
}

void gaussian::thread_tmp_14_i5_fu_341_p1() {
    tmp_14_i5_fu_341_p1 = esl_zext<64,16>(reg_186.read());
}

void gaussian::thread_tmp_18_i6_fu_390_p1() {
    tmp_18_i6_fu_390_p1 = esl_zext<64,16>(reg_186.read());
}

void gaussian::thread_tmp_1_fu_259_p3() {
    tmp_1_fu_259_p3 = esl_concat<11,7>(indvar1_i_reg_135.read(), ap_const_lv7_0);
}

void gaussian::thread_tmp_22_i7_fu_481_p1() {
    tmp_22_i7_fu_481_p1 = esl_zext<64,16>(reg_186.read());
}

void gaussian::thread_tmp_26_i8_fu_494_p1() {
    tmp_26_i8_fu_494_p1 = esl_zext<64,16>(reg_190.read());
}

void gaussian::thread_tmp_2_fu_302_p0() {
    tmp_2_fu_302_p0 = esl_sext<32,24>(p_addr2_reg_562.read());
}

void gaussian::thread_tmp_2_fu_302_p1() {
    tmp_2_fu_302_p1 = esl_zext<64,32>(tmp_2_fu_302_p0.read());
}

void gaussian::thread_tmp_30_i9_fu_499_p1() {
    tmp_30_i9_fu_499_p1 = esl_zext<64,16>(reg_186.read());
}

void gaussian::thread_tmp_34_i1_fu_504_p1() {
    tmp_34_i1_fu_504_p1 = esl_zext<64,16>(in_load_7_reg_715.read());
}

void gaussian::thread_tmp_38_i1_fu_508_p1() {
    tmp_38_i1_fu_508_p1 = esl_zext<64,16>(in_load_8_reg_725.read());
}

void gaussian::thread_tmp_3_fu_310_p0() {
    tmp_3_fu_310_p0 = esl_sext<32,24>(p_addr3_reg_573.read());
}

void gaussian::thread_tmp_3_fu_310_p1() {
    tmp_3_fu_310_p1 = esl_zext<64,32>(tmp_3_fu_310_p0.read());
}

void gaussian::thread_tmp_4_fu_336_p0() {
    tmp_4_fu_336_p0 = esl_sext<32,24>(p_addr5_reg_604.read());
}

void gaussian::thread_tmp_4_fu_336_p1() {
    tmp_4_fu_336_p1 = esl_zext<64,32>(tmp_4_fu_336_p0.read());
}

void gaussian::thread_tmp_4_i_trn_cast_fu_277_p1() {
    tmp_4_i_trn_cast_fu_277_p1 = esl_zext<24,11>(indvar_i_reg_147.read());
}

void gaussian::thread_tmp_5_fu_346_p3() {
    tmp_5_fu_346_p3 = esl_concat<11,11>(i_reg_522.read(), ap_const_lv11_0);
}

void gaussian::thread_tmp_6_fu_357_p3() {
    tmp_6_fu_357_p3 = esl_concat<11,7>(i_reg_522.read(), ap_const_lv7_0);
}

void gaussian::thread_tmp_6_i3_fu_315_p1() {
    tmp_6_i3_fu_315_p1 = esl_zext<64,16>(reg_186.read());
}

void gaussian::thread_tmp_7_fu_385_p0() {
    tmp_7_fu_385_p0 = esl_sext<32,24>(p_addr9_reg_640.read());
}

void gaussian::thread_tmp_7_fu_385_p1() {
    tmp_7_fu_385_p1 = esl_zext<64,32>(tmp_7_fu_385_p0.read());
}

void gaussian::thread_tmp_8_fu_452_p0() {
    tmp_8_fu_452_p0 = esl_sext<32,24>(p_addr11_reg_660.read());
}

void gaussian::thread_tmp_8_fu_452_p1() {
    tmp_8_fu_452_p1 = esl_zext<64,32>(tmp_8_fu_452_p0.read());
}

void gaussian::thread_tmp_8_i_trn_cast_fu_290_p1() {
    tmp_8_i_trn_cast_fu_290_p1 = esl_zext<24,11>(j_reg_537.read());
}

void gaussian::thread_tmp_9_fu_460_p0() {
    tmp_9_fu_460_p0 = esl_sext<32,24>(p_addr10_reg_665.read());
}

void gaussian::thread_tmp_9_fu_460_p1() {
    tmp_9_fu_460_p1 = esl_zext<64,32>(tmp_9_fu_460_p0.read());
}

void gaussian::thread_tmp_fu_247_p3() {
    tmp_fu_247_p3 = esl_concat<11,11>(indvar1_i_reg_135.read(), ap_const_lv11_0);
}

void gaussian::thread_tmp_i_12_fu_211_p2() {
    tmp_i_12_fu_211_p2 = (!indvar1_i_reg_135.read().is_01() || !ap_const_lv11_2.is_01())? sc_lv<11>(): (sc_bigint<11>(indvar1_i_reg_135.read()) + sc_biguint<11>(ap_const_lv11_2));
}

void gaussian::thread_tmp_s_fu_395_p3() {
    tmp_s_fu_395_p3 = esl_concat<11,11>(tmp_i_12_reg_516.read(), ap_const_lv11_0);
}

void gaussian::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_223_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(exitcond1_fu_241_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 23 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 24 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
            break;
        case 25 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
            break;
        case 26 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
            break;
        case 27 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
            break;
        case 28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
            break;
        case 29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
            break;
        case 30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
            break;
        case 31 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
            break;
        case 33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
            break;
        case 34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
            break;
        case 35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
            break;
        case 36 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
            break;
        case 37 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
            break;
        case 38 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
            break;
        case 39 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
            break;
        case 40 : 
            ap_NS_fsm = ap_ST_st42_fsm_41;
            break;
        case 41 : 
            ap_NS_fsm = ap_ST_st43_fsm_42;
            break;
        case 42 : 
            ap_NS_fsm = ap_ST_st44_fsm_43;
            break;
        case 43 : 
            ap_NS_fsm = ap_ST_st45_fsm_44;
            break;
        case 44 : 
            ap_NS_fsm = ap_ST_st46_fsm_45;
            break;
        case 45 : 
            ap_NS_fsm = ap_ST_st47_fsm_46;
            break;
        case 46 : 
            ap_NS_fsm = ap_ST_st48_fsm_47;
            break;
        case 47 : 
            ap_NS_fsm = ap_ST_st49_fsm_48;
            break;
        case 48 : 
            ap_NS_fsm = ap_ST_st50_fsm_49;
            break;
        case 49 : 
            ap_NS_fsm = ap_ST_st51_fsm_50;
            break;
        case 50 : 
            ap_NS_fsm = ap_ST_st52_fsm_51;
            break;
        case 51 : 
            ap_NS_fsm = ap_ST_st53_fsm_52;
            break;
        case 52 : 
            ap_NS_fsm = ap_ST_st54_fsm_53;
            break;
        case 53 : 
            ap_NS_fsm = ap_ST_st55_fsm_54;
            break;
        case 54 : 
            ap_NS_fsm = ap_ST_st56_fsm_55;
            break;
        case 55 : 
            ap_NS_fsm = ap_ST_st57_fsm_56;
            break;
        case 56 : 
            ap_NS_fsm = ap_ST_st58_fsm_57;
            break;
        case 57 : 
            ap_NS_fsm = ap_ST_st59_fsm_58;
            break;
        case 58 : 
            ap_NS_fsm = ap_ST_st60_fsm_59;
            break;
        case 59 : 
            ap_NS_fsm = ap_ST_st61_fsm_60;
            break;
        case 60 : 
            ap_NS_fsm = ap_ST_st62_fsm_61;
            break;
        case 61 : 
            ap_NS_fsm = ap_ST_st63_fsm_62;
            break;
        case 62 : 
            ap_NS_fsm = ap_ST_st64_fsm_63;
            break;
        case 63 : 
            ap_NS_fsm = ap_ST_st65_fsm_64;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st66_fsm_65;
            break;
        case 65 : 
            ap_NS_fsm = ap_ST_st67_fsm_66;
            break;
        case 66 : 
            ap_NS_fsm = ap_ST_st68_fsm_67;
            break;
        case 67 : 
            ap_NS_fsm = ap_ST_st69_fsm_68;
            break;
        case 68 : 
            ap_NS_fsm = ap_ST_st70_fsm_69;
            break;
        case 69 : 
            ap_NS_fsm = ap_ST_st71_fsm_70;
            break;
        case 70 : 
            ap_NS_fsm = ap_ST_st72_fsm_71;
            break;
        case 71 : 
            ap_NS_fsm = ap_ST_st73_fsm_72;
            break;
        case 72 : 
            ap_NS_fsm = ap_ST_st74_fsm_73;
            break;
        case 73 : 
            ap_NS_fsm = ap_ST_st75_fsm_74;
            break;
        case 74 : 
            ap_NS_fsm = ap_ST_st76_fsm_75;
            break;
        case 75 : 
            ap_NS_fsm = ap_ST_st77_fsm_76;
            break;
        case 76 : 
            ap_NS_fsm = ap_ST_st78_fsm_77;
            break;
        case 77 : 
            ap_NS_fsm = ap_ST_st79_fsm_78;
            break;
        case 78 : 
            ap_NS_fsm = ap_ST_st80_fsm_79;
            break;
        case 79 : 
            ap_NS_fsm = ap_ST_st81_fsm_80;
            break;
        case 80 : 
            ap_NS_fsm = ap_ST_st82_fsm_81;
            break;
        case 81 : 
            ap_NS_fsm = ap_ST_st83_fsm_82;
            break;
        case 82 : 
            ap_NS_fsm = ap_ST_st84_fsm_83;
            break;
        case 83 : 
            ap_NS_fsm = ap_ST_st85_fsm_84;
            break;
        case 84 : 
            ap_NS_fsm = ap_ST_st86_fsm_85;
            break;
        case 85 : 
            ap_NS_fsm = ap_ST_st87_fsm_86;
            break;
        case 86 : 
            ap_NS_fsm = ap_ST_st88_fsm_87;
            break;
        case 87 : 
            ap_NS_fsm = ap_ST_st89_fsm_88;
            break;
        case 88 : 
            ap_NS_fsm = ap_ST_st90_fsm_89;
            break;
        case 89 : 
            ap_NS_fsm = ap_ST_st91_fsm_90;
            break;
        case 90 : 
            ap_NS_fsm = ap_ST_st92_fsm_91;
            break;
        case 91 : 
            ap_NS_fsm = ap_ST_st93_fsm_92;
            break;
        case 92 : 
            ap_NS_fsm = ap_ST_st94_fsm_93;
            break;
        case 93 : 
            ap_NS_fsm = ap_ST_st95_fsm_94;
            break;
        case 94 : 
            ap_NS_fsm = ap_ST_st96_fsm_95;
            break;
        case 95 : 
            ap_NS_fsm = ap_ST_st97_fsm_96;
            break;
        case 96 : 
            ap_NS_fsm = ap_ST_st98_fsm_97;
            break;
        case 97 : 
            ap_NS_fsm = ap_ST_st99_fsm_98;
            break;
        case 98 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}
void gaussian::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_address0\" :  \"" << in_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_ce0\" :  \"" << in_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_q0\" :  \"" << in_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_address1\" :  \"" << in_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_ce1\" :  \"" << in_r_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_q1\" :  \"" << in_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_address0\" :  \"" << out_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ce0\" :  \"" << out_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_we0\" :  \"" << out_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_d0\" :  \"" << out_r_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

