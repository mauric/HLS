-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2013.2
-- Copyright (C) 2013 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gaussian is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_r_address1 : OUT STD_LOGIC_VECTOR (20 downto 0);
    in_r_ce1 : OUT STD_LOGIC;
    in_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (20 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of gaussian is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "gaussian,hls_ip_2013_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.353000,HLS_SYN_LAT=200559745,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=2686,HLS_SYN_LUT=3210}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010001";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (6 downto 0) := "0010010";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (6 downto 0) := "0010101";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (6 downto 0) := "0010110";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (6 downto 0) := "0011000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (6 downto 0) := "0011001";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (6 downto 0) := "0011010";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (6 downto 0) := "0011011";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (6 downto 0) := "0011100";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (6 downto 0) := "0011101";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (6 downto 0) := "0011110";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (6 downto 0) := "0100001";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (6 downto 0) := "0100010";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (6 downto 0) := "0100100";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (6 downto 0) := "0100101";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (6 downto 0) := "0100110";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (6 downto 0) := "0100111";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (6 downto 0) := "0101000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (6 downto 0) := "0101001";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (6 downto 0) := "0101010";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (6 downto 0) := "0101011";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (6 downto 0) := "0101100";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (6 downto 0) := "0101101";
    constant ap_ST_st47_fsm_46 : STD_LOGIC_VECTOR (6 downto 0) := "0101110";
    constant ap_ST_st48_fsm_47 : STD_LOGIC_VECTOR (6 downto 0) := "0101111";
    constant ap_ST_st49_fsm_48 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_ST_st50_fsm_49 : STD_LOGIC_VECTOR (6 downto 0) := "0110001";
    constant ap_ST_st51_fsm_50 : STD_LOGIC_VECTOR (6 downto 0) := "0110010";
    constant ap_ST_st52_fsm_51 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_ST_st53_fsm_52 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_ST_st54_fsm_53 : STD_LOGIC_VECTOR (6 downto 0) := "0110101";
    constant ap_ST_st55_fsm_54 : STD_LOGIC_VECTOR (6 downto 0) := "0110110";
    constant ap_ST_st56_fsm_55 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_ST_st57_fsm_56 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_ST_st58_fsm_57 : STD_LOGIC_VECTOR (6 downto 0) := "0111001";
    constant ap_ST_st59_fsm_58 : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_ST_st60_fsm_59 : STD_LOGIC_VECTOR (6 downto 0) := "0111011";
    constant ap_ST_st61_fsm_60 : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_ST_st62_fsm_61 : STD_LOGIC_VECTOR (6 downto 0) := "0111101";
    constant ap_ST_st63_fsm_62 : STD_LOGIC_VECTOR (6 downto 0) := "0111110";
    constant ap_ST_st64_fsm_63 : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_ST_st65_fsm_64 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_ST_st66_fsm_65 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_ST_st67_fsm_66 : STD_LOGIC_VECTOR (6 downto 0) := "1000010";
    constant ap_ST_st68_fsm_67 : STD_LOGIC_VECTOR (6 downto 0) := "1000011";
    constant ap_ST_st69_fsm_68 : STD_LOGIC_VECTOR (6 downto 0) := "1000100";
    constant ap_ST_st70_fsm_69 : STD_LOGIC_VECTOR (6 downto 0) := "1000101";
    constant ap_ST_st71_fsm_70 : STD_LOGIC_VECTOR (6 downto 0) := "1000110";
    constant ap_ST_st72_fsm_71 : STD_LOGIC_VECTOR (6 downto 0) := "1000111";
    constant ap_ST_st73_fsm_72 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_ST_st74_fsm_73 : STD_LOGIC_VECTOR (6 downto 0) := "1001001";
    constant ap_ST_st75_fsm_74 : STD_LOGIC_VECTOR (6 downto 0) := "1001010";
    constant ap_ST_st76_fsm_75 : STD_LOGIC_VECTOR (6 downto 0) := "1001011";
    constant ap_ST_st77_fsm_76 : STD_LOGIC_VECTOR (6 downto 0) := "1001100";
    constant ap_ST_st78_fsm_77 : STD_LOGIC_VECTOR (6 downto 0) := "1001101";
    constant ap_ST_st79_fsm_78 : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_ST_st80_fsm_79 : STD_LOGIC_VECTOR (6 downto 0) := "1001111";
    constant ap_ST_st81_fsm_80 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_ST_st82_fsm_81 : STD_LOGIC_VECTOR (6 downto 0) := "1010001";
    constant ap_ST_st83_fsm_82 : STD_LOGIC_VECTOR (6 downto 0) := "1010010";
    constant ap_ST_st84_fsm_83 : STD_LOGIC_VECTOR (6 downto 0) := "1010011";
    constant ap_ST_st85_fsm_84 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_ST_st86_fsm_85 : STD_LOGIC_VECTOR (6 downto 0) := "1010101";
    constant ap_ST_st87_fsm_86 : STD_LOGIC_VECTOR (6 downto 0) := "1010110";
    constant ap_ST_st88_fsm_87 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_ST_st89_fsm_88 : STD_LOGIC_VECTOR (6 downto 0) := "1011000";
    constant ap_ST_st90_fsm_89 : STD_LOGIC_VECTOR (6 downto 0) := "1011001";
    constant ap_ST_st91_fsm_90 : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_ST_st92_fsm_91 : STD_LOGIC_VECTOR (6 downto 0) := "1011011";
    constant ap_ST_st93_fsm_92 : STD_LOGIC_VECTOR (6 downto 0) := "1011100";
    constant ap_ST_st94_fsm_93 : STD_LOGIC_VECTOR (6 downto 0) := "1011101";
    constant ap_ST_st95_fsm_94 : STD_LOGIC_VECTOR (6 downto 0) := "1011110";
    constant ap_ST_st96_fsm_95 : STD_LOGIC_VECTOR (6 downto 0) := "1011111";
    constant ap_ST_st97_fsm_96 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_ST_st98_fsm_97 : STD_LOGIC_VECTOR (6 downto 0) := "1100001";
    constant ap_ST_st99_fsm_98 : STD_LOGIC_VECTOR (6 downto 0) := "1100010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_3D7929ED : STD_LOGIC_VECTOR (31 downto 0) := "00111101011110010010100111101101";
    constant ap_const_lv32_3E193AF7 : STD_LOGIC_VECTOR (31 downto 0) := "00111110000110010011101011110111";
    constant ap_const_lv32_3EBC7736 : STD_LOGIC_VECTOR (31 downto 0) := "00111110101111000111011100110110";
    constant ap_const_lv32_3E19389B : STD_LOGIC_VECTOR (31 downto 0) := "00111110000110010011100010011011";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_436 : STD_LOGIC_VECTOR (10 downto 0) := "10000110110";
    constant ap_const_lv11_77E : STD_LOGIC_VECTOR (10 downto 0) := "11101111110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal reg_186 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_190 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_180_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_164_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_199 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_160_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_205 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_12_fu_211_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i_12_reg_516 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_fu_217_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_reg_522 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp6_i_fu_229_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp6_i_reg_532 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_fu_235_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_reg_537 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_addr_fu_271_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr_reg_546 : STD_LOGIC_VECTOR (22 downto 0);
    signal exitcond1_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_trn_cast_fu_277_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4_i_trn_cast_reg_551 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr_cast_fu_281_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr_reg_546_temp: signed (23-1 downto 0);
    signal p_addr_cast_reg_557 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr2_fu_284_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr2_reg_562 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_i_trn_cast_fu_290_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_i_trn_cast_reg_567 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr3_fu_293_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr3_reg_573 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_i3_fu_315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_i_trn_cast_fu_325_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_12_i_trn_cast_reg_598 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr5_fu_328_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr5_reg_604 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_reg_614 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_i5_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_169_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_reg_624 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr8_fu_368_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr8_reg_629 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr8_cast_fu_374_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr8_reg_629_temp: signed (23-1 downto 0);
    signal p_addr8_cast_reg_634 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr9_fu_377_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr9_reg_640 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_18_i6_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_addr6_fu_417_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr6_reg_655 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr11_fu_423_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr11_reg_660 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr10_fu_427_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr10_reg_665 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr7_fu_434_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr7_reg_670 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr4_fu_439_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr4_reg_675 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr1_fu_444_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr1_reg_680 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_fu_452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_reg_685 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_i7_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in_load_7_reg_715 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_load_8_reg_725 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_i8_fu_494_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_i9_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_i1_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_i1_fu_508_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_512_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_750 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar1_i_reg_135 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_i_reg_147 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_302_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_310_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_385_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_460_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_476_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_160_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_160_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_164_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_164_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_169_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_169_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_177_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_180_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_183_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_247_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_1_fu_259_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl_cast_fu_255_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl1_cast_fu_267_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr2_fu_284_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr3_fu_293_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_2_fu_302_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr2_reg_562_temp: signed (24-1 downto 0);
    signal tmp_3_fu_310_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr3_reg_573_temp: signed (24-1 downto 0);
    signal tmp_4_fu_336_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr5_reg_604_temp: signed (24-1 downto 0);
    signal tmp_5_fu_346_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_6_fu_357_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl2_cast_fu_353_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl3_cast_fu_364_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr9_fu_377_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_7_fu_385_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr9_reg_640_temp: signed (24-1 downto 0);
    signal tmp_s_fu_395_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_10_fu_406_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl4_cast_fu_402_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_shl5_cast_fu_413_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_addr7_fu_434_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr6_cast_fu_431_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr6_reg_655_temp: signed (23-1 downto 0);
    signal p_addr4_fu_439_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_addr1_fu_444_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_8_fu_452_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr11_reg_660_temp: signed (24-1 downto 0);
    signal tmp_9_fu_460_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr10_reg_665_temp: signed (24-1 downto 0);
    signal tmp_11_fu_468_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr7_reg_670_temp: signed (24-1 downto 0);
    signal tmp_12_fu_476_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr4_reg_675_temp: signed (24-1 downto 0);
    signal tmp_13_fu_489_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_addr1_reg_680_temp: signed (24-1 downto 0);
    signal grp_fu_177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_160_ce : STD_LOGIC;
    signal grp_fu_164_ce : STD_LOGIC;
    signal grp_fu_169_ce : STD_LOGIC;
    signal grp_fu_177_ce : STD_LOGIC;
    signal grp_fu_180_ce : STD_LOGIC;
    signal grp_fu_183_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);

    component gaussian_fadd_32ns_32ns_32_9_full_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gaussian_fmul_32ns_32ns_32_5_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gaussian_fptoui_32ns_64_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component gaussian_sitofp_64ns_32_9 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    gaussian_fadd_32ns_32ns_32_9_full_dsp_U1 : component gaussian_fadd_32ns_32ns_32_9_full_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 9,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_160_p0,
        din1 => grp_fu_160_p1,
        ce => grp_fu_160_ce,
        dout => grp_fu_160_p2);

    gaussian_fmul_32ns_32ns_32_5_max_dsp_U2 : component gaussian_fmul_32ns_32ns_32_5_max_dsp
    generic map (
        ID => 2,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_164_p0,
        din1 => grp_fu_164_p1,
        ce => grp_fu_164_ce,
        dout => grp_fu_164_p2);

    gaussian_fmul_32ns_32ns_32_5_max_dsp_U3 : component gaussian_fmul_32ns_32ns_32_5_max_dsp
    generic map (
        ID => 3,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_169_p0,
        din1 => grp_fu_169_p1,
        ce => grp_fu_169_ce,
        dout => grp_fu_169_p2);

    gaussian_fptoui_32ns_64_6_U4 : component gaussian_fptoui_32ns_64_6
    generic map (
        ID => 4,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_177_p0,
        ce => grp_fu_177_ce,
        dout => grp_fu_177_p1);

    gaussian_sitofp_64ns_32_9_U5 : component gaussian_sitofp_64ns_32_9
    generic map (
        ID => 5,
        NUM_STAGE => 9,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_180_p0,
        ce => grp_fu_180_ce,
        dout => grp_fu_180_p1);

    gaussian_sitofp_64ns_32_9_U6 : component gaussian_sitofp_64ns_32_9
    generic map (
        ID => 6,
        NUM_STAGE => 9,
        din0_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_183_p0,
        ce => grp_fu_183_ce,
        dout => grp_fu_183_p1);




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- indvar1_i_reg_135 assign process. --
    indvar1_i_reg_135_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) and not((exitcond1_fu_241_p2 = ap_const_lv1_0)))) then 
                indvar1_i_reg_135 <= i_reg_522;
            elsif (((ap_ST_st1_fsm_0 = ap_CS_fsm) and not((ap_start = ap_const_logic_0)))) then 
                indvar1_i_reg_135 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    -- indvar_i_reg_147 assign process. --
    indvar_i_reg_147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_fu_223_p2))) then 
                indvar_i_reg_147 <= ap_const_lv11_0;
            elsif ((ap_ST_st99_fsm_98 = ap_CS_fsm)) then 
                indvar_i_reg_147 <= j_reg_537;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then
                i_reg_522 <= i_fu_217_p2;
                tmp_i_12_reg_516 <= tmp_i_12_fu_211_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st34_fsm_33 = ap_CS_fsm)) then
                in_load_7_reg_715 <= in_r_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st35_fsm_34 = ap_CS_fsm)) then
                in_load_8_reg_725 <= in_r_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st3_fsm_2 = ap_CS_fsm)) then
                j_reg_537 <= j_fu_235_p2;
                tmp6_i_reg_532 <= tmp6_i_fu_229_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st31_fsm_30 = ap_CS_fsm)) then
                p_addr10_reg_665 <= p_addr10_fu_427_p2;
                p_addr11_reg_660 <= p_addr11_fu_423_p2;
                p_addr1_reg_680 <= p_addr1_fu_444_p2;
                p_addr4_reg_675 <= p_addr4_fu_439_p2;
                p_addr7_reg_670 <= p_addr7_fu_434_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then
                p_addr2_reg_562 <= p_addr2_fu_284_p2;
                p_addr3_reg_573 <= p_addr3_fu_293_p2;
                p_addr_cast_reg_557(7) <= p_addr_cast_fu_281_p1(7);
    p_addr_cast_reg_557(8) <= p_addr_cast_fu_281_p1(8);
    p_addr_cast_reg_557(9) <= p_addr_cast_fu_281_p1(9);
    p_addr_cast_reg_557(10) <= p_addr_cast_fu_281_p1(10);
    p_addr_cast_reg_557(11) <= p_addr_cast_fu_281_p1(11);
    p_addr_cast_reg_557(12) <= p_addr_cast_fu_281_p1(12);
    p_addr_cast_reg_557(13) <= p_addr_cast_fu_281_p1(13);
    p_addr_cast_reg_557(14) <= p_addr_cast_fu_281_p1(14);
    p_addr_cast_reg_557(15) <= p_addr_cast_fu_281_p1(15);
    p_addr_cast_reg_557(16) <= p_addr_cast_fu_281_p1(16);
    p_addr_cast_reg_557(17) <= p_addr_cast_fu_281_p1(17);
    p_addr_cast_reg_557(18) <= p_addr_cast_fu_281_p1(18);
    p_addr_cast_reg_557(19) <= p_addr_cast_fu_281_p1(19);
    p_addr_cast_reg_557(20) <= p_addr_cast_fu_281_p1(20);
    p_addr_cast_reg_557(21) <= p_addr_cast_fu_281_p1(21);
    p_addr_cast_reg_557(22) <= p_addr_cast_fu_281_p1(22);
    p_addr_cast_reg_557(23) <= p_addr_cast_fu_281_p1(23);
                tmp_4_i_trn_cast_reg_551(0) <= tmp_4_i_trn_cast_fu_277_p1(0);
    tmp_4_i_trn_cast_reg_551(1) <= tmp_4_i_trn_cast_fu_277_p1(1);
    tmp_4_i_trn_cast_reg_551(2) <= tmp_4_i_trn_cast_fu_277_p1(2);
    tmp_4_i_trn_cast_reg_551(3) <= tmp_4_i_trn_cast_fu_277_p1(3);
    tmp_4_i_trn_cast_reg_551(4) <= tmp_4_i_trn_cast_fu_277_p1(4);
    tmp_4_i_trn_cast_reg_551(5) <= tmp_4_i_trn_cast_fu_277_p1(5);
    tmp_4_i_trn_cast_reg_551(6) <= tmp_4_i_trn_cast_fu_277_p1(6);
    tmp_4_i_trn_cast_reg_551(7) <= tmp_4_i_trn_cast_fu_277_p1(7);
    tmp_4_i_trn_cast_reg_551(8) <= tmp_4_i_trn_cast_fu_277_p1(8);
    tmp_4_i_trn_cast_reg_551(9) <= tmp_4_i_trn_cast_fu_277_p1(9);
    tmp_4_i_trn_cast_reg_551(10) <= tmp_4_i_trn_cast_fu_277_p1(10);
                tmp_8_i_trn_cast_reg_567(0) <= tmp_8_i_trn_cast_fu_290_p1(0);
    tmp_8_i_trn_cast_reg_567(1) <= tmp_8_i_trn_cast_fu_290_p1(1);
    tmp_8_i_trn_cast_reg_567(2) <= tmp_8_i_trn_cast_fu_290_p1(2);
    tmp_8_i_trn_cast_reg_567(3) <= tmp_8_i_trn_cast_fu_290_p1(3);
    tmp_8_i_trn_cast_reg_567(4) <= tmp_8_i_trn_cast_fu_290_p1(4);
    tmp_8_i_trn_cast_reg_567(5) <= tmp_8_i_trn_cast_fu_290_p1(5);
    tmp_8_i_trn_cast_reg_567(6) <= tmp_8_i_trn_cast_fu_290_p1(6);
    tmp_8_i_trn_cast_reg_567(7) <= tmp_8_i_trn_cast_fu_290_p1(7);
    tmp_8_i_trn_cast_reg_567(8) <= tmp_8_i_trn_cast_fu_290_p1(8);
    tmp_8_i_trn_cast_reg_567(9) <= tmp_8_i_trn_cast_fu_290_p1(9);
    tmp_8_i_trn_cast_reg_567(10) <= tmp_8_i_trn_cast_fu_290_p1(10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then
                p_addr5_reg_604 <= p_addr5_fu_328_p2;
                tmp_12_i_trn_cast_reg_598(0) <= tmp_12_i_trn_cast_fu_325_p1(0);
    tmp_12_i_trn_cast_reg_598(1) <= tmp_12_i_trn_cast_fu_325_p1(1);
    tmp_12_i_trn_cast_reg_598(2) <= tmp_12_i_trn_cast_fu_325_p1(2);
    tmp_12_i_trn_cast_reg_598(3) <= tmp_12_i_trn_cast_fu_325_p1(3);
    tmp_12_i_trn_cast_reg_598(4) <= tmp_12_i_trn_cast_fu_325_p1(4);
    tmp_12_i_trn_cast_reg_598(5) <= tmp_12_i_trn_cast_fu_325_p1(5);
    tmp_12_i_trn_cast_reg_598(6) <= tmp_12_i_trn_cast_fu_325_p1(6);
    tmp_12_i_trn_cast_reg_598(7) <= tmp_12_i_trn_cast_fu_325_p1(7);
    tmp_12_i_trn_cast_reg_598(8) <= tmp_12_i_trn_cast_fu_325_p1(8);
    tmp_12_i_trn_cast_reg_598(9) <= tmp_12_i_trn_cast_fu_325_p1(9);
    tmp_12_i_trn_cast_reg_598(10) <= tmp_12_i_trn_cast_fu_325_p1(10);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st30_fsm_29 = ap_CS_fsm)) then
                p_addr6_reg_655(7) <= p_addr6_fu_417_p2(7);
    p_addr6_reg_655(8) <= p_addr6_fu_417_p2(8);
    p_addr6_reg_655(9) <= p_addr6_fu_417_p2(9);
    p_addr6_reg_655(10) <= p_addr6_fu_417_p2(10);
    p_addr6_reg_655(11) <= p_addr6_fu_417_p2(11);
    p_addr6_reg_655(12) <= p_addr6_fu_417_p2(12);
    p_addr6_reg_655(13) <= p_addr6_fu_417_p2(13);
    p_addr6_reg_655(14) <= p_addr6_fu_417_p2(14);
    p_addr6_reg_655(15) <= p_addr6_fu_417_p2(15);
    p_addr6_reg_655(16) <= p_addr6_fu_417_p2(16);
    p_addr6_reg_655(17) <= p_addr6_fu_417_p2(17);
    p_addr6_reg_655(18) <= p_addr6_fu_417_p2(18);
    p_addr6_reg_655(19) <= p_addr6_fu_417_p2(19);
    p_addr6_reg_655(20) <= p_addr6_fu_417_p2(20);
    p_addr6_reg_655(21) <= p_addr6_fu_417_p2(21);
    p_addr6_reg_655(22) <= p_addr6_fu_417_p2(22);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st22_fsm_21 = ap_CS_fsm)) then
                p_addr8_cast_reg_634(7) <= p_addr8_cast_fu_374_p1(7);
    p_addr8_cast_reg_634(8) <= p_addr8_cast_fu_374_p1(8);
    p_addr8_cast_reg_634(9) <= p_addr8_cast_fu_374_p1(9);
    p_addr8_cast_reg_634(10) <= p_addr8_cast_fu_374_p1(10);
    p_addr8_cast_reg_634(11) <= p_addr8_cast_fu_374_p1(11);
    p_addr8_cast_reg_634(12) <= p_addr8_cast_fu_374_p1(12);
    p_addr8_cast_reg_634(13) <= p_addr8_cast_fu_374_p1(13);
    p_addr8_cast_reg_634(14) <= p_addr8_cast_fu_374_p1(14);
    p_addr8_cast_reg_634(15) <= p_addr8_cast_fu_374_p1(15);
    p_addr8_cast_reg_634(16) <= p_addr8_cast_fu_374_p1(16);
    p_addr8_cast_reg_634(17) <= p_addr8_cast_fu_374_p1(17);
    p_addr8_cast_reg_634(18) <= p_addr8_cast_fu_374_p1(18);
    p_addr8_cast_reg_634(19) <= p_addr8_cast_fu_374_p1(19);
    p_addr8_cast_reg_634(20) <= p_addr8_cast_fu_374_p1(20);
    p_addr8_cast_reg_634(21) <= p_addr8_cast_fu_374_p1(21);
    p_addr8_cast_reg_634(22) <= p_addr8_cast_fu_374_p1(22);
    p_addr8_cast_reg_634(23) <= p_addr8_cast_fu_374_p1(23);
                p_addr9_reg_640 <= p_addr9_fu_377_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then
                p_addr8_reg_629(7) <= p_addr8_fu_368_p2(7);
    p_addr8_reg_629(8) <= p_addr8_fu_368_p2(8);
    p_addr8_reg_629(9) <= p_addr8_fu_368_p2(9);
    p_addr8_reg_629(10) <= p_addr8_fu_368_p2(10);
    p_addr8_reg_629(11) <= p_addr8_fu_368_p2(11);
    p_addr8_reg_629(12) <= p_addr8_fu_368_p2(12);
    p_addr8_reg_629(13) <= p_addr8_fu_368_p2(13);
    p_addr8_reg_629(14) <= p_addr8_fu_368_p2(14);
    p_addr8_reg_629(15) <= p_addr8_fu_368_p2(15);
    p_addr8_reg_629(16) <= p_addr8_fu_368_p2(16);
    p_addr8_reg_629(17) <= p_addr8_fu_368_p2(17);
    p_addr8_reg_629(18) <= p_addr8_fu_368_p2(18);
    p_addr8_reg_629(19) <= p_addr8_fu_368_p2(19);
    p_addr8_reg_629(20) <= p_addr8_fu_368_p2(20);
    p_addr8_reg_629(21) <= p_addr8_fu_368_p2(21);
    p_addr8_reg_629(22) <= p_addr8_fu_368_p2(22);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st3_fsm_2 = ap_CS_fsm) and (exitcond1_fu_241_p2 = ap_const_lv1_0))) then
                p_addr_reg_546(7) <= p_addr_fu_271_p2(7);
    p_addr_reg_546(8) <= p_addr_fu_271_p2(8);
    p_addr_reg_546(9) <= p_addr_fu_271_p2(9);
    p_addr_reg_546(10) <= p_addr_fu_271_p2(10);
    p_addr_reg_546(11) <= p_addr_fu_271_p2(11);
    p_addr_reg_546(12) <= p_addr_fu_271_p2(12);
    p_addr_reg_546(13) <= p_addr_fu_271_p2(13);
    p_addr_reg_546(14) <= p_addr_fu_271_p2(14);
    p_addr_reg_546(15) <= p_addr_fu_271_p2(15);
    p_addr_reg_546(16) <= p_addr_fu_271_p2(16);
    p_addr_reg_546(17) <= p_addr_fu_271_p2(17);
    p_addr_reg_546(18) <= p_addr_fu_271_p2(18);
    p_addr_reg_546(19) <= p_addr_fu_271_p2(19);
    p_addr_reg_546(20) <= p_addr_fu_271_p2(20);
    p_addr_reg_546(21) <= p_addr_fu_271_p2(21);
    p_addr_reg_546(22) <= p_addr_fu_271_p2(22);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st24_fsm_23 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm))) then
                reg_186 <= in_r_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm))) then
                reg_190 <= in_r_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st15_fsm_14 = ap_CS_fsm) or (ap_ST_st24_fsm_23 = ap_CS_fsm) or (ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st42_fsm_41 = ap_CS_fsm) or (ap_ST_st51_fsm_50 = ap_CS_fsm) or (ap_ST_st60_fsm_59 = ap_CS_fsm) or (ap_ST_st69_fsm_68 = ap_CS_fsm) or (ap_ST_st78_fsm_77 = ap_CS_fsm))) then
                reg_194 <= grp_fu_180_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st20_fsm_19 = ap_CS_fsm) or (ap_ST_st29_fsm_28 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st47_fsm_46 = ap_CS_fsm) or (ap_ST_st56_fsm_55 = ap_CS_fsm) or (ap_ST_st65_fsm_64 = ap_CS_fsm) or (ap_ST_st74_fsm_73 = ap_CS_fsm) or (ap_ST_st83_fsm_82 = ap_CS_fsm))) then
                reg_199 <= grp_fu_164_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_ST_st29_fsm_28 = ap_CS_fsm) or (ap_ST_st38_fsm_37 = ap_CS_fsm) or (ap_ST_st47_fsm_46 = ap_CS_fsm) or (ap_ST_st56_fsm_55 = ap_CS_fsm) or (ap_ST_st65_fsm_64 = ap_CS_fsm) or (ap_ST_st74_fsm_73 = ap_CS_fsm) or (ap_ST_st83_fsm_82 = ap_CS_fsm) or (ap_ST_st92_fsm_91 = ap_CS_fsm))) then
                reg_205 <= grp_fu_160_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st20_fsm_19 = ap_CS_fsm)) then
                tmp_10_i_reg_624 <= grp_fu_169_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st98_fsm_97 = ap_CS_fsm)) then
                tmp_14_reg_750 <= tmp_14_fu_512_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st32_fsm_31 = ap_CS_fsm)) then
                tmp_8_reg_685(0) <= tmp_8_fu_452_p1(0);
    tmp_8_reg_685(1) <= tmp_8_fu_452_p1(1);
    tmp_8_reg_685(2) <= tmp_8_fu_452_p1(2);
    tmp_8_reg_685(3) <= tmp_8_fu_452_p1(3);
    tmp_8_reg_685(4) <= tmp_8_fu_452_p1(4);
    tmp_8_reg_685(5) <= tmp_8_fu_452_p1(5);
    tmp_8_reg_685(6) <= tmp_8_fu_452_p1(6);
    tmp_8_reg_685(7) <= tmp_8_fu_452_p1(7);
    tmp_8_reg_685(8) <= tmp_8_fu_452_p1(8);
    tmp_8_reg_685(9) <= tmp_8_fu_452_p1(9);
    tmp_8_reg_685(10) <= tmp_8_fu_452_p1(10);
    tmp_8_reg_685(11) <= tmp_8_fu_452_p1(11);
    tmp_8_reg_685(12) <= tmp_8_fu_452_p1(12);
    tmp_8_reg_685(13) <= tmp_8_fu_452_p1(13);
    tmp_8_reg_685(14) <= tmp_8_fu_452_p1(14);
    tmp_8_reg_685(15) <= tmp_8_fu_452_p1(15);
    tmp_8_reg_685(16) <= tmp_8_fu_452_p1(16);
    tmp_8_reg_685(17) <= tmp_8_fu_452_p1(17);
    tmp_8_reg_685(18) <= tmp_8_fu_452_p1(18);
    tmp_8_reg_685(19) <= tmp_8_fu_452_p1(19);
    tmp_8_reg_685(20) <= tmp_8_fu_452_p1(20);
    tmp_8_reg_685(21) <= tmp_8_fu_452_p1(21);
    tmp_8_reg_685(22) <= tmp_8_fu_452_p1(22);
    tmp_8_reg_685(23) <= tmp_8_fu_452_p1(23);
    tmp_8_reg_685(24) <= tmp_8_fu_452_p1(24);
    tmp_8_reg_685(25) <= tmp_8_fu_452_p1(25);
    tmp_8_reg_685(26) <= tmp_8_fu_452_p1(26);
    tmp_8_reg_685(27) <= tmp_8_fu_452_p1(27);
    tmp_8_reg_685(28) <= tmp_8_fu_452_p1(28);
    tmp_8_reg_685(29) <= tmp_8_fu_452_p1(29);
    tmp_8_reg_685(30) <= tmp_8_fu_452_p1(30);
    tmp_8_reg_685(31) <= tmp_8_fu_452_p1(31);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then
                tmp_i_reg_614 <= grp_fu_183_p1;
            end if;
        end if;
    end process;
    p_addr_reg_546(6 downto 0) <= "0000000";
    tmp_4_i_trn_cast_reg_551(23 downto 11) <= "0000000000000";
    p_addr_cast_reg_557(6 downto 0) <= "0000000";
    tmp_8_i_trn_cast_reg_567(23 downto 11) <= "0000000000000";
    tmp_12_i_trn_cast_reg_598(23 downto 11) <= "0000000000000";
    p_addr8_reg_629(6 downto 0) <= "0000000";
    p_addr8_cast_reg_634(6 downto 0) <= "0000000";
    p_addr6_reg_655(6 downto 0) <= "0000000";
    tmp_8_reg_685(63 downto 32) <= "00000000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start , ap_CS_fsm , exitcond1_fu_241_p2 , exitcond_fu_223_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond_fu_223_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((exitcond1_fu_241_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                ap_NS_fsm <= ap_ST_st20_fsm_19;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                ap_NS_fsm <= ap_ST_st22_fsm_21;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                ap_NS_fsm <= ap_ST_st24_fsm_23;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                ap_NS_fsm <= ap_ST_st33_fsm_32;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                ap_NS_fsm <= ap_ST_st35_fsm_34;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                ap_NS_fsm <= ap_ST_st37_fsm_36;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                ap_NS_fsm <= ap_ST_st39_fsm_38;
            when ap_ST_st39_fsm_38 => 
                ap_NS_fsm <= ap_ST_st40_fsm_39;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                ap_NS_fsm <= ap_ST_st42_fsm_41;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                ap_NS_fsm <= ap_ST_st44_fsm_43;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st45_fsm_44;
            when ap_ST_st45_fsm_44 => 
                ap_NS_fsm <= ap_ST_st46_fsm_45;
            when ap_ST_st46_fsm_45 => 
                ap_NS_fsm <= ap_ST_st47_fsm_46;
            when ap_ST_st47_fsm_46 => 
                ap_NS_fsm <= ap_ST_st48_fsm_47;
            when ap_ST_st48_fsm_47 => 
                ap_NS_fsm <= ap_ST_st49_fsm_48;
            when ap_ST_st49_fsm_48 => 
                ap_NS_fsm <= ap_ST_st50_fsm_49;
            when ap_ST_st50_fsm_49 => 
                ap_NS_fsm <= ap_ST_st51_fsm_50;
            when ap_ST_st51_fsm_50 => 
                ap_NS_fsm <= ap_ST_st52_fsm_51;
            when ap_ST_st52_fsm_51 => 
                ap_NS_fsm <= ap_ST_st53_fsm_52;
            when ap_ST_st53_fsm_52 => 
                ap_NS_fsm <= ap_ST_st54_fsm_53;
            when ap_ST_st54_fsm_53 => 
                ap_NS_fsm <= ap_ST_st55_fsm_54;
            when ap_ST_st55_fsm_54 => 
                ap_NS_fsm <= ap_ST_st56_fsm_55;
            when ap_ST_st56_fsm_55 => 
                ap_NS_fsm <= ap_ST_st57_fsm_56;
            when ap_ST_st57_fsm_56 => 
                ap_NS_fsm <= ap_ST_st58_fsm_57;
            when ap_ST_st58_fsm_57 => 
                ap_NS_fsm <= ap_ST_st59_fsm_58;
            when ap_ST_st59_fsm_58 => 
                ap_NS_fsm <= ap_ST_st60_fsm_59;
            when ap_ST_st60_fsm_59 => 
                ap_NS_fsm <= ap_ST_st61_fsm_60;
            when ap_ST_st61_fsm_60 => 
                ap_NS_fsm <= ap_ST_st62_fsm_61;
            when ap_ST_st62_fsm_61 => 
                ap_NS_fsm <= ap_ST_st63_fsm_62;
            when ap_ST_st63_fsm_62 => 
                ap_NS_fsm <= ap_ST_st64_fsm_63;
            when ap_ST_st64_fsm_63 => 
                ap_NS_fsm <= ap_ST_st65_fsm_64;
            when ap_ST_st65_fsm_64 => 
                ap_NS_fsm <= ap_ST_st66_fsm_65;
            when ap_ST_st66_fsm_65 => 
                ap_NS_fsm <= ap_ST_st67_fsm_66;
            when ap_ST_st67_fsm_66 => 
                ap_NS_fsm <= ap_ST_st68_fsm_67;
            when ap_ST_st68_fsm_67 => 
                ap_NS_fsm <= ap_ST_st69_fsm_68;
            when ap_ST_st69_fsm_68 => 
                ap_NS_fsm <= ap_ST_st70_fsm_69;
            when ap_ST_st70_fsm_69 => 
                ap_NS_fsm <= ap_ST_st71_fsm_70;
            when ap_ST_st71_fsm_70 => 
                ap_NS_fsm <= ap_ST_st72_fsm_71;
            when ap_ST_st72_fsm_71 => 
                ap_NS_fsm <= ap_ST_st73_fsm_72;
            when ap_ST_st73_fsm_72 => 
                ap_NS_fsm <= ap_ST_st74_fsm_73;
            when ap_ST_st74_fsm_73 => 
                ap_NS_fsm <= ap_ST_st75_fsm_74;
            when ap_ST_st75_fsm_74 => 
                ap_NS_fsm <= ap_ST_st76_fsm_75;
            when ap_ST_st76_fsm_75 => 
                ap_NS_fsm <= ap_ST_st77_fsm_76;
            when ap_ST_st77_fsm_76 => 
                ap_NS_fsm <= ap_ST_st78_fsm_77;
            when ap_ST_st78_fsm_77 => 
                ap_NS_fsm <= ap_ST_st79_fsm_78;
            when ap_ST_st79_fsm_78 => 
                ap_NS_fsm <= ap_ST_st80_fsm_79;
            when ap_ST_st80_fsm_79 => 
                ap_NS_fsm <= ap_ST_st81_fsm_80;
            when ap_ST_st81_fsm_80 => 
                ap_NS_fsm <= ap_ST_st82_fsm_81;
            when ap_ST_st82_fsm_81 => 
                ap_NS_fsm <= ap_ST_st83_fsm_82;
            when ap_ST_st83_fsm_82 => 
                ap_NS_fsm <= ap_ST_st84_fsm_83;
            when ap_ST_st84_fsm_83 => 
                ap_NS_fsm <= ap_ST_st85_fsm_84;
            when ap_ST_st85_fsm_84 => 
                ap_NS_fsm <= ap_ST_st86_fsm_85;
            when ap_ST_st86_fsm_85 => 
                ap_NS_fsm <= ap_ST_st87_fsm_86;
            when ap_ST_st87_fsm_86 => 
                ap_NS_fsm <= ap_ST_st88_fsm_87;
            when ap_ST_st88_fsm_87 => 
                ap_NS_fsm <= ap_ST_st89_fsm_88;
            when ap_ST_st89_fsm_88 => 
                ap_NS_fsm <= ap_ST_st90_fsm_89;
            when ap_ST_st90_fsm_89 => 
                ap_NS_fsm <= ap_ST_st91_fsm_90;
            when ap_ST_st91_fsm_90 => 
                ap_NS_fsm <= ap_ST_st92_fsm_91;
            when ap_ST_st92_fsm_91 => 
                ap_NS_fsm <= ap_ST_st93_fsm_92;
            when ap_ST_st93_fsm_92 => 
                ap_NS_fsm <= ap_ST_st94_fsm_93;
            when ap_ST_st94_fsm_93 => 
                ap_NS_fsm <= ap_ST_st95_fsm_94;
            when ap_ST_st95_fsm_94 => 
                ap_NS_fsm <= ap_ST_st96_fsm_95;
            when ap_ST_st96_fsm_95 => 
                ap_NS_fsm <= ap_ST_st97_fsm_96;
            when ap_ST_st97_fsm_96 => 
                ap_NS_fsm <= ap_ST_st98_fsm_97;
            when ap_ST_st98_fsm_97 => 
                ap_NS_fsm <= ap_ST_st99_fsm_98;
            when ap_ST_st99_fsm_98 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_CS_fsm, exitcond_fu_223_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_223_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_CS_fsm)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_ST_st1_fsm_0 = ap_CS_fsm))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_CS_fsm, exitcond_fu_223_p2)
    begin
        if (((ap_ST_st2_fsm_1 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_223_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_241_p2 <= "1" when (indvar_i_reg_147 = ap_const_lv11_77E) else "0";
    exitcond_fu_223_p2 <= "1" when (indvar1_i_reg_135 = ap_const_lv11_436) else "0";
    grp_fu_160_ce <= ap_const_logic_1;

    -- grp_fu_160_p0 assign process. --
    grp_fu_160_p0_assign_proc : process(ap_CS_fsm, reg_199, reg_205)
    begin
        if (((ap_ST_st30_fsm_29 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st48_fsm_47 = ap_CS_fsm) or (ap_ST_st57_fsm_56 = ap_CS_fsm) or (ap_ST_st66_fsm_65 = ap_CS_fsm) or (ap_ST_st75_fsm_74 = ap_CS_fsm) or (ap_ST_st84_fsm_83 = ap_CS_fsm))) then 
            grp_fu_160_p0 <= reg_205;
        elsif ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then 
            grp_fu_160_p0 <= reg_199;
        else 
            grp_fu_160_p0 <= reg_205;
        end if; 
    end process;


    -- grp_fu_160_p1 assign process. --
    grp_fu_160_p1_assign_proc : process(ap_CS_fsm, reg_199, tmp_10_i_reg_624)
    begin
        if (((ap_ST_st30_fsm_29 = ap_CS_fsm) or (ap_ST_st39_fsm_38 = ap_CS_fsm) or (ap_ST_st48_fsm_47 = ap_CS_fsm) or (ap_ST_st57_fsm_56 = ap_CS_fsm) or (ap_ST_st66_fsm_65 = ap_CS_fsm) or (ap_ST_st75_fsm_74 = ap_CS_fsm) or (ap_ST_st84_fsm_83 = ap_CS_fsm))) then 
            grp_fu_160_p1 <= reg_199;
        elsif ((ap_ST_st21_fsm_20 = ap_CS_fsm)) then 
            grp_fu_160_p1 <= tmp_10_i_reg_624;
        else 
            grp_fu_160_p1 <= tmp_10_i_reg_624;
        end if; 
    end process;

    grp_fu_164_ce <= ap_const_logic_1;
    grp_fu_164_p0 <= reg_194;

    -- grp_fu_164_p1 assign process. --
    grp_fu_164_p1_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st52_fsm_51 = ap_CS_fsm)) then 
            grp_fu_164_p1 <= ap_const_lv32_3E19389B;
        elsif ((ap_ST_st43_fsm_42 = ap_CS_fsm)) then 
            grp_fu_164_p1 <= ap_const_lv32_3EBC7736;
        elsif (((ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st70_fsm_69 = ap_CS_fsm))) then 
            grp_fu_164_p1 <= ap_const_lv32_3E193AF7;
        elsif (((ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st25_fsm_24 = ap_CS_fsm) or (ap_ST_st61_fsm_60 = ap_CS_fsm) or (ap_ST_st79_fsm_78 = ap_CS_fsm))) then 
            grp_fu_164_p1 <= ap_const_lv32_3D7929ED;
        else 
            grp_fu_164_p1 <= ap_const_lv32_3E19389B;
        end if; 
    end process;

    grp_fu_169_ce <= ap_const_logic_1;
    grp_fu_169_p0 <= tmp_i_reg_614;
    grp_fu_169_p1 <= ap_const_lv32_3E193AF7;
    grp_fu_177_ce <= ap_const_logic_1;
    grp_fu_177_p0 <= reg_205;
    grp_fu_180_ce <= ap_const_logic_1;

    -- grp_fu_180_p0 assign process. --
    grp_fu_180_p0_assign_proc : process(ap_CS_fsm, tmp_6_i3_fu_315_p1, tmp_14_i5_fu_341_p1, tmp_18_i6_fu_390_p1, tmp_22_i7_fu_481_p1, tmp_26_i8_fu_494_p1, tmp_30_i9_fu_499_p1, tmp_34_i1_fu_504_p1, tmp_38_i1_fu_508_p1)
    begin
        if ((ap_ST_st70_fsm_69 = ap_CS_fsm)) then 
            grp_fu_180_p0 <= tmp_38_i1_fu_508_p1;
        elsif ((ap_ST_st61_fsm_60 = ap_CS_fsm)) then 
            grp_fu_180_p0 <= tmp_34_i1_fu_504_p1;
        elsif ((ap_ST_st52_fsm_51 = ap_CS_fsm)) then 
            grp_fu_180_p0 <= tmp_30_i9_fu_499_p1;
        elsif ((ap_ST_st43_fsm_42 = ap_CS_fsm)) then 
            grp_fu_180_p0 <= tmp_26_i8_fu_494_p1;
        elsif ((ap_ST_st34_fsm_33 = ap_CS_fsm)) then 
            grp_fu_180_p0 <= tmp_22_i7_fu_481_p1;
        elsif ((ap_ST_st25_fsm_24 = ap_CS_fsm)) then 
            grp_fu_180_p0 <= tmp_18_i6_fu_390_p1;
        elsif ((ap_ST_st16_fsm_15 = ap_CS_fsm)) then 
            grp_fu_180_p0 <= tmp_14_i5_fu_341_p1;
        elsif ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
            grp_fu_180_p0 <= tmp_6_i3_fu_315_p1;
        else 
            grp_fu_180_p0 <= tmp_38_i1_fu_508_p1;
        end if; 
    end process;

    grp_fu_183_ce <= ap_const_logic_1;
    grp_fu_183_p0 <= std_logic_vector(resize(unsigned(reg_190),64));
    i_fu_217_p2 <= std_logic_vector(unsigned(indvar1_i_reg_135) + unsigned(ap_const_lv11_1));

    -- in_r_address0 assign process. --
    in_r_address0_assign_proc : process(ap_CS_fsm, tmp_8_fu_452_p1, tmp_2_fu_302_p1, tmp_4_fu_336_p1, tmp_7_fu_385_p1, tmp_11_fu_468_p1, tmp_13_fu_489_p1)
    begin
        if ((ap_ST_st34_fsm_33 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_13_fu_489_p1(21 - 1 downto 0);
        elsif ((ap_ST_st33_fsm_32 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_11_fu_468_p1(21 - 1 downto 0);
        elsif ((ap_ST_st32_fsm_31 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_8_fu_452_p1(21 - 1 downto 0);
        elsif ((ap_ST_st23_fsm_22 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_7_fu_385_p1(21 - 1 downto 0);
        elsif ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_4_fu_336_p1(21 - 1 downto 0);
        elsif ((ap_ST_st5_fsm_4 = ap_CS_fsm)) then 
            in_r_address0 <= tmp_2_fu_302_p1(21 - 1 downto 0);
        else 
            in_r_address0 <= tmp_13_fu_489_p1(21 - 1 downto 0);
        end if; 
    end process;


    -- in_r_address1 assign process. --
    in_r_address1_assign_proc : process(ap_CS_fsm, tmp_3_fu_310_p1, tmp_9_fu_460_p1, tmp_12_fu_476_p1)
    begin
        if ((ap_ST_st33_fsm_32 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_12_fu_476_p1(21 - 1 downto 0);
        elsif ((ap_ST_st32_fsm_31 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_9_fu_460_p1(21 - 1 downto 0);
        elsif ((ap_ST_st5_fsm_4 = ap_CS_fsm)) then 
            in_r_address1 <= tmp_3_fu_310_p1(21 - 1 downto 0);
        else 
            in_r_address1 <= tmp_12_fu_476_p1(21 - 1 downto 0);
        end if; 
    end process;


    -- in_r_ce0 assign process. --
    in_r_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st34_fsm_33 = ap_CS_fsm) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or (ap_ST_st23_fsm_22 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm))) then 
            in_r_ce0 <= ap_const_logic_1;
        else 
            in_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- in_r_ce1 assign process. --
    in_r_ce1_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st33_fsm_32 = ap_CS_fsm) or (ap_ST_st5_fsm_4 = ap_CS_fsm) or (ap_ST_st32_fsm_31 = ap_CS_fsm))) then 
            in_r_ce1 <= ap_const_logic_1;
        else 
            in_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_235_p2 <= std_logic_vector(unsigned(indvar_i_reg_147) + unsigned(ap_const_lv11_1));
    out_r_address0 <= tmp_8_reg_685(21 - 1 downto 0);

    -- out_r_ce0 assign process. --
    out_r_ce0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_st99_fsm_98 = ap_CS_fsm)) then 
            out_r_ce0 <= ap_const_logic_1;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_r_d0 <= tmp_14_reg_750;

    -- out_r_we0 assign process. --
    out_r_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st99_fsm_98 = ap_CS_fsm))) then 
            out_r_we0 <= ap_const_logic_1;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_addr10_fu_427_p2 <= std_logic_vector(unsigned(p_addr8_cast_reg_634) + unsigned(tmp_12_i_trn_cast_reg_598));
    p_addr11_fu_423_p2 <= std_logic_vector(unsigned(p_addr8_cast_reg_634) + unsigned(tmp_8_i_trn_cast_reg_567));
    p_addr1_fu_444_p0 <= p_addr6_cast_fu_431_p1;
    p_addr1_fu_444_p2 <= std_logic_vector(unsigned(p_addr1_fu_444_p0) + unsigned(tmp_12_i_trn_cast_reg_598));
    p_addr2_fu_284_p0 <= p_addr_cast_fu_281_p1;
    p_addr2_fu_284_p2 <= std_logic_vector(unsigned(p_addr2_fu_284_p0) + unsigned(tmp_4_i_trn_cast_fu_277_p1));
    p_addr3_fu_293_p0 <= p_addr_cast_fu_281_p1;
    p_addr3_fu_293_p2 <= std_logic_vector(unsigned(p_addr3_fu_293_p0) + unsigned(tmp_8_i_trn_cast_fu_290_p1));
    p_addr4_fu_439_p0 <= p_addr6_cast_fu_431_p1;
    p_addr4_fu_439_p2 <= std_logic_vector(unsigned(p_addr4_fu_439_p0) + unsigned(tmp_8_i_trn_cast_reg_567));
    p_addr5_fu_328_p2 <= std_logic_vector(unsigned(p_addr_cast_reg_557) + unsigned(tmp_12_i_trn_cast_fu_325_p1));
    
    p_addr6_reg_655_temp <= signed(p_addr6_reg_655);
    p_addr6_cast_fu_431_p1 <= std_logic_vector(resize(p_addr6_reg_655_temp,24));

    p_addr6_fu_417_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_402_p1) - unsigned(p_shl5_cast_fu_413_p1));
    p_addr7_fu_434_p0 <= p_addr6_cast_fu_431_p1;
    p_addr7_fu_434_p2 <= std_logic_vector(unsigned(p_addr7_fu_434_p0) + unsigned(tmp_4_i_trn_cast_reg_551));
    
    p_addr8_reg_629_temp <= signed(p_addr8_reg_629);
    p_addr8_cast_fu_374_p1 <= std_logic_vector(resize(p_addr8_reg_629_temp,24));

    p_addr8_fu_368_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_353_p1) - unsigned(p_shl3_cast_fu_364_p1));
    
    p_addr8_reg_629_temp <= signed(p_addr8_reg_629);
    p_addr9_fu_377_p0 <= std_logic_vector(resize(p_addr8_reg_629_temp,24));

    p_addr9_fu_377_p2 <= std_logic_vector(unsigned(p_addr9_fu_377_p0) + unsigned(tmp_4_i_trn_cast_reg_551));
    
    p_addr_reg_546_temp <= signed(p_addr_reg_546);
    p_addr_cast_fu_281_p1 <= std_logic_vector(resize(p_addr_reg_546_temp,24));

    p_addr_fu_271_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_255_p1) - unsigned(p_shl1_cast_fu_267_p1));
    p_shl1_cast_fu_267_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_259_p3),23));
    p_shl2_cast_fu_353_p1 <= std_logic_vector(resize(unsigned(tmp_5_fu_346_p3),23));
    p_shl3_cast_fu_364_p1 <= std_logic_vector(resize(unsigned(tmp_6_fu_357_p3),23));
    p_shl4_cast_fu_402_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_395_p3),23));
    p_shl5_cast_fu_413_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_406_p3),23));
    p_shl_cast_fu_255_p1 <= std_logic_vector(resize(unsigned(tmp_fu_247_p3),23));
    tmp6_i_fu_229_p2 <= std_logic_vector(unsigned(indvar_i_reg_147) + unsigned(ap_const_lv11_2));
    tmp_10_fu_406_p3 <= (tmp_i_12_reg_516 & ap_const_lv7_0);
    
    p_addr7_reg_670_temp <= signed(p_addr7_reg_670);
    tmp_11_fu_468_p0 <= std_logic_vector(resize(p_addr7_reg_670_temp,32));

    tmp_11_fu_468_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_468_p0),64));
    
    p_addr4_reg_675_temp <= signed(p_addr4_reg_675);
    tmp_12_fu_476_p0 <= std_logic_vector(resize(p_addr4_reg_675_temp,32));

    tmp_12_fu_476_p1 <= std_logic_vector(resize(unsigned(tmp_12_fu_476_p0),64));
    tmp_12_i_trn_cast_fu_325_p1 <= std_logic_vector(resize(unsigned(tmp6_i_reg_532),24));
    
    p_addr1_reg_680_temp <= signed(p_addr1_reg_680);
    tmp_13_fu_489_p0 <= std_logic_vector(resize(p_addr1_reg_680_temp,32));

    tmp_13_fu_489_p1 <= std_logic_vector(resize(unsigned(tmp_13_fu_489_p0),64));
    tmp_14_fu_512_p1 <= grp_fu_177_p1(16 - 1 downto 0);
    tmp_14_i5_fu_341_p1 <= std_logic_vector(resize(unsigned(reg_186),64));
    tmp_18_i6_fu_390_p1 <= std_logic_vector(resize(unsigned(reg_186),64));
    tmp_1_fu_259_p3 <= (indvar1_i_reg_135 & ap_const_lv7_0);
    tmp_22_i7_fu_481_p1 <= std_logic_vector(resize(unsigned(reg_186),64));
    tmp_26_i8_fu_494_p1 <= std_logic_vector(resize(unsigned(reg_190),64));
    
    p_addr2_reg_562_temp <= signed(p_addr2_reg_562);
    tmp_2_fu_302_p0 <= std_logic_vector(resize(p_addr2_reg_562_temp,32));

    tmp_2_fu_302_p1 <= std_logic_vector(resize(unsigned(tmp_2_fu_302_p0),64));
    tmp_30_i9_fu_499_p1 <= std_logic_vector(resize(unsigned(reg_186),64));
    tmp_34_i1_fu_504_p1 <= std_logic_vector(resize(unsigned(in_load_7_reg_715),64));
    tmp_38_i1_fu_508_p1 <= std_logic_vector(resize(unsigned(in_load_8_reg_725),64));
    
    p_addr3_reg_573_temp <= signed(p_addr3_reg_573);
    tmp_3_fu_310_p0 <= std_logic_vector(resize(p_addr3_reg_573_temp,32));

    tmp_3_fu_310_p1 <= std_logic_vector(resize(unsigned(tmp_3_fu_310_p0),64));
    
    p_addr5_reg_604_temp <= signed(p_addr5_reg_604);
    tmp_4_fu_336_p0 <= std_logic_vector(resize(p_addr5_reg_604_temp,32));

    tmp_4_fu_336_p1 <= std_logic_vector(resize(unsigned(tmp_4_fu_336_p0),64));
    tmp_4_i_trn_cast_fu_277_p1 <= std_logic_vector(resize(unsigned(indvar_i_reg_147),24));
    tmp_5_fu_346_p3 <= (i_reg_522 & ap_const_lv11_0);
    tmp_6_fu_357_p3 <= (i_reg_522 & ap_const_lv7_0);
    tmp_6_i3_fu_315_p1 <= std_logic_vector(resize(unsigned(reg_186),64));
    
    p_addr9_reg_640_temp <= signed(p_addr9_reg_640);
    tmp_7_fu_385_p0 <= std_logic_vector(resize(p_addr9_reg_640_temp,32));

    tmp_7_fu_385_p1 <= std_logic_vector(resize(unsigned(tmp_7_fu_385_p0),64));
    
    p_addr11_reg_660_temp <= signed(p_addr11_reg_660);
    tmp_8_fu_452_p0 <= std_logic_vector(resize(p_addr11_reg_660_temp,32));

    tmp_8_fu_452_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_452_p0),64));
    tmp_8_i_trn_cast_fu_290_p1 <= std_logic_vector(resize(unsigned(j_reg_537),24));
    
    p_addr10_reg_665_temp <= signed(p_addr10_reg_665);
    tmp_9_fu_460_p0 <= std_logic_vector(resize(p_addr10_reg_665_temp,32));

    tmp_9_fu_460_p1 <= std_logic_vector(resize(unsigned(tmp_9_fu_460_p0),64));
    tmp_fu_247_p3 <= (indvar1_i_reg_135 & ap_const_lv11_0);
    tmp_i_12_fu_211_p2 <= std_logic_vector(unsigned(indvar1_i_reg_135) + unsigned(ap_const_lv11_2));
    tmp_s_fu_395_p3 <= (tmp_i_12_reg_516 & ap_const_lv11_0);
end behav;
